{
  "api_version": "2012-01-25",
  "type": "json",
  "json_version": 1.0,
  "target_prefix": "SimpleWorkflowService",
  "signature_version": "v4",
  "timestamp_format": "unixTimestamp",
  "service_full_name": "Amazon Simple Workflow Service",
  "service_abbreviation": "Amazon SWF",
  "endpoint_prefix": "swf",
  "xmlnamespace": "http://swf.amazonaws.com/doc/2012-01-25",
  "documentation": "\n      <fullname>Amazon Simple Workflow Service</fullname>\n\n      <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate\n      work across distributed components. In Amazon SWF, a <emphasis>task</emphasis> represents a logical unit of\n      work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing\n      intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p>\n\n      <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about\n      underlying complexities such as tracking their progress and maintaining their state.</p>\n\n      <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see\n      the <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a>.</p>\n   ",
  "operations": {
    "CountClosedWorkflowExecutions": {
      "name": "CountClosedWorkflowExecutions",
      "input": {
        "shape_name": "CountClosedWorkflowExecutionsInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>The name of the domain containing the workflow executions to count.</p>\n   ",
            "required": true
          },
          "startTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions that meet the start time criteria of the filter are counted.\n    </p>\n    <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.\n      You must specify one of these in a request but not both.</note>\n  "
          },
          "closeTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions that meet the close time criteria of the filter are counted.\n    </p>\n    <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.\n      You must specify one of these in a request but not both.</note>\n  "
          },
          "executionFilter": {
            "shape_name": "WorkflowExecutionFilter",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The workflowId to pass of match the criteria of this filter.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n      <p>If specified, only workflow executions matching the <code>WorkflowId</code> in the filter are counted.</p>\n      <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and\n      <code>tagFilter</code> are mutually exclusive. You can specify at most one of these in a request.</note>\n   "
          },
          "typeFilter": {
            "shape_name": "WorkflowTypeFilter",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Name of the workflow type.\n      This field is required.\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "VersionOptional",
                "type": "string",
                "max_length": 64,
                "documentation": "\n    <p>\n      Version of the workflow type.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, indicates the type of the workflow executions to be counted.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "tagFilter": {
            "shape_name": "TagFilter",
            "type": "structure",
            "members": {
              "tag": {
                "shape_name": "Tag",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Specifies the tag that must be associated with the execution for it to meet the filter criteria.\n      This field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions that have a tag that matches the filter are counted.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "closeStatusFilter": {
            "shape_name": "CloseStatusFilter",
            "type": "structure",
            "members": {
              "status": {
                "shape_name": "CloseStatus",
                "enum": [
                  "COMPLETED",
                  "FAILED",
                  "CANCELED",
                  "TERMINATED",
                  "CONTINUED_AS_NEW",
                  "TIMED_OUT"
                ],
                "type": "string",
                "documentation": "\n    <p>\n      The close status that must match the close status of an execution for it to meet the criteria of this filter. This\n      field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions that match this close status are counted.\n      This filter has an affect only if <code>executionStatus</code>\n      is specified as <code>CLOSED</code>.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowExecutionCount",
        "type": "structure",
        "members": {
          "count": {
            "shape_name": "Count",
            "type": "integer",
            "min_length": 0,
            "documentation": "\n    <p>\n      The number of workflow executions.\n    </p>\n  ",
            "required": true
          },
          "truncated": {
            "shape_name": "Truncated",
            "type": "boolean",
            "documentation": "\n    <p>\n      If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a> or <a>CountClosedWorkflowExecutions</a>\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>Returns the number of closed workflow executions within the given domain that meet the specified filtering\n      criteria.</p>\n\n      <note>\n         This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n      </note>\n\n      <p><strong>Access Control</strong></p>\n\n      <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n\n      <ul>\n         <li>\n            <p>Use a <code>Resource</code> element with the domain name to limit the action to only specified\n            domains.</p>\n         </li>\n         <li>\n            <p>Use an <code>Action</code> element to allow or deny permission to call this action.</p>\n         </li>\n         <li>\n            <p>Constrain the following parameters by using a <code>Condition</code> element with the appropriate\n            keys.</p>\n            <ul>\n               <li>\n                  <p><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</p>\n               </li>\n               <li>\n                  <p><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</p>\n               </li>\n               <li>\n                  <p><code>typeFilter.version</code>: String constraint. The key is\n                  <code>swf:typeFilter.version</code>.</p>\n               </li>\n            </ul>\n         </li>\n      </ul>\n\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside\n      the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and\n      example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to\n      Amazon SWF Workflows</a>.</p>\n\n      <examples>\n         <example>\n            <name>CountClosedWorkflowExecutions Example</name>\n            <request>\n            POST / HTTP/1.1\n            Host: swf.us-east-1.amazonaws.com\n            User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n            Accept: application/json, text/javascript, */*\n            Accept-Language: en-us,en;q=0.5\n            Accept-Encoding: gzip,deflate\n            Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n            Keep-Alive: 115\n            Connection: keep-alive\n            Content-Type: application/x-amz-json-1.0\n            X-Requested-With: XMLHttpRequest\n            X-Amz-Date: Sun, 15 Jan 2012 02:42:47 GMT\n            X-Amz-Target: SimpleWorkflowService.CountClosedWorkflowExecutions\n            Content-Encoding: amz-1.0\n            X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=jFS74utjeATV7vj72CWdLToPCKW0RQse6OEDkafB+SA=\n            Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n            Content-Length: 157\n            Pragma: no-cache\n            Cache-Control: no-cache\n\n            {\n               \"domain\": \"867530901\",\n               \"closeTimeFilter\": {\"oldestDate\": 1325376070, \"latestDate\": 1356998399},\n               \"closeStatusFilter\": {\"status\": \"TIMED_OUT\"}\n            }\n            </request>\n            <response>\n            HTTP/1.1 200 OK\n            Content-Length: 29\n            Content-Type: application/json\n            x-amzn-RequestId: 9bfad387-3f22-11e1-9914-a356b6ea8bdf\n\n            { \"count\":3, \"truncated\":false }\n            </response>\n         </example>\n      </examples>\n   "
    },
    "CountOpenWorkflowExecutions": {
      "name": "CountOpenWorkflowExecutions",
      "input": {
        "shape_name": "CountOpenWorkflowExecutionsInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the workflow executions to count.\n    </p>\n  ",
            "required": true
          },
          "startTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      Specifies the start time criteria that workflow executions must meet in order to be counted.\n    </p>\n  ",
            "required": true
          },
          "typeFilter": {
            "shape_name": "WorkflowTypeFilter",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Name of the workflow type.\n      This field is required.\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "VersionOptional",
                "type": "string",
                "max_length": 64,
                "documentation": "\n    <p>\n      Version of the workflow type.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      Specifies the type of the workflow executions to be counted.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "tagFilter": {
            "shape_name": "TagFilter",
            "type": "structure",
            "members": {
              "tag": {
                "shape_name": "Tag",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Specifies the tag that must be associated with the execution for it to meet the filter criteria.\n      This field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions that have a tag that matches the filter are counted.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "executionFilter": {
            "shape_name": "WorkflowExecutionFilter",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The workflowId to pass of match the criteria of this filter.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions matching the <code>WorkflowId</code> in the filter are counted.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowExecutionCount",
        "type": "structure",
        "members": {
          "count": {
            "shape_name": "Count",
            "type": "integer",
            "min_length": 0,
            "documentation": "\n    <p>\n      The number of workflow executions.\n    </p>\n  ",
            "required": true
          },
          "truncated": {
            "shape_name": "Truncated",
            "type": "boolean",
            "documentation": "\n    <p>\n      If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a> or <a>CountClosedWorkflowExecutions</a>\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns the number of open workflow executions within the given domain that meet the specified filtering\n      criteria.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li>\n            <li>\n<code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li>\n            <li>\n<code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li>\n          </ul>\n</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> CountOpenWorkflowExecutions Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sat, 14 Jan 2012 23:13:29 GMT\n          X-Amz-Target: SimpleWorkflowService.CountOpenWorkflowExecutions\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=3v6shiGzWukq4KiX/5HFMIUF/w5qajhW4dp+6AKyOtY=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 150\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"startTimeFilter\":\n          {\"oldestDate\": 1325376070,\n          \"latestDate\": 1356998399},\n          \"tagFilter\":\n          {\"tag\": \"ricoh-the-dog\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 29\n          Content-Type: application/json\n          x-amzn-RequestId: 5ea6789e-3f05-11e1-9e8f-57bb03e21482\n\n          {\"count\":1,\"truncated\":false}\n        </response>\n      </example>\n    </examples>\n  "
    },
    "CountPendingActivityTasks": {
      "name": "CountPendingActivityTasks",
      "input": {
        "shape_name": "CountPendingActivityTasksInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain that contains the task list.\n    </p>\n  ",
            "required": true
          },
          "taskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "PendingTaskCount",
        "type": "structure",
        "members": {
          "count": {
            "shape_name": "Count",
            "type": "integer",
            "min_length": 0,
            "documentation": "\n    <p>\n      The number of tasks in the task list.\n    </p>\n  ",
            "required": true
          },
          "truncated": {
            "shape_name": "Truncated",
            "type": "boolean",
            "documentation": "\n    <p>\n      If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains the count of tasks in a task list.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns the estimated number of activity tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact.\n      If you specify a task list that no activity task was ever scheduled in then 0 will be returned.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> CountPendingActivityTasks Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 03:29:28 GMT\n          X-Amz-Target: SimpleWorkflowService.CountPendingActivityTasks\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=eCNiyyl5qmP0gGQ0hM8LqeRzxEvVZ0LAjE4oxVzzk9w=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 70\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          }\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 29\n          Content-Type: application/json\n          x-amzn-RequestId: 4b977c76-3ff2-11e1-a23a-99d60383ae71\n\n          {\"count\":1,\"truncated\":false}\n        </response>\n\n      </example>\n\n    </examples>\n\n  "
    },
    "CountPendingDecisionTasks": {
      "name": "CountPendingDecisionTasks",
      "input": {
        "shape_name": "CountPendingDecisionTasksInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain that contains the task list.\n    </p>\n  ",
            "required": true
          },
          "taskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "PendingTaskCount",
        "type": "structure",
        "members": {
          "count": {
            "shape_name": "Count",
            "type": "integer",
            "min_length": 0,
            "documentation": "\n    <p>\n      The number of tasks in the task list.\n    </p>\n  ",
            "required": true
          },
          "truncated": {
            "shape_name": "Truncated",
            "type": "boolean",
            "documentation": "\n    <p>\n      If set to true, indicates that the actual count was more than the maximum supported by this API and the count returned is the truncated value.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains the count of tasks in a task list.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns the estimated number of decision tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact.\n      If you specify a task list that no decision task was ever scheduled in then 0 will be returned.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n\n      <example>\n\n        <name> CountPendingDecisionTasks Example </name>\n\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 23:25:57 GMT\n          X-Amz-Target: SimpleWorkflowService.CountPendingDecisionTasks\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=i9tUkWnZBLfn/T6BOymajCtwArAll6Stuh1x2C4dbsE=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 70\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          }\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 29\n          Content-Type: application/json\n          x-amzn-RequestId: 4718a364-3fd0-11e1-9914-a356b6ea8bdf\n\n          {\"count\": 2,\n          \"truncated\": false}\n        </response>\n\n      </example>\n\n    </examples>\n\n  "
    },
    "DeprecateActivityType": {
      "name": "DeprecateActivityType",
      "input": {
        "shape_name": "DeprecateActivityTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which the activity type is registered.\n    </p>\n  ",
            "required": true
          },
          "activityType": {
            "shape_name": "ActivityType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The activity type to deprecate.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "TypeDeprecatedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the specified activity or workflow type was already deprecated.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Deprecates the specified <i>activity type</i>.\n      After an activity type has been deprecated, you cannot create new tasks of that activity type.\n      Tasks of this type that were scheduled before the type was deprecated will continue to run.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li>\n            <li>\n<code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li>\n          </ul>\n</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> DeprecateActivityType Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 05:01:06 GMT\n          X-Amz-Target: SimpleWorkflowService.DeprecateActivityType\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=iX/mNMtNH6IaSNwfZq9hHOhDlLnp7buuj9tO93kRIrQ=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 95\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: 191ee17e-3fff-11e1-a23a-99d60383ae71\n        </response>\n      </example>\n    </examples>\n  "
    },
    "DeprecateDomain": {
      "name": "DeprecateDomain",
      "input": {
        "shape_name": "DeprecateDomainInput",
        "type": "structure",
        "members": {
          "name": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The name of the domain to deprecate.\n      </p>\n   ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "DomainDeprecatedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the specified domain has been deprecated.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Deprecates the specified domain. After a domain has been deprecated it cannot be used to create new workflow executions\n         or register new types. However, you can still use visibility actions on this domain.\n         Deprecating a domain also deprecates all activity and workflow types registered in the domain.\n         Executions that were started before the domain was deprecated will continue to run.\n      </p>\n      <note>\n         This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n      </note>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n     <ul>\n       <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n       <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n       <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n     </ul>\n     <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n       see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n      <examples>\n         <example>\n             <name>DeprecateDomain Example</name>\n\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Mon, 16 Jan 2012 05:07:47 GMT\nX-Amz-Target: SimpleWorkflowService.DeprecateDomain\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=BkJDtbH9uZvrarqXTkBEYuYHO7PPygRI8ykV29Dz/5M=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 21\nPragma: no-cache\nCache-Control: no-cache\n\n{\"name\": \"867530901\"}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\nx-amzn-RequestId: 0800c01a-4000-11e1-9914-a356b6ea8bdf\n</response>\n\n      </example>\n      </examples>\n   "
    },
    "DeprecateWorkflowType": {
      "name": "DeprecateWorkflowType",
      "input": {
        "shape_name": "DeprecateWorkflowTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which the workflow type is registered.\n    </p>\n  ",
            "required": true
          },
          "workflowType": {
            "shape_name": "WorkflowType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The workflow type to deprecate.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "TypeDeprecatedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the specified activity or workflow type was already deprecated.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated, you cannot create new executions\n      of that type. Executions that were started before the type was deprecated will continue to run.\n      A deprecated workflow type may still be used when calling visibility actions.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li>\n            <li>\n<code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li>\n          </ul>\n        </li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n\n      <example>\n\n        <name> DeprecateWorkflowType Example </name>\n\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 05:04:47 GMT\n          X-Amz-Target: SimpleWorkflowService.DeprecateWorkflowType\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=BGrr1djQvp+YLq3ci2ffpK8KWhZm/PakBL2fFhc3zds=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 102\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: 9c8d6d3b-3fff-11e1-9e8f-57bb03e21482\n        </response>\n\n      </example>\n\n    </examples>\n\n  "
    },
    "DescribeActivityType": {
      "name": "DescribeActivityType",
      "input": {
        "shape_name": "DescribeActivityTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which the activity type is registered.\n    </p>\n  ",
            "required": true
          },
          "activityType": {
            "shape_name": "ActivityType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The activity type to describe.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ActivityTypeDetail",
        "type": "structure",
        "members": {
          "typeInfo": {
            "shape_name": "ActivityTypeInfo",
            "type": "structure",
            "members": {
              "activityType": {
                "shape_name": "ActivityType",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                    "required": true
                  },
                  "version": {
                    "shape_name": "Version",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 64,
                    "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n      <p>\n         The <a>ActivityType</a> type structure representing the activity type.\n      </p>\n   ",
                "required": true
              },
              "status": {
                "shape_name": "RegistrationStatus",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "DEPRECATED"
                ],
                "documentation": "\n      <p>\n         The current status of the activity type.\n      </p>\n   ",
                "required": true
              },
              "description": {
                "shape_name": "Description",
                "type": "string",
                "max_length": 1024,
                "documentation": "\n      <p>\n         The description of the activity type provided in <a>RegisterActivityType</a>.\n      </p>\n   "
              },
              "creationDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n         <p>\n         The date and time this activity type was created through <a>RegisterActivityType</a>.\n         </p>\n   ",
                "required": true
              },
              "deprecationDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n      <p>\n         If DEPRECATED, the date and time <a>DeprecateActivityType</a> was called.\n      </p>\n   "
              }
            },
            "documentation": "\n    <p>\n      General information about the activity type.\n    </p>\n    <p>\n      The status of activity type (returned in the ActivityTypeInfo structure) can be one of the following.\n    </p>\n    <ul>\n      <li>\n        <b>REGISTERED</b>: The type is registered and available. Workers supporting this\n        type should be running.\n      </li>\n      <li>\n        <b>DEPRECATED</b>: The type was deprecated using <a>DeprecateActivityType</a>, but is\n        still in use. You should keep workers supporting this type running.\n        You cannot create new tasks of this type.\n      </li>\n    </ul>\n  ",
            "required": true
          },
          "configuration": {
            "shape_name": "ActivityTypeConfiguration",
            "type": "structure",
            "members": {
              "defaultTaskStartToCloseTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n      <p>\n         The optional default maximum duration for tasks of an activity type specified when\n         registering the activity type. You can\n         override this default when scheduling a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   "
              },
              "defaultTaskHeartbeatTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n      <p>\n         The optional default maximum time, specified when registering the activity type,\n         before which a worker processing a task must report progress by\n         calling <a>RecordActivityTaskHeartbeat</a>.\n         You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n         If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker\n         receives an <code>UnknownResource</code> fault.\n         In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   "
              },
              "defaultTaskList": {
                "shape_name": "TaskList",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n         <p>\n         The optional default task list specified for this activity type at registration. This default task list is used\n         if a task list is not provided when a task is scheduled through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n         You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n         </p>\n   "
              },
              "defaultTaskScheduleToStartTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n      <p>\n         The optional default maximum duration, specified when registering the activity type,\n         that a task of an activity type can wait before being assigned to a worker.\n         You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   "
              },
              "defaultTaskScheduleToCloseTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n      <p>\n         The optional default maximum duration, specified when registering the activity type,\n         for tasks of this activity type.\n         You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   "
              }
            },
            "documentation": "\n    <p>\n      The configuration settings registered with the activity type.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": "\n    <p>\n      Detailed information about an activity type.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns information about the specified activity type. This includes\n      configuration settings provided at registration time as well as other general information about the type.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li>\n            <li>\n<code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li>\n          </ul>\n</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> DescribeActivityType Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 03:04:10 GMT\n          X-Amz-Target: SimpleWorkflowService.DescribeActivityType\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=XiGRwOZNLt+ic3VBWvIlRGdcFcRJVSE8J7zyZLU3oXg=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 95\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 387\n          Content-Type: application/json\n          x-amzn-RequestId: 98d56ff5-3f25-11e1-9b11-7182192d0b57\n\n          {\"configuration\":\n          {\"defaultTaskHeartbeatTimeout\": \"120\",\n          \"defaultTaskList\":\n          {\"name\": \"mainTaskList\"},\n          \"defaultTaskScheduleToCloseTimeout\": \"900\",\n          \"defaultTaskScheduleToStartTimeout\": \"300\",\n          \"defaultTaskStartToCloseTimeout\": \"600\"},\n          \"typeInfo\":\n          {\"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"},\n          \"creationDate\": 1326586446.471,\n          \"description\": \"Verify the customer credit\",\n          \"status\": \"REGISTERED\"}\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "DescribeDomain": {
      "name": "DescribeDomain",
      "input": {
        "shape_name": "DescribeDomainInput",
        "type": "structure",
        "members": {
          "name": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The name of the domain to describe.\n      </p>\n   ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DomainDetail",
        "type": "structure",
        "members": {
          "domainInfo": {
            "shape_name": "DomainInfo",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "DomainName",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the domain. This name is unique within the account.\n    </p>\n  ",
                "required": true
              },
              "status": {
                "shape_name": "RegistrationStatus",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "DEPRECATED"
                ],
                "documentation": "\n   <p>\n      The status of the domain:\n   </p>\n   <ul>\n      <li>\n         <b>REGISTERED</b>: The domain is properly registered and available. You can use this domain\n         for registering types and creating new workflow executions.\n      </li>\n      <li>\n         <b>DEPRECATED</b>: The domain was deprecated using <a>DeprecateDomain</a>, but is\n         still in use. You should not create new workflow executions in this domain.\n      </li>\n   </ul>\n  ",
                "required": true
              },
              "description": {
                "shape_name": "Description",
                "type": "string",
                "max_length": 1024,
                "documentation": "\n    <p>\n      The description of the domain provided through <a>RegisterDomain</a>.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      Contains general information about a domain.\n    </p>\n  ",
            "required": true
          },
          "configuration": {
            "shape_name": "DomainConfiguration",
            "type": "structure",
            "members": {
              "workflowExecutionRetentionPeriodInDays": {
                "shape_name": "DurationInDays",
                "type": "string",
                "min_length": 1,
                "max_length": 8,
                "documentation": "\n    <p>\n      The retention period for workflow executions in this domain.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      Contains the configuration settings of a domain.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": "\n    <p>\n      Contains details of a domain.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Returns information about the specified domain including description and status.\n     </p>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n     <ul>\n       <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n       <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n       <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n     </ul>\n     <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n       see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n\n<examples>\n    <example>\n       <name> DescribeDomain Example </name>\n\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Sun, 15 Jan 2012 03:13:33 GMT\nX-Amz-Target: SimpleWorkflowService.DescribeDomain\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=IFJtq3M366CHqMlTpyqYqd9z0ChCoKDC5SCJBsLifu4=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 21\nPragma: no-cache\nCache-Control: no-cache\n\n{\"name\": \"867530901\"}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 137\nContent-Type: application/json\nx-amzn-RequestId: e86a6779-3f26-11e1-9a27-0760db01a4a8\n\n{\"configuration\":\n  {\"workflowExecutionRetentionPeriodInDays\": \"60\"},\n \"domainInfo\":\n  {\"description\": \"music\",\n   \"name\": \"867530901\",\n   \"status\": \"REGISTERED\"}\n}\n</response>\n\n    </example>\n\n</examples>\n"
    },
    "DescribeWorkflowExecution": {
      "name": "DescribeWorkflowExecution",
      "input": {
        "shape_name": "DescribeWorkflowExecutionInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the workflow execution.\n    </p>\n  ",
            "required": true
          },
          "execution": {
            "shape_name": "WorkflowExecution",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                "required": true
              },
              "runId": {
                "shape_name": "RunId",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The workflow execution to describe.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowExecutionDetail",
        "type": "structure",
        "members": {
          "executionInfo": {
            "shape_name": "WorkflowExecutionInfo",
            "type": "structure",
            "members": {
              "execution": {
                "shape_name": "WorkflowExecution",
                "type": "structure",
                "members": {
                  "workflowId": {
                    "shape_name": "WorkflowId",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                    "required": true
                  },
                  "runId": {
                    "shape_name": "RunId",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 64,
                    "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      The workflow execution this information is about.\n    </p>\n  ",
                "required": true
              },
              "workflowType": {
                "shape_name": "WorkflowType",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                    "required": true
                  },
                  "version": {
                    "shape_name": "Version",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 64,
                    "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      The type of the workflow execution.\n    </p>\n  ",
                "required": true
              },
              "startTimestamp": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      The time when the execution was started.\n    </p>\n  ",
                "required": true
              },
              "closeTimestamp": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      The time when the workflow execution was closed. Set only if the execution status is CLOSED.\n    </p>\n  "
              },
              "executionStatus": {
                "shape_name": "ExecutionStatus",
                "enum": [
                  "OPEN",
                  "CLOSED"
                ],
                "type": "string",
                "documentation": "\n    <p>\n      The current status of the execution.\n    </p>\n  ",
                "required": true
              },
              "closeStatus": {
                "shape_name": "CloseStatus",
                "enum": [
                  "COMPLETED",
                  "FAILED",
                  "CANCELED",
                  "TERMINATED",
                  "CONTINUED_AS_NEW",
                  "TIMED_OUT"
                ],
                "type": "string",
                "documentation": "\n    <p>\n      If the execution status is closed then this specifies how the execution was closed:</p>\n      <ul>\n      <li>COMPLETED: the execution was successfully completed.</li>\n      <li>CANCELED: the execution was canceled.Cancellation allows the implementation to gracefully clean up before the execution is closed.</li>\n      <li>TERMINATED: the execution was force terminated.</li>\n      <li>FAILED: the execution failed to complete.</li>\n      <li>TIMED_OUT: the execution did not complete in the alloted time and was automatically timed out.</li>\n      <li>CONTINUED_AS_NEW: the execution is logically continued. This means the current execution was completed and a new execution was started to carry on\n      the workflow.</li>\n      </ul>\n  "
              },
              "parent": {
                "shape_name": "WorkflowExecution",
                "type": "structure",
                "members": {
                  "workflowId": {
                    "shape_name": "WorkflowId",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                    "required": true
                  },
                  "runId": {
                    "shape_name": "RunId",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 64,
                    "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      If this workflow execution is a child of another execution then contains\n      the workflow execution that started this execution.\n    </p>\n  "
              },
              "tagList": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "string",
                  "min_length": 1,
                  "max_length": 256,
                  "documentation": null
                },
                "max_length": 5,
                "documentation": "\n    <p>\n      The list of tags associated with the workflow execution. Tags can be used to identify and list workflow executions\n      of interest through the visibility APIs. A workflow execution can have a maximum of 5 tags.\n    </p>\n  "
              },
              "cancelRequested": {
                "shape_name": "Canceled",
                "type": "boolean",
                "documentation": "\n    <p>\n      Set to true if a cancellation is requested for this workflow execution.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      Information about the workflow execution.\n    </p>\n  ",
            "required": true
          },
          "executionConfiguration": {
            "shape_name": "WorkflowExecutionConfiguration",
            "type": "structure",
            "members": {
              "taskStartToCloseTimeout": {
                "shape_name": "DurationInSeconds",
                "type": "string",
                "min_length": 1,
                "max_length": 8,
                "documentation": "\n    <p>\n      The maximum duration allowed for decision tasks for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  ",
                "required": true
              },
              "executionStartToCloseTimeout": {
                "shape_name": "DurationInSeconds",
                "type": "string",
                "min_length": 1,
                "max_length": 8,
                "documentation": "\n    <p>\n      The total duration for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  ",
                "required": true
              },
              "taskList": {
                "shape_name": "TaskList",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      The task list used for the decision tasks generated for this workflow execution.\n    </p>\n  ",
                "required": true
              },
              "childPolicy": {
                "shape_name": "ChildPolicy",
                "type": "string",
                "enum": [
                  "TERMINATE",
                  "REQUEST_CANCEL",
                  "ABANDON"
                ],
                "documentation": "\n   <p>\n      The policy to use for the child workflow executions if this workflow execution is terminated,\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n      The supported child policies are:</p>\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The configuration settings for this workflow execution including timeout values, tasklist etc.\n    </p>\n  ",
            "required": true
          },
          "openCounts": {
            "shape_name": "WorkflowExecutionOpenCounts",
            "type": "structure",
            "members": {
              "openActivityTasks": {
                "shape_name": "Count",
                "type": "integer",
                "min_length": 0,
                "documentation": "\n    <p>\n      The count of activity tasks whose status is OPEN.\n    </p>\n  ",
                "required": true
              },
              "openDecisionTasks": {
                "shape_name": "OpenDecisionTasksCount",
                "type": "integer",
                "min_length": 0,
                "max_length": 1,
                "documentation": "\n    <p>\n      The count of decision tasks whose status is OPEN.\n      A workflow execution can have at most one open decision task.\n    </p>\n  ",
                "required": true
              },
              "openTimers": {
                "shape_name": "Count",
                "type": "integer",
                "min_length": 0,
                "documentation": "\n    <p>\n      The count of timers started by this workflow execution that have not fired yet.\n    </p>\n  ",
                "required": true
              },
              "openChildWorkflowExecutions": {
                "shape_name": "Count",
                "type": "integer",
                "min_length": 0,
                "documentation": "\n    <p>\n      The count of child workflow executions whose status is OPEN.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The number of tasks for this workflow execution. This includes open and closed tasks of all types.\n    </p>\n  ",
            "required": true
          },
          "latestActivityTaskTimestamp": {
            "shape_name": "Timestamp",
            "type": "timestamp",
            "documentation": "\n    <p>\n      The time when the last activity task was scheduled for this workflow execution. You can use this information to determine if the\n      workflow has not made progress for an unusually long period of time and might require a corrective action.\n    </p>\n  "
          },
          "latestExecutionContext": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      The latest executionContext provided by the decider for this workflow execution.\n      A decider can provide an executionContext, which is a free form string, when closing a decision task\n      using <a>RespondDecisionTaskCompleted</a>.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains details about a workflow execution.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns information about the specified workflow execution including its type and some statistics.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> DescribeWorkflowExecution Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 02:05:18 GMT\n          X-Amz-Target: SimpleWorkflowService.DescribeWorkflowExecution\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=ufQVcSkfUyGPLiS8xbkEBqEc2PmEEE/3Lb9Kr8yozs8=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 127\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"execution\":\n          {\"workflowId\": \"20110927-T-1\",\n          \"runId\": \"06b8f87a-24b3-40b6-9ceb-9676f28e9493\"}\n          }\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 577\n          Content-Type: application/json\n          x-amzn-RequestId: 5f85ef79-3f1d-11e1-9e8f-57bb03e21482\n\n          {\"executionConfiguration\":\n          {\"childPolicy\": \"TERMINATE\",\n          \"executionStartToCloseTimeout\": \"3600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"},\n          \"taskStartToCloseTimeout\": \"600\"},\n          \"executionInfo\":\n          {\"cancelRequested\": false,\n          \"execution\":\n          {\"runId\": \"06b8f87a-24b3-40b6-9ceb-9676f28e9493\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"executionStatus\": \"OPEN\",\n          \"startTimestamp\": 1326592619.474,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          },\n          \"openCounts\":\n          {\"openActivityTasks\": 0,\n          \"openChildWorkflowExecutions\": 0,\n          \"openDecisionTasks\": 1,\n          \"openTimers\": 0}\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "DescribeWorkflowType": {
      "name": "DescribeWorkflowType",
      "input": {
        "shape_name": "DescribeWorkflowTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which this workflow type is registered.\n    </p>\n  ",
            "required": true
          },
          "workflowType": {
            "shape_name": "WorkflowType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The workflow type to describe.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowTypeDetail",
        "type": "structure",
        "members": {
          "typeInfo": {
            "shape_name": "WorkflowTypeInfo",
            "type": "structure",
            "members": {
              "workflowType": {
                "shape_name": "WorkflowType",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                    "required": true
                  },
                  "version": {
                    "shape_name": "Version",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 64,
                    "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      The workflow type this information is about.\n    </p>\n  ",
                "required": true
              },
              "status": {
                "shape_name": "RegistrationStatus",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "DEPRECATED"
                ],
                "documentation": "\n    <p>\n      The current status of the workflow type.\n    </p>\n  ",
                "required": true
              },
              "description": {
                "shape_name": "Description",
                "type": "string",
                "max_length": 1024,
                "documentation": "\n    <p>\n      The description of the type registered through <a>RegisterWorkflowType</a>.\n    </p>\n  "
              },
              "creationDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      The date when this type was registered.\n    </p>\n  ",
                "required": true
              },
              "deprecationDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      If the type is in deprecated state, then it is set to the date when the type was deprecated.\n    </p>\n  "
              }
            },
            "documentation": "\n   <p>General information about the workflow type.</p>\n   <p>The status of the workflow type (returned in the WorkflowTypeInfo structure) can be one of the following.</p>\n   <ul>\n      <li>\n<b>REGISTERED</b>: The type is registered and available. Workers supporting this type should be running.</li>\n      <li>\n<b>DEPRECATED</b>: The type was deprecated using <a>DeprecateWorkflowType</a>, but is still in use. You should\n      keep workers supporting this type running. You cannot create new workflow executions of this type.</li>\n   </ul>\n   ",
            "required": true
          },
          "configuration": {
            "shape_name": "WorkflowTypeConfiguration",
            "type": "structure",
            "members": {
              "defaultTaskStartToCloseTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n    <p>\n      The optional default maximum duration, specified when registering the workflow type, that a decision task for executions\n      of this workflow type might take before returning completion or\n      failure. If the task does not close in the specified time then the task is automatically timed out and rescheduled. If\n      the decider eventually reports a completion or failure, it is ignored.\n      This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or\n      the <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
              },
              "defaultExecutionStartToCloseTimeout": {
                "shape_name": "DurationInSecondsOptional",
                "type": "string",
                "max_length": 8,
                "documentation": "\n    <p>\n      The optional default maximum duration, specified when registering the workflow type, for executions of this workflow type.\n      This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or\n      the <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
              },
              "defaultTaskList": {
                "shape_name": "TaskList",
                "type": "structure",
                "members": {
                  "name": {
                    "shape_name": "Name",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                    "required": true
                  }
                },
                "documentation": "\n    <p>\n      The optional default task list, specified when registering the workflow type, for decisions tasks scheduled for workflow executions of this type.\n      This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or\n      the <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n    </p>\n  "
              },
              "defaultChildPolicy": {
                "shape_name": "ChildPolicy",
                "type": "string",
                "enum": [
                  "TERMINATE",
                  "REQUEST_CANCEL",
                  "ABANDON"
                ],
                "documentation": "\n   <p>\n      The optional default policy to use for the child workflow executions when a workflow execution of this type is terminated,\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n      This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or\n      the <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n      The supported child policies are:</p>\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n  "
              }
            },
            "documentation": "\n      <p>Configuration settings of the workflow type registered through <a>RegisterWorkflowType</a></p>\n   ",
            "required": true
          }
        },
        "documentation": "\n      <p>Contains details about a workflow type.</p>\n   "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns information about the specified <i>workflow type</i>. This includes\n      configuration settings specified when the type was registered and other information\n      such as creation date, current status,  etc.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li>\n            <li>\n<code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li>\n          </ul>\n        </li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> DescribeWorkflowType Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 22:40:40 GMT\n          X-Amz-Target: SimpleWorkflowService.DescribeWorkflowType\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=iGt8t83OmrURqu0pKYbcW6mNdjXbFomevCBPUPQEbaM=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 102\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 348\n          Content-Type: application/json\n          x-amzn-RequestId: f35a8e7f-3fc9-11e1-a23a-99d60383ae71\n\n          {\"configuration\":\n          {\"defaultChildPolicy\": \"TERMINATE\",\n          \"defaultExecutionStartToCloseTimeout\": \"3600\",\n          \"defaultTaskList\":\n          {\"name\": \"mainTaskList\"},\n          \"defaultTaskStartToCloseTimeout\": \"600\"},\n          \"typeInfo\":\n          {\"creationDate\": 1326481174.027,\n          \"description\": \"Handle customer orders\",\n          \"status\": \"REGISTERED\",\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "GetWorkflowExecutionHistory": {
      "name": "GetWorkflowExecutionHistory",
      "input": {
        "shape_name": "GetWorkflowExecutionHistoryInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the workflow execution.\n    </p>\n  ",
            "required": true
          },
          "execution": {
            "shape_name": "WorkflowExecution",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                "required": true
              },
              "runId": {
                "shape_name": "RunId",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      Specifies the workflow execution for which to return the history.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If a <code>NextPageToken</code> is returned, the result has more than one pages. To get the next page,\n      repeat the call and specify the nextPageToken with all other arguments unchanged.\n    </p>\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      Specifies the maximum number of history events returned in one page.\n      The next page in the result is identified by the <code>NextPageToken</code> returned.\n      By default 100 history events are returned in a page but the caller can override this\n      value to a page size <i>smaller</i> than the default. You cannot specify a page size\n      larger than 100.\n      Note that the number of events may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the events in reverse order. By default the results are returned in ascending order\n      of the <code>eventTimeStamp</code> of the events.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "History",
        "type": "structure",
        "members": {
          "events": {
            "shape_name": "HistoryEventList",
            "type": "list",
            "members": {
              "shape_name": "HistoryEvent",
              "type": "structure",
              "members": {
                "eventTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The date and time when the event occurred.\n    </p>\n  ",
                  "required": true
                },
                "eventType": {
                  "shape_name": "EventType",
                  "type": "string",
                  "enum": [
                    "WorkflowExecutionStarted",
                    "WorkflowExecutionCancelRequested",
                    "WorkflowExecutionCompleted",
                    "CompleteWorkflowExecutionFailed",
                    "WorkflowExecutionFailed",
                    "FailWorkflowExecutionFailed",
                    "WorkflowExecutionTimedOut",
                    "WorkflowExecutionCanceled",
                    "CancelWorkflowExecutionFailed",
                    "WorkflowExecutionContinuedAsNew",
                    "ContinueAsNewWorkflowExecutionFailed",
                    "WorkflowExecutionTerminated",
                    "DecisionTaskScheduled",
                    "DecisionTaskStarted",
                    "DecisionTaskCompleted",
                    "DecisionTaskTimedOut",
                    "ActivityTaskScheduled",
                    "ScheduleActivityTaskFailed",
                    "ActivityTaskStarted",
                    "ActivityTaskCompleted",
                    "ActivityTaskFailed",
                    "ActivityTaskTimedOut",
                    "ActivityTaskCanceled",
                    "ActivityTaskCancelRequested",
                    "RequestCancelActivityTaskFailed",
                    "WorkflowExecutionSignaled",
                    "MarkerRecorded",
                    "RecordMarkerFailed",
                    "TimerStarted",
                    "StartTimerFailed",
                    "TimerFired",
                    "TimerCanceled",
                    "CancelTimerFailed",
                    "StartChildWorkflowExecutionInitiated",
                    "StartChildWorkflowExecutionFailed",
                    "ChildWorkflowExecutionStarted",
                    "ChildWorkflowExecutionCompleted",
                    "ChildWorkflowExecutionFailed",
                    "ChildWorkflowExecutionTimedOut",
                    "ChildWorkflowExecutionCanceled",
                    "ChildWorkflowExecutionTerminated",
                    "SignalExternalWorkflowExecutionInitiated",
                    "SignalExternalWorkflowExecutionFailed",
                    "ExternalWorkflowExecutionSignaled",
                    "RequestCancelExternalWorkflowExecutionInitiated",
                    "RequestCancelExternalWorkflowExecutionFailed",
                    "ExternalWorkflowExecutionCancelRequested"
                  ],
                  "documentation": "\n      <p>\n         The type of the history event.\n      </p>\n  ",
                  "required": true
                },
                "eventId": {
                  "shape_name": "EventId",
                  "type": "long",
                  "documentation": "\n    <p>\n      The system generated id of the event. This id uniquely identifies the event with in the workflow execution history.\n    </p>\n  ",
                  "required": true
                },
                "workflowExecutionStartedEventAttributes": {
                  "shape_name": "WorkflowExecutionStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the workflow execution (if any).\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration of decision tasks for this workflow type.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions if this workflow execution is terminated,\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n\n      The supported child policies are:\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n    </p>\n  ",
                      "required": true
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list for scheduling the decision tasks for this workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow type of this execution.\n    </p>\n  ",
                      "required": true
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n    <p>\n      The list of tags associated with this workflow execution. An execution can have up to 5 tags.\n    </p>\n  "
                    },
                    "continuedExecutionRunId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      If this workflow execution was started due to a <code>ContinueAsNewWorkflowExecution</code> decision, then\n      it contains the <code>runId</code> of the previous workflow execution that was closed and continued as this execution.\n    </p>\n  "
                    },
                    "parentWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The source workflow execution that started this workflow execution. The member is not set if the workflow execution was\n      not started by a workflow.\n    </p>\n  "
                    },
                    "parentInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this workflow execution. The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCompletedEventAttributes": {
                  "shape_name": "WorkflowExecutionCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The result produced by the workflow execution upon successful completion.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "completeWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "CompleteWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "CompleteWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CompleteWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionFailedEventAttributes": {
                  "shape_name": "WorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The descriptive reason provided for the failure (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>FailWorkflowExecution</code> decision to fail this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "failWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "FailWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "FailWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>FailWorkflowExecution</code> decision to fail this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>FailWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionTimedOutEventAttributes": {
                  "shape_name": "WorkflowExecutionTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "WorkflowExecutionTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of timeout that caused this event.\n    </p>\n  ",
                      "required": true
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n      <p>\n         The policy used for the child workflow executions of this workflow execution.\n         The supported child policies are:\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n      </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCanceledEventAttributes": {
                  "shape_name": "WorkflowExecutionCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details for the cancellation (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "cancelWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "CancelWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "CancelWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CancelWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionContinuedAsNewEventAttributes": {
                  "shape_name": "WorkflowExecutionContinuedAsNewEventAttributes",
                  "type": "structure",
                  "members": {
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the new workflow execution.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "newExecutionRunId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the new workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The total duration allowed for the new workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      Represents a task list.\n    </p>\n  ",
                      "required": true
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n   <p>\n      The maximum duration of decision tasks for the new workflow execution.\n   </p>\n   <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions of the new execution if it is terminated\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.</p>\n\n      <p>The supported child policies are:</p>\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n      receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n  ",
                      "required": true
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n   <p>\n      The list of tags associated with the new workflow execution.\n   </p>\n  "
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      Represents a workflow type.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionContinuedAsNew</code> then this member is set and\n      provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "continueAsNewWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "ContinueAsNewWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "ContinueAsNewWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "WORKFLOW_TYPE_DEPRECATED",
                        "WORKFLOW_TYPE_DOES_NOT_EXIST",
                        "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_CHILD_POLICY_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ContinueAsNewWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionTerminatedEventAttributes": {
                  "shape_name": "WorkflowExecutionTerminatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "TerminateReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason provided for the termination (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details provided for the termination (if any).\n    </p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n      <p>\n         The policy used for the child workflow executions of this workflow execution.\n         The supported child policies are:</p>\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "WorkflowExecutionTerminatedCause",
                      "type": "string",
                      "enum": [
                        "CHILD_POLICY_APPLIED",
                        "EVENT_LIMIT_EXCEEDED",
                        "OPERATOR_INITIATED"
                      ],
                      "documentation": "\n    <p>\n      If set, indicates that the workflow execution was automatically terminated, and specifies the cause.\n      This happens if the parent workflow execution times out or is terminated and the child policy is set to terminate child executions.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionTerminated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCancelRequestedEventAttributes": {
                  "shape_name": "WorkflowExecutionCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "externalWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution for which the cancellation was requested.\n    </p>\n  "
                    },
                    "externalInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this workflow execution.The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "WorkflowExecutionCancelRequestedCause",
                      "type": "string",
                      "enum": [
                        "CHILD_POLICY_APPLIED"
                      ],
                      "documentation": "\n    <p>\n      If set, indicates that the request to cancel the workflow execution was automatically generated, and specifies the cause.\n      This happens if the parent workflow execution times out or is terminated, and the child policy is set to cancel child executions.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCancelRequested</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskScheduledEventAttributes": {
                  "shape_name": "DecisionTaskScheduledEventAttributes",
                  "type": "structure",
                  "members": {
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list in which the decision task was scheduled.\n    </p>\n  ",
                      "required": true
                    },
                    "startToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for this decision task. The task is considered timed out if it does not\n      completed within this duration.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskScheduled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskStartedEventAttributes": {
                  "shape_name": "DecisionTaskStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "identity": {
                      "shape_name": "Identity",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      Identity of the decider making the request. This enables diagnostic tracing\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskCompletedEventAttributes": {
                  "shape_name": "DecisionTaskCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "executionContext": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      User defined context for the workflow execution.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>DecisionTaskStarted</code> event recorded when this decision task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskTimedOutEventAttributes": {
                  "shape_name": "DecisionTaskTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "DecisionTaskTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of timeout that expired before the decision task could be completed.\n    </p>\n  ",
                      "required": true
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>DecisionTaskStarted</code> event recorded when this decision task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskScheduledEventAttributes": {
                  "shape_name": "ActivityTaskScheduledEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityType": {
                      "shape_name": "ActivityType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the activity task.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique id of the activity task.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the activity task.\n    </p>\n  "
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks. This data is not sent to the activity.\n    </p>\n  "
                    },
                    "scheduleToStartTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time the activity task can wait to be assigned to a worker.\n    </p>\n  "
                    },
                    "scheduleToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time for this activity task.\n    </p>\n  "
                    },
                    "startToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time a worker may take to process the activity task.\n    </p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The task list in which the activity task has been scheduled.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision that\n      resulted in the scheduling of this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "heartbeatTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum time before which the worker processing this task must report progress by\n      calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out.\n      If the worker subsequently attempts to record a heartbeat or return a result, it will be ignored.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskScheduled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskStartedEventAttributes": {
                  "shape_name": "ActivityTaskStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "identity": {
                      "shape_name": "Identity",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      Identity of the worker that was assigned this task. This aids diagnostics\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCompletedEventAttributes": {
                  "shape_name": "ActivityTaskCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The results of the activity task (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskFailedEventAttributes": {
                  "shape_name": "ActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason provided for the failure (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskTimedOutEventAttributes": {
                  "shape_name": "ActivityTaskTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "ActivityTaskTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE",
                        "SCHEDULE_TO_START",
                        "SCHEDULE_TO_CLOSE",
                        "HEARTBEAT"
                      ],
                      "documentation": "\n    <p>\n      The type of the timeout that caused this event.\n    </p>\n  ",
                      "required": true
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "LimitedData",
                      "type": "string",
                      "max_length": 2048,
                      "documentation": "\n    <p>\n      Contains the content of the <code>details</code> parameter for the last call made by the activity to <code>RecordActivityTaskHeartbeat</code>.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCanceledEventAttributes": {
                  "shape_name": "ActivityTaskCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the cancellation (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "latestCancelRequestedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      If set, contains the Id of the last <code>ActivityTaskCancelRequested</code> event recorded for this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCancelRequestedEventAttributes": {
                  "shape_name": "ActivityTaskCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique ID of the task.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskcancelRequested</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionSignaledEventAttributes": {
                  "shape_name": "WorkflowExecutionSignaledEventAttributes",
                  "type": "structure",
                  "members": {
                    "signalName": {
                      "shape_name": "SignalName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the signal received. The decider can use the signal name and inputs to determine\n      how to the process the signal.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Inputs provided with the signal (if any). The decider can use the signal name and inputs to determine\n      how to process the signal.\n    </p>\n  "
                    },
                    "externalWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow execution that sent the signal. This is set only of the signal was sent by another\n      workflow execution.\n    </p>\n  "
                    },
                    "externalInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflow</code> decision to signal this workflow execution.The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event. This field is set only if the signal was initiated by another workflow execution.\n\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionSignaled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "markerRecordedEventAttributes": {
                  "shape_name": "MarkerRecordedEventAttributes",
                  "type": "structure",
                  "members": {
                    "markerName": {
                      "shape_name": "MarkerName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the marker.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the marker (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RecordMarker</code> decision that requested this marker.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>MarkerRecorded</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "recordMarkerFailedEventAttributes": {
                  "shape_name": "RecordMarkerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "markerName": {
                      "shape_name": "MarkerName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>The marker's name.</p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "RecordMarkerFailedCause",
                      "type": "string",
                      "enum": [
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RecordMarkerFailed</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.</p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerStartedEventAttributes": {
                  "shape_name": "TimerStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that was started.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    },
                    "startToFireTimeout": {
                      "shape_name": "DurationInSeconds",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The duration of time after which the timer will fire.\n    </p>\n    <p>The duration is specified in seconds. The valid values are integers greater than or equal to 0.</p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartTimer</code> decision for this activity task.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerFiredEventAttributes": {
                  "shape_name": "TimerFiredEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that fired.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>TimerStarted</code> event that was recorded when this timer was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerFired</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerCanceledEventAttributes": {
                  "shape_name": "TimerCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that was canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>TimerStarted</code> event that was recorded when this timer was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelTimer</code> decision to cancel this timer.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startChildWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "StartChildWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent decision\n      tasks. This data is not sent to the activity.\n    </p>\n  "
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The inputs provided to the child workflow execution (if any).\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for the child workflow execution. If the workflow execution is not closed within this duration,\n      it will be timed out and force terminated.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list used for the decision tasks of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a> to request this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions if this execution gets terminated by explicitly calling\n      the <a>TerminateWorkflowExecution</a> action or due to an expired timeout.</p>\n    <p>The supported child policies are:</p>\n\n    <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n        <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n        receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n    </ul>\n  ",
                      "required": true
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration allowed for the decision tasks for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n    <p>\n      The list of tags to associated with the child workflow execution.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartChildWorkflowExecutionInitiated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionStartedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was started.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionCompletedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was completed.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The result of the child workflow execution (if any).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason for the failure (if provided).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if provided).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionTimedOutEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that timed out.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "timeoutType": {
                      "shape_name": "WorkflowExecutionTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of the timeout that caused the child workflow execution to time out.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionCanceledEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the cancellation (if provided).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionTerminatedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionTerminatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was terminated.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionTerminated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "signalExternalWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "SignalExternalWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution to send the signal to.\n    </p>\n  "
                    },
                    "signalName": {
                      "shape_name": "SignalName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the signal.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Input provided to the signal (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in\n      the <code>SignalExternalWorkflowExecution</code> decision for this signal.\n      This information can be useful for diagnosing problems by tracing back the cause of events leading up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent decision\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>SignalExternalWorkflowExecutionInitiated</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "externalWorkflowExecutionSignaledEventAttributes": {
                  "shape_name": "ExternalWorkflowExecutionSignaledEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution that the signal was delivered to.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflowExecution</code> decision to request this signal.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ExternalWorkflowExecutionSignaled</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "signalExternalWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "SignalExternalWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution that the signal was being delivered to.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution that the signal was being delivered to.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "SignalExternalWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
                        "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflowExecution</code> decision to request this signal.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in\n      the <code>SignalExternalWorkflowExecution</code> decision for this signal.\n      This information can be useful for diagnosing problems by tracing back the cause of events leading up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>If the event is of type <code>SignalExternalWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.</p>\n  "
                },
                "externalWorkflowExecutionCancelRequestedEventAttributes": {
                  "shape_name": "ExternalWorkflowExecutionCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution to which the cancellation request was delivered.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ExternalWorkflowExecutionCancelRequested</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "RequestCancelExternalWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution to be canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution to be canceled.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelExternalWorkflowExecutionInitiated</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelExternalWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "RequestCancelExternalWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow to which the cancel request was to be delivered.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "RequestCancelExternalWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
                        "REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelExternalWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "scheduleActivityTaskFailedEventAttributes": {
                  "shape_name": "ScheduleActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityType": {
                      "shape_name": "ActivityType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The activity type provided in the <code>ScheduleActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The activityId provided in the <code>ScheduleActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "ScheduleActivityTaskFailedCause",
                      "type": "string",
                      "enum": [
                        "ACTIVITY_TYPE_DEPRECATED",
                        "ACTIVITY_TYPE_DOES_NOT_EXIST",
                        "ACTIVITY_ID_ALREADY_IN_USE",
                        "OPEN_ACTIVITIES_LIMIT_EXCEEDED",
                        "ACTIVITY_CREATION_RATE_EXCEEDED",
                        "DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED",
                        "DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision that\n      resulted in the scheduling of this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ScheduleActivityTaskFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelActivityTaskFailedEventAttributes": {
                  "shape_name": "RequestCancelActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The activityId provided in the <code>RequestCancelActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "RequestCancelActivityTaskFailedCause",
                      "type": "string",
                      "enum": [
                        "ACTIVITY_ID_UNKNOWN",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.</p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelActivityTaskFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startTimerFailedEventAttributes": {
                  "shape_name": "StartTimerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The timerId provided in the <code>StartTimer</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "StartTimerFailedCause",
                      "type": "string",
                      "enum": [
                        "TIMER_ID_ALREADY_IN_USE",
                        "OPEN_TIMERS_LIMIT_EXCEEDED",
                        "TIMER_CREATION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartTimer</code> decision for this activity task.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartTimerFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "cancelTimerFailedEventAttributes": {
                  "shape_name": "CancelTimerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The timerId provided in the <code>CancelTimer</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "CancelTimerFailedCause",
                      "type": "string",
                      "enum": [
                        "TIMER_ID_UNKNOWN",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>\n      The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.\n    </p>\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelTimer</code> decision to cancel this timer.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CancelTimerFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startChildWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "StartChildWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow type provided in the <code>StartChildWorkflowExecution</code> <a>Decision</a> that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "StartChildWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "WORKFLOW_TYPE_DOES_NOT_EXIST",
                        "WORKFLOW_TYPE_DEPRECATED",
                        "OPEN_CHILDREN_LIMIT_EXCEEDED",
                        "OPEN_WORKFLOWS_LIMIT_EXCEEDED",
                        "CHILD_CREATION_RATE_EXCEEDED",
                        "WORKFLOW_ALREADY_RUNNING",
                        "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_CHILD_POLICY_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a> to request this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartChildWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                }
              },
              "documentation": "\n      <p>Event within a workflow execution. A history event can be one of these types:</p>\n      <ul>\n         <li>\n            <b>WorkflowExecutionStarted</b>: The workflow execution was started.\n         </li>\n         <li>\n            <b>WorkflowExecutionCompleted</b>: The workflow execution was closed due to successful completion.\n         </li>\n         <li>\n            <b>WorkflowExecutionFailed</b>: The workflow execution closed due to a failure.\n         </li>\n         <li>\n            <b>WorkflowExecutionTimedOut</b>: The workflow execution was closed because a time out was exceeded.\n         </li>\n         <li>\n            <b>WorkflowExecutionCanceled</b>: The workflow execution was successfully canceled and closed.\n         </li>\n         <li>\n            <b>WorkflowExecutionTerminated</b>: The workflow execution was terminated.\n         </li>\n         <li>\n            <b>WorkflowExecutionContinuedAsNew</b>: The workflow execution was closed and a new\n            execution of the same type was created with the same workflowId.\n         </li>\n         <li>\n            <b>WorkflowExecutionCancelRequested</b>: A request to cancel this workflow execution was made.\n         </li>\n         <li>\n            <b>DecisionTaskScheduled</b>: A decision task was scheduled for the workflow execution.\n         </li>\n         <li>\n            <b>DecisionTaskStarted</b>: The decision task was dispatched to a decider.\n         </li>\n         <li>\n            <b>DecisionTaskCompleted</b>: The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.\n         </li>\n<!--\n         <li>\n            <b>DecisionTaskFailed</b>: The decider failed a decision task by calling <a>RespondDecisionTaskFailed</a>.\n         </li>\n         --><li>\n            <b>DecisionTaskTimedOut</b>: The decision task timed out.\n         </li>\n         <li>\n            <b>ActivityTaskScheduled</b>: An activity task was scheduled for execution.\n         </li>\n         <li>\n            <b>ScheduleActivityTaskFailed</b>: Failed to process ScheduleActivityTask decision. This happens when\n            the decision is not configured properly, for example the activity type specified is not registered.\n         </li>\n         <li>\n            <b>ActivityTaskStarted</b>: The scheduled activity task was dispatched to a worker.\n         </li>\n         <li>\n            <b>ActivityTaskCompleted</b>: An activity worker successfully completed an activity task by calling <a>RespondActivityTaskCompleted</a>.\n         </li>\n         <li>\n            <b>ActivityTaskFailed</b>: An activity worker failed an activity task by calling <a>RespondActivityTaskFailed</a>.\n         </li>\n         <li>\n            <b>ActivityTaskTimedOut</b>: The activity task timed out.\n         </li>\n         <li>\n            <b>ActivityTaskCanceled</b>: The activity task was successfully canceled.\n         </li>\n         <!--\n         <li>\n            <b>ActivityTaskHeartbeatRecorded</b>: A call to <a>RecordActivityTaskHeartbeat</a> was\n            successfully processed by the system.\n         </li>\n         -->\n         <li>\n            <b>ActivityTaskCancelRequested</b>: A <code>RequestCancelActivityTask</code> decision was\n            received by the system.\n         </li>\n         <li>\n            <b>RequestCancelActivityTaskFailed</b>: Failed to process RequestCancelActivityTask decision. This happens when\n            the decision is not configured properly.\n         </li>\n         <li>\n            <b>WorkflowExecutionSignaled</b>: An external signal was received for the workflow execution.\n         </li>\n         <li>\n            <b>MarkerRecorded</b>: A marker was recorded in the workflow history as the result of a\n            <code>RecordMarker</code> decision.\n         </li>\n         <li>\n            <b>TimerStarted</b>: A timer was started for the workflow execution due to a\n            <code>StartTimer</code> decision.\n         </li>\n         <li>\n            <b>StartTimerFailed</b>: Failed to process StartTimer decision. This happens when\n            the decision is not configured properly, for example a timer already exists with the specified timer Id.\n         </li>\n         <li>\n            <b>TimerFired</b>: A timer, previously started for this workflow execution, fired.\n         </li>\n         <li>\n            <b>TimerCanceled</b>: A timer, previously started for this workflow execution,\n            was successfully canceled.\n         </li>\n         <li>\n            <b>CancelTimerFailed</b>: Failed to process CancelTimer decision. This happens when\n            the decision is not configured properly, for example no timer exists with the specified timer Id.\n         </li>\n         <li>\n            <b>StartChildWorkflowExecutionInitiated</b>: A request was made to start a child workflow execution.\n         </li>\n         <li>\n            <b>StartChildWorkflowExecutionFailed</b>: Failed to process StartChildWorkflowExecution decision.\n            This happens when the decision is not configured properly, for example the workflow type specified is not registered.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionStarted</b>: A child workflow execution was successfully started.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionCompleted</b>: A child workflow execution, started by this workflow execution,\n            completed successfully and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionFailed</b>: A child workflow execution, started by this workflow execution,\n            failed to complete successfully and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionTimedOut</b>:  A child workflow execution, started by this workflow execution,\n            timed out and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionCanceled</b>:  A child workflow execution, started by this workflow execution,\n            was canceled and closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionTerminated</b>:  A child workflow execution, started by this workflow execution,\n            was terminated.\n         </li>\n         <li>\n            <b>SignalExternalWorkflowExecutionInitiated</b>: A request to signal an external workflow was made.\n         </li>\n         <li>\n            <b>ExternalWorkflowExecutionSignaled</b>: A signal, requested by this workflow execution, was successfully\n            delivered to the target external workflow execution.\n         </li>\n         <li>\n            <b>SignalExternalWorkflowExecutionFailed</b>:  The request to signal an external\n            workflow execution failed.\n         </li>\n         <li>\n            <b>RequestCancelExternalWorkflowExecutionInitiated</b>: A request was made to request the cancellation of an external workflow execution.\n         </li>\n         <li>\n            <b>ExternalWorkflowExecutionCancelRequested</b>: Request to cancel an external workflow execution was successfully\n            delivered to the target execution.\n         </li>\n         <li>\n            <b>RequestCancelExternalWorkflowExecutionFailed</b>: Request to cancel an external workflow execution\n            failed.\n         </li>\n      </ul>\n  "
            },
            "documentation": "\n    <p>\n      The list of history events.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      The token for the next page. If set, the history consists of more than one page and the next page can be retrieved by repeating the request\n      with this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Paginated representation of a workflow history for a workflow execution. This is the up to date, complete and authoritative record of\n      the events related to all tasks and events in the life of the workflow execution.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns the history of the specified workflow execution.\n      The results may be split into multiple pages.\n      To retrieve subsequent pages, make the call again using the <code>nextPageToken</code> returned by the initial call.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> GetWorkflowExecutionHistory Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 03:44:00 GMT\n          X-Amz-Target: SimpleWorkflowService.GetWorkflowExecutionHistory\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=90GENeUWJbEAMWuVI0dcWatHjltMWddXfLjl0MbNOzM=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 175\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"execution\":\n          {\"workflowId\": \"20110927-T-1\",\n          \"runId\": \"d29e60b5-fa71-4276-a4be-948b0adcd20b\"},\n          \"maximumPageSize\": 10,\n          \"reverseOrder\": true}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 2942\n          Content-Type: application/json\n          x-amzn-RequestId: 5385723f-3ff4-11e1-b118-3bfa5e8e7fc3\n\n          {\"events\":\n          [\n          {\"eventId\": 11,\n          \"eventTimestamp\": 1326671603.102,\n          \"eventType\": \"WorkflowExecutionTimedOut\",\n          \"workflowExecutionTimedOutEventAttributes\":\n          {\"childPolicy\": \"TERMINATE\",\n          \"timeoutType\": \"START_TO_CLOSE\"}\n          },\n          {\"decisionTaskScheduledEventAttributes\":\n          {\"startToCloseTimeout\": \"600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          },\n          \"eventId\": 10,\n          \"eventTimestamp\": 1326670566.124,\n          \"eventType\": \"DecisionTaskScheduled\"},\n          {\"activityTaskTimedOutEventAttributes\":\n          {\"latestHeartbeatRecordedEventId\": 0,\n          \"scheduledEventId\": 8,\n          \"startedEventId\": 0,\n          \"timeoutType\": \"SCHEDULE_TO_START\"},\n          \"eventId\": 9,\n          \"eventTimestamp\": 1326670566.124,\n          \"eventType\": \"ActivityTaskTimedOut\"},\n          {\"activityTaskScheduledEventAttributes\":\n          {\"activityId\": \"verification-27\",\n          \"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"},\n          \"control\": \"digital music\",\n          \"decisionTaskCompletedEventId\": 7,\n          \"heartbeatTimeout\": \"120\",\n          \"input\": \"5634-0056-4367-0923,12/12,437\",\n          \"scheduleToCloseTimeout\": \"900\",\n          \"scheduleToStartTimeout\": \"300\",\n          \"startToCloseTimeout\": \"600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          },\n          \"eventId\": 8,\n          \"eventTimestamp\": 1326670266.115,\n          \"eventType\": \"ActivityTaskScheduled\"},\n          {\"decisionTaskCompletedEventAttributes\":\n          {\"executionContext\": \"Black Friday\",\n          \"scheduledEventId\": 5,\n          \"startedEventId\": 6},\n          \"eventId\": 7,\n          \"eventTimestamp\": 1326670266.103,\n          \"eventType\": \"DecisionTaskCompleted\"},\n          {\"decisionTaskStartedEventAttributes\":\n          {\"identity\": \"Decider01\",\n          \"scheduledEventId\": 5},\n          \"eventId\": 6,\n          \"eventTimestamp\": 1326670161.497,\n          \"eventType\": \"DecisionTaskStarted\"},\n          {\"decisionTaskScheduledEventAttributes\":\n          {\"startToCloseTimeout\": \"600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          },\n          \"eventId\": 5,\n          \"eventTimestamp\": 1326668752.66,\n          \"eventType\": \"DecisionTaskScheduled\"},\n          {\"decisionTaskTimedOutEventAttributes\":\n          {\"scheduledEventId\": 2,\n          \"startedEventId\": 3,\n          \"timeoutType\": \"START_TO_CLOSE\"},\n          \"eventId\": 4,\n          \"eventTimestamp\": 1326668752.66,\n          \"eventType\": \"DecisionTaskTimedOut\"},\n          {\"decisionTaskStartedEventAttributes\":\n          {\"identity\": \"Decider01\",\n          \"scheduledEventId\": 2},\n          \"eventId\": 3,\n          \"eventTimestamp\": 1326668152.648,\n          \"eventType\": \"DecisionTaskStarted\"},\n          {\"decisionTaskScheduledEventAttributes\":\n          {\"startToCloseTimeout\": \"600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          },\n          \"eventId\": 2,\n          \"eventTimestamp\": 1326668003.094,\n          \"eventType\": \"DecisionTaskScheduled\"}\n          ],\n          \"nextPageToken\": \"AAAAKgAAAAEAAAAAAAAAATeTvAyvqlQz34ctbGhM5nglWmjzk0hGuHf0g4EO4CblQFku70ukjPgrAHy7Tnp7FaZ0okP8EEWnkfg8gi3Fqy/WVrXyxQaa525D31cIq1owXK21CKR6SQ0Job87G8SHvvqvP7yjLGHlHrRGZUCbJgeEuV4Rp/yW+vKhc8dJ54x7wvpQMwZ+ssG6stTyX26vu1gIDuspk13UrDZa4TbLOFdM0aAocHe3xklKMtD/B4ithem6BWm6CBl/UF7lMfNccwUYEityp1Kht/YrcD9zbJkt1FSt4Y6pgt0njAh4FKRO9nyRyvLmbvgtQXEIQz8hdbjwj3xE1+9ocYwXOCAhVkRsh3OD6F8KHilKfdwg4Xz1jtLXOh4lsCecNb8dS7J9hbRErRbw3rh1Sv415U2Ye23OEfF4Jv7JznpmEyzuq8d2bMyOLjAInQVFK4t1tPo5FAhzdICCXBhRq6Wkt++W9sRQXqqX/HTX5kNomHySZloylPuY5gL5zRj39frInfZk4EXWHwrI+18+erGIHO4nBQpMzO64dMP+A/KtVGCn59rAMmilD6wEE9rH8RuZ03Wkvm9yrJvjrI8/6358n8TMB8OcHoqILkMCAXYiIppnFlm+NWXVqxalHLKOrrNzEZM6qsz3Qj3HV1cpy9P7fnS9QAxrgsAYBoDmdOaFkS3ktAkRa0Sle8STfHi4zKbfIGS7rg==\"}\n        </response>\n      </example>\n    </examples>\n  "
    },
    "ListActivityTypes": {
      "name": "ListActivityTypes",
      "input": {
        "shape_name": "ListActivityTypesInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which the activity types have been registered.\n    </p>\n  ",
            "required": true
          },
          "name": {
            "shape_name": "Name",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      If specified, only lists the activity types that have this name.\n    </p>\n  "
          },
          "registrationStatus": {
            "shape_name": "RegistrationStatus",
            "type": "string",
            "enum": [
              "REGISTERED",
              "DEPRECATED"
            ],
            "documentation": "\n    <p>\n      Specifies the registration status of the activity types to list.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If on a previous call to this method a <code>NextResultToken</code> was returned, the results have\n      more than one page. To get the next page of results, repeat the call with the <code>nextPageToken</code>\n      and keep all other arguments unchanged.\n    </p>\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      The maximum number of results returned in each page. The default is 100, but the caller\n      can override this value to a page size <i>smaller</i> than the default. You cannot specify\n      a page size greater than 100.\n      Note that the number of types may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the results in reverse order. By default the results are returned in ascending\n      alphabetical order of the <code>name</code> of the activity types.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ActivityTypeInfos",
        "type": "structure",
        "members": {
          "typeInfos": {
            "shape_name": "ActivityTypeInfoList",
            "type": "list",
            "members": {
              "shape_name": "ActivityTypeInfo",
              "type": "structure",
              "members": {
                "activityType": {
                  "shape_name": "ActivityType",
                  "type": "structure",
                  "members": {
                    "name": {
                      "shape_name": "Name",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                      "required": true
                    },
                    "version": {
                      "shape_name": "Version",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n      <p>\n         The <a>ActivityType</a> type structure representing the activity type.\n      </p>\n   ",
                  "required": true
                },
                "status": {
                  "shape_name": "RegistrationStatus",
                  "type": "string",
                  "enum": [
                    "REGISTERED",
                    "DEPRECATED"
                  ],
                  "documentation": "\n      <p>\n         The current status of the activity type.\n      </p>\n   ",
                  "required": true
                },
                "description": {
                  "shape_name": "Description",
                  "type": "string",
                  "max_length": 1024,
                  "documentation": "\n      <p>\n         The description of the activity type provided in <a>RegisterActivityType</a>.\n      </p>\n   "
                },
                "creationDate": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n         <p>\n         The date and time this activity type was created through <a>RegisterActivityType</a>.\n         </p>\n   ",
                  "required": true
                },
                "deprecationDate": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n      <p>\n         If DEPRECATED, the date and time <a>DeprecateActivityType</a> was called.\n      </p>\n   "
                }
              },
              "documentation": "\n      <p>\n         Detailed information about an activity type.\n      </p>\n   "
            },
            "documentation": "\n    <p>\n      List of activity type information.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n         Returns a value if the results are paginated. To get the next page of results, repeat the request\n         specifying this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains a paginated list of activity type information structures.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        },
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns information about all activities registered in the specified domain that match the\n      specified name and registration status. The result includes information like creation date, current status of the activity, etc.\n      The results may be split into multiple pages.\n      To retrieve subsequent pages, make the call again using the <code>nextPageToken</code> returned by the initial call.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> ListActivityTypes Example </name>\n        <request>\n          {\"domain\": \"867530901\",\n          \"registrationStatus\": \"REGISTERED\",\n          \"maximumPageSize\": 50,\n          \"reverseOrder\": false}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 171\n          Content-Type: application/json\n          x-amzn-RequestId: 11b6fbeb-3f25-11e1-9e8f-57bb03e21482\n\n          {\"typeInfos\":\n          [\n          {\"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"},\n          \"creationDate\": 1326586446.471,\n          \"description\": \"Verify the customer credit\",\n          \"status\": \"REGISTERED\"}\n          ]\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "ListClosedWorkflowExecutions": {
      "name": "ListClosedWorkflowExecutions",
      "input": {
        "shape_name": "ListClosedWorkflowExecutionsInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain that contains the workflow executions to list.\n    </p>\n  ",
            "required": true
          },
          "startTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, the workflow executions are included in the returned results based on whether their start times are within the range specified by this filter.\n      Also, if this parameter is specified, the returned results are ordered by their start times.\n    </p>\n    <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.\n      You must specify one of these in a request but not both.</note>\n  "
          },
          "closeTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, the workflow executions are included in the returned results based on whether their close times are within the range specified by this filter.\n      Also, if this parameter is specified, the returned results are ordered by their close times.\n    </p>\n    <note><code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.\n      You must specify one of these in a request but not both.</note>\n  "
          },
          "executionFilter": {
            "shape_name": "WorkflowExecutionFilter",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The workflowId to pass of match the criteria of this filter.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions matching the workflow id specified in the filter are returned.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "closeStatusFilter": {
            "shape_name": "CloseStatusFilter",
            "type": "structure",
            "members": {
              "status": {
                "shape_name": "CloseStatus",
                "enum": [
                  "COMPLETED",
                  "FAILED",
                  "CANCELED",
                  "TERMINATED",
                  "CONTINUED_AS_NEW",
                  "TIMED_OUT"
                ],
                "type": "string",
                "documentation": "\n    <p>\n      The close status that must match the close status of an execution for it to meet the criteria of this filter. This\n      field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions that match this <i>close status</i> are listed.\n      For example, if TERMINATED is specified, then only TERMINATED workflow executions are listed.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "typeFilter": {
            "shape_name": "WorkflowTypeFilter",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Name of the workflow type.\n      This field is required.\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "VersionOptional",
                "type": "string",
                "max_length": 64,
                "documentation": "\n    <p>\n      Version of the workflow type.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions of the type specified in the filter are returned.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "tagFilter": {
            "shape_name": "TagFilter",
            "type": "structure",
            "members": {
              "tag": {
                "shape_name": "Tag",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Specifies the tag that must be associated with the execution for it to meet the filter criteria.\n      This field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions that have the matching tag are listed.\n    </p>\n    <note><code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If on a previous call to this method a <code>NextPageToken</code> was returned, the results are\n      being paginated. To get the next page of results, repeat the call with the returned token and\n      all other arguments unchanged.\n    </p>\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      The maximum number of results returned in each page. The default is 100, but the caller\n      can override this value to a page size <i>smaller</i> than the default. You cannot specify\n      a page size greater than 100.\n      Note that the number of executions may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the results in reverse order. By default the results are returned in\n      descending order of the start or the close time of the executions.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowExecutionInfos",
        "type": "structure",
        "members": {
          "executionInfos": {
            "shape_name": "WorkflowExecutionInfoList",
            "type": "list",
            "members": {
              "shape_name": "WorkflowExecutionInfo",
              "type": "structure",
              "members": {
                "execution": {
                  "shape_name": "WorkflowExecution",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      The workflow execution this information is about.\n    </p>\n  ",
                  "required": true
                },
                "workflowType": {
                  "shape_name": "WorkflowType",
                  "type": "structure",
                  "members": {
                    "name": {
                      "shape_name": "Name",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    },
                    "version": {
                      "shape_name": "Version",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      The type of the workflow execution.\n    </p>\n  ",
                  "required": true
                },
                "startTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The time when the execution was started.\n    </p>\n  ",
                  "required": true
                },
                "closeTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The time when the workflow execution was closed. Set only if the execution status is CLOSED.\n    </p>\n  "
                },
                "executionStatus": {
                  "shape_name": "ExecutionStatus",
                  "enum": [
                    "OPEN",
                    "CLOSED"
                  ],
                  "type": "string",
                  "documentation": "\n    <p>\n      The current status of the execution.\n    </p>\n  ",
                  "required": true
                },
                "closeStatus": {
                  "shape_name": "CloseStatus",
                  "enum": [
                    "COMPLETED",
                    "FAILED",
                    "CANCELED",
                    "TERMINATED",
                    "CONTINUED_AS_NEW",
                    "TIMED_OUT"
                  ],
                  "type": "string",
                  "documentation": "\n    <p>\n      If the execution status is closed then this specifies how the execution was closed:</p>\n      <ul>\n      <li>COMPLETED: the execution was successfully completed.</li>\n      <li>CANCELED: the execution was canceled.Cancellation allows the implementation to gracefully clean up before the execution is closed.</li>\n      <li>TERMINATED: the execution was force terminated.</li>\n      <li>FAILED: the execution failed to complete.</li>\n      <li>TIMED_OUT: the execution did not complete in the alloted time and was automatically timed out.</li>\n      <li>CONTINUED_AS_NEW: the execution is logically continued. This means the current execution was completed and a new execution was started to carry on\n      the workflow.</li>\n      </ul>\n  "
                },
                "parent": {
                  "shape_name": "WorkflowExecution",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If this workflow execution is a child of another execution then contains\n      the workflow execution that started this execution.\n    </p>\n  "
                },
                "tagList": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": null
                  },
                  "max_length": 5,
                  "documentation": "\n    <p>\n      The list of tags associated with the workflow execution. Tags can be used to identify and list workflow executions\n      of interest through the visibility APIs. A workflow execution can have a maximum of 5 tags.\n    </p>\n  "
                },
                "cancelRequested": {
                  "shape_name": "Canceled",
                  "type": "boolean",
                  "documentation": "\n    <p>\n      Set to true if a cancellation is requested for this workflow execution.\n    </p>\n  "
                }
              },
              "documentation": "\n    <p>\n      Contains information about a workflow execution.\n\n      <!-- This structure is returned from a call to\n      <a>DescribeWorkflowExecution</a>. -->\n    </p>\n  "
            },
            "documentation": "\n    <p>\n      The list of workflow information structures.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      The token of the next page in the result. If set, the results have more than one page. The next\n      page can be retrieved by repeating the request with this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains a paginated list of information about workflow executions.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns a list of closed workflow executions in the specified domain that meet the filtering criteria.\n      The results may be split into multiple pages.\n      To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li>\n            <li>\n<code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li>\n            <li>\n<code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li>\n          </ul>\n        </li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> ListClosedWorkflowExecutions Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 02:51:01 GMT\n          X-Amz-Target: SimpleWorkflowService.ListClosedWorkflowExecutions\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=WY9jGbf5E3F9smGJHANhEXz9VL+1oGVgNL0/o7cBxQw=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 150\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"closeTimeFilter\":\n          {\"oldestDate\": 1325376070,\n          \"latestDate\": 1356998399},\n          \"tagFilter\":\n          {\"tag\": \"ricoh-the-dog\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 1084\n          Content-Type: application/json\n          x-amzn-RequestId: c28b4df4-3f23-11e1-9e8f-57bb03e21482\n\n          {\"executionInfos\":\n          [\n          {\"cancelRequested\": false,\n          \"closeStatus\": \"TIMED_OUT\",\n          \"closeTimestamp\": 1326590754.654,\n          \"execution\":\n          {\"runId\": \"c724e07a-b966-441f-a1c0-4831acbda1cd\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"executionStatus\": \"CLOSED\",\n          \"startTimestamp\": 1326587154.626,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          },\n          {\"cancelRequested\": false,\n          \"closeStatus\": \"TIMED_OUT\",\n          \"closeTimestamp\": 1326586831.628,\n          \"execution\":\n          {\"runId\": \"f5ebbac6-941c-4342-ad69-dfd2f8be6689\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"executionStatus\": \"CLOSED\",\n          \"startTimestamp\": 1326585031.619,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          },\n          {\"cancelRequested\": false,\n          \"closeStatus\": \"TIMED_OUT\",\n          \"closeTimestamp\": 1326582914.031,\n          \"execution\":\n          {\"runId\": \"1e536162-f1ea-48b0-85f3-aade88eef2f7\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"executionStatus\": \"CLOSED\",\n          \"startTimestamp\": 1326581114.02,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n          ]\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "ListDomains": {
      "name": "ListDomains",
      "input": {
        "shape_name": "ListDomainsInput",
        "type": "structure",
        "members": {
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n      <p>\n            If on a previous call to this method a <code>NextPageToken</code> was returned, the result has\n            more than one page. To get the next page of results, repeat the call with the returned token\n            and all other arguments unchanged.\n      </p>\n   "
          },
          "registrationStatus": {
            "shape_name": "RegistrationStatus",
            "type": "string",
            "enum": [
              "REGISTERED",
              "DEPRECATED"
            ],
            "documentation": "\n      <p>\n            Specifies the registration status of the domains to list.\n      </p>\n   ",
            "required": true
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n      <p>\n          The maximum number of results returned in each page. The default is 100, but the caller\n             can override this value to a page size <i>smaller</i> than the default. You cannot specify\n             a page size greater than 100.\n         Note that the number of domains may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n      </p>\n   "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n      <p>\n         When set to <code>true</code>, returns the results in reverse order. By default the results are returned in ascending\n         alphabetical order of the <code>name</code> of the domains.\n      </p>\n   "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DomainInfos",
        "type": "structure",
        "members": {
          "domainInfos": {
            "shape_name": "DomainInfoList",
            "type": "list",
            "members": {
              "shape_name": "DomainInfo",
              "type": "structure",
              "members": {
                "name": {
                  "shape_name": "DomainName",
                  "type": "string",
                  "min_length": 1,
                  "max_length": 256,
                  "documentation": "\n    <p>\n      The name of the domain. This name is unique within the account.\n    </p>\n  ",
                  "required": true
                },
                "status": {
                  "shape_name": "RegistrationStatus",
                  "type": "string",
                  "enum": [
                    "REGISTERED",
                    "DEPRECATED"
                  ],
                  "documentation": "\n   <p>\n      The status of the domain:\n   </p>\n   <ul>\n      <li>\n         <b>REGISTERED</b>: The domain is properly registered and available. You can use this domain\n         for registering types and creating new workflow executions.\n      </li>\n      <li>\n         <b>DEPRECATED</b>: The domain was deprecated using <a>DeprecateDomain</a>, but is\n         still in use. You should not create new workflow executions in this domain.\n      </li>\n   </ul>\n  ",
                  "required": true
                },
                "description": {
                  "shape_name": "Description",
                  "type": "string",
                  "max_length": 1024,
                  "documentation": "\n    <p>\n      The description of the domain provided through <a>RegisterDomain</a>.\n    </p>\n  "
                }
              },
              "documentation": "\n    <p>\n      Contains general information about a domain.\n    </p>\n  "
            },
            "documentation": "\n    <p>\n      A list of DomainInfo structures.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n         Returns a value if the results are paginated. To get the next page of results, repeat the request\n         specifying this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains a paginated collection of DomainInfo structures.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Returns the list of domains registered in the account.\n         The results may be split into multiple pages.\n         To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.\n      </p>\n      <note>\n         This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n      </note>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n     <ul>\n       <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains. The element must\n      be set to <code>arn:aws:swf::AccountID:domain/*\"</code>, where “AccountID\" is the account ID, with no dashes.</li>\n       <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n       <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n     </ul>\n     <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n       see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n<examples>\n    <example>\n       <name> ListDomains Example </name>\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Sun, 15 Jan 2012 03:09:58 GMT\nX-Amz-Target: SimpleWorkflowService.ListDomains\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=ZCprC72dUxF9ca3w/tbwKZ8lBQn0jaA4xOJqDF0uqMI=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 86\nPragma: no-cache\nCache-Control: no-cache\n\n{\"registrationStatus\": \"REGISTERED\",\n \"maximumPageSize\": 50,\n \"reverseOrder\": false}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 568\nContent-Type: application/json\nx-amzn-RequestId: 67e874cc-3f26-11e1-9b11-7182192d0b57\n\n{\"domainInfos\":\n  [\n    {\"description\": \"music\",\n     \"name\": \"867530901\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"music\",\n     \"name\": \"867530902\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"Demo\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"DemoDomain\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"Samples\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"testDomain2\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"testDomain3\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"testDomain4\",\n     \"status\": \"REGISTERED\"},\n    {\"description\": \"\",\n     \"name\": \"zsxfvgsxcv\",\n     \"status\": \"REGISTERED\"}\n  ]\n}\n</response>\n          </example>\n      </examples>\n      "
    },
    "ListOpenWorkflowExecutions": {
      "name": "ListOpenWorkflowExecutions",
      "input": {
        "shape_name": "ListOpenWorkflowExecutionsInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain that contains the workflow executions to list.\n    </p>\n  ",
            "required": true
          },
          "startTimeFilter": {
            "shape_name": "ExecutionTimeFilter",
            "type": "structure",
            "members": {
              "oldestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the oldest start or close date and time to return.\n    </p>\n  ",
                "required": true
              },
              "latestDate": {
                "shape_name": "Timestamp",
                "type": "timestamp",
                "documentation": "\n    <p>\n      Specifies the latest start or close date and time to return.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      Workflow executions are included in the returned results based on whether their start times are within the range specified by this filter.\n    </p>\n  ",
            "required": true
          },
          "typeFilter": {
            "shape_name": "WorkflowTypeFilter",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Name of the workflow type.\n      This field is required.\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "VersionOptional",
                "type": "string",
                "max_length": 64,
                "documentation": "\n    <p>\n      Version of the workflow type.\n    </p>\n  "
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions of the type specified in the filter are returned.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "tagFilter": {
            "shape_name": "TagFilter",
            "type": "structure",
            "members": {
              "tag": {
                "shape_name": "Tag",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      Specifies the tag that must be associated with the execution for it to meet the filter criteria.\n      This field is required.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only executions that have the matching tag are listed.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If on a previous call to this method a <code>NextPageToken</code> was returned, the results are\n      being paginated. To get the next page of results, repeat the call with the returned token and\n      all other arguments unchanged.\n    </p>\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      The maximum number of results returned in each page. The default is 100, but the caller\n      can override this value to a page size <i>smaller</i> than the default. You cannot specify\n      a page size greater than 100.\n      Note that the number of executions may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the results in reverse order. By default the results are returned in\n      descending order of the start time of the executions.\n    </p>\n  "
          },
          "executionFilter": {
            "shape_name": "WorkflowExecutionFilter",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The workflowId to pass of match the criteria of this filter.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If specified, only workflow executions matching the workflow id specified in the filter are returned.\n    </p>\n    <note><code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\n      are mutually exclusive. You can specify at most one of these in a request.</note>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowExecutionInfos",
        "type": "structure",
        "members": {
          "executionInfos": {
            "shape_name": "WorkflowExecutionInfoList",
            "type": "list",
            "members": {
              "shape_name": "WorkflowExecutionInfo",
              "type": "structure",
              "members": {
                "execution": {
                  "shape_name": "WorkflowExecution",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      The workflow execution this information is about.\n    </p>\n  ",
                  "required": true
                },
                "workflowType": {
                  "shape_name": "WorkflowType",
                  "type": "structure",
                  "members": {
                    "name": {
                      "shape_name": "Name",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    },
                    "version": {
                      "shape_name": "Version",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      The type of the workflow execution.\n    </p>\n  ",
                  "required": true
                },
                "startTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The time when the execution was started.\n    </p>\n  ",
                  "required": true
                },
                "closeTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The time when the workflow execution was closed. Set only if the execution status is CLOSED.\n    </p>\n  "
                },
                "executionStatus": {
                  "shape_name": "ExecutionStatus",
                  "enum": [
                    "OPEN",
                    "CLOSED"
                  ],
                  "type": "string",
                  "documentation": "\n    <p>\n      The current status of the execution.\n    </p>\n  ",
                  "required": true
                },
                "closeStatus": {
                  "shape_name": "CloseStatus",
                  "enum": [
                    "COMPLETED",
                    "FAILED",
                    "CANCELED",
                    "TERMINATED",
                    "CONTINUED_AS_NEW",
                    "TIMED_OUT"
                  ],
                  "type": "string",
                  "documentation": "\n    <p>\n      If the execution status is closed then this specifies how the execution was closed:</p>\n      <ul>\n      <li>COMPLETED: the execution was successfully completed.</li>\n      <li>CANCELED: the execution was canceled.Cancellation allows the implementation to gracefully clean up before the execution is closed.</li>\n      <li>TERMINATED: the execution was force terminated.</li>\n      <li>FAILED: the execution failed to complete.</li>\n      <li>TIMED_OUT: the execution did not complete in the alloted time and was automatically timed out.</li>\n      <li>CONTINUED_AS_NEW: the execution is logically continued. This means the current execution was completed and a new execution was started to carry on\n      the workflow.</li>\n      </ul>\n  "
                },
                "parent": {
                  "shape_name": "WorkflowExecution",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If this workflow execution is a child of another execution then contains\n      the workflow execution that started this execution.\n    </p>\n  "
                },
                "tagList": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "string",
                    "min_length": 1,
                    "max_length": 256,
                    "documentation": null
                  },
                  "max_length": 5,
                  "documentation": "\n    <p>\n      The list of tags associated with the workflow execution. Tags can be used to identify and list workflow executions\n      of interest through the visibility APIs. A workflow execution can have a maximum of 5 tags.\n    </p>\n  "
                },
                "cancelRequested": {
                  "shape_name": "Canceled",
                  "type": "boolean",
                  "documentation": "\n    <p>\n      Set to true if a cancellation is requested for this workflow execution.\n    </p>\n  "
                }
              },
              "documentation": "\n    <p>\n      Contains information about a workflow execution.\n\n      <!-- This structure is returned from a call to\n      <a>DescribeWorkflowExecution</a>. -->\n    </p>\n  "
            },
            "documentation": "\n    <p>\n      The list of workflow information structures.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      The token of the next page in the result. If set, the results have more than one page. The next\n      page can be retrieved by repeating the request with this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains a paginated list of information about workflow executions.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns a list of open workflow executions in the specified domain that meet the filtering criteria.\n      The results may be split into multiple pages.\n      To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.\n    </p>\n    <note>\n      This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li>\n            <li>\n<code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li>\n            <li>\n<code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li>\n          </ul>\n        </li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> ListOpenWorkflowExecutions </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sat, 14 Jan 2012 23:51:04 GMT\n          X-Amz-Target: SimpleWorkflowService.ListOpenWorkflowExecutions\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=4kUhpZUp37PgpeOKHlWTsZi+Pq3Egw4mTkPNiEUgp28=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 151\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"startTimeFilter\":\n          {\"oldestDate\": 1325376070,\n          \"latestDate\": 1356998399},\n          \"tagFilter\":\n          {\"tag\": \"music purchase\"}\n          }\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 313\n          Content-Type: application/json\n          x-amzn-RequestId: 9efeff4b-3f0a-11e1-9e8f-57bb03e21482\n\n          {\"executionInfos\":\n          [\n          {\"cancelRequested\": false,\n          \"execution\":\n          {\"runId\": \"f5ebbac6-941c-4342-ad69-dfd2f8be6689\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"executionStatus\": \"OPEN\",\n          \"startTimestamp\": 1326585031.619,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n          ]\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "ListWorkflowTypes": {
      "name": "ListWorkflowTypes",
      "input": {
        "shape_name": "ListWorkflowTypesInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which the workflow types have been registered.\n    </p>\n  ",
            "required": true
          },
          "name": {
            "shape_name": "Name",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      If specified, lists the workflow type with this name.\n    </p>\n  "
          },
          "registrationStatus": {
            "shape_name": "RegistrationStatus",
            "type": "string",
            "enum": [
              "REGISTERED",
              "DEPRECATED"
            ],
            "documentation": "\n    <p>\n      Specifies the registration status of the workflow types to list.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If on a previous call to this method a <code>NextPageToken</code> was returned, the results are\n      being paginated. To get the next page of results, repeat the call with the returned token and all other arguments\n      unchanged.\n    </p>\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      The maximum number of results returned in each page. The default is 100, but the caller\n      can override this value to a page size <i>smaller</i> than the default. You cannot specify\n      a page size greater than 100.\n      Note that the number of types may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the results in reverse order. By default the results are returned in ascending\n      alphabetical order of the <code>name</code> of the workflow types.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "WorkflowTypeInfos",
        "type": "structure",
        "members": {
          "typeInfos": {
            "shape_name": "WorkflowTypeInfoList",
            "type": "list",
            "members": {
              "shape_name": "WorkflowTypeInfo",
              "type": "structure",
              "members": {
                "workflowType": {
                  "shape_name": "WorkflowType",
                  "type": "structure",
                  "members": {
                    "name": {
                      "shape_name": "Name",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    },
                    "version": {
                      "shape_name": "Version",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      The workflow type this information is about.\n    </p>\n  ",
                  "required": true
                },
                "status": {
                  "shape_name": "RegistrationStatus",
                  "type": "string",
                  "enum": [
                    "REGISTERED",
                    "DEPRECATED"
                  ],
                  "documentation": "\n    <p>\n      The current status of the workflow type.\n    </p>\n  ",
                  "required": true
                },
                "description": {
                  "shape_name": "Description",
                  "type": "string",
                  "max_length": 1024,
                  "documentation": "\n    <p>\n      The description of the type registered through <a>RegisterWorkflowType</a>.\n    </p>\n  "
                },
                "creationDate": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The date when this type was registered.\n    </p>\n  ",
                  "required": true
                },
                "deprecationDate": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      If the type is in deprecated state, then it is set to the date when the type was deprecated.\n    </p>\n  "
                }
              },
              "documentation": "\n    <p>\n      Contains information about a workflow type.\n    </p>\n  "
            },
            "documentation": "\n    <p>\n      The list of workflow type information.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      The token for the next page of type information. If set then the list consists of more than one page.\n      You can retrieve the next page by repeating the request (that returned the structure) with the this token and all other arguments unchanged.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Contains a paginated list of information structures about workflow types.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        },
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Returns information about workflow types in the specified domain. The results may be split into multiple\n      pages that can be retrieved by making the call repeatedly.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> ListWorkflowTypes Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 22:25:43 GMT\n          X-Amz-Target: SimpleWorkflowService.ListWorkflowTypes\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=uleWQSyVVf0+aG50IoBJG5h0hzxNFNT97Mkn/FSCQ+Q=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 110\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"registrationStatus\": \"REGISTERED\",\n          \"maximumPageSize\": 50,\n          \"reverseOrder\": true}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 174\n          Content-Type: application/json\n          x-amzn-RequestId: dcde6719-3fc7-11e1-9e8f-57bb03e21482\n\n          {\"typeInfos\":\n          [\n          {\"creationDate\": 1326481174.027,\n          \"description\": \"Handle customer orders\",\n          \"status\": \"REGISTERED\",\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n          ]\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "PollForActivityTask": {
      "name": "PollForActivityTask",
      "input": {
        "shape_name": "PollForActivityTaskInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain that contains the task lists being polled.\n    </p>\n  ",
            "required": true
          },
          "taskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      Specifies the task list to poll for activity tasks.\n    </p>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
            "required": true
          },
          "identity": {
            "shape_name": "Identity",
            "type": "string",
            "max_length": 256,
            "documentation": "\n    <p>\n      Identity of the worker making the request, which is recorded in the\n      <code>ActivityTaskStarted</code> event in the workflow history. This enables diagnostic tracing\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ActivityTask",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The opaque string used as a handle on the task. This token is used by workers to\n      communicate progress and response information back to the system about\n      the task.\n    </p>\n  ",
            "required": true
          },
          "activityId": {
            "shape_name": "ActivityId",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The unique ID of the task.\n    </p>\n  ",
            "required": true
          },
          "startedEventId": {
            "shape_name": "EventId",
            "type": "long",
            "documentation": "\n    <p>\n      The id of the <code>ActivityTaskStarted</code> event recorded in the history.\n    </p>\n  ",
            "required": true
          },
          "workflowExecution": {
            "shape_name": "WorkflowExecution",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                "required": true
              },
              "runId": {
                "shape_name": "RunId",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The workflow execution that started this activity task.\n    </p>\n  ",
            "required": true
          },
          "activityType": {
            "shape_name": "ActivityType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The type of this activity task.\n    </p>\n  ",
            "required": true
          },
          "input": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      The inputs provided when the activity task was scheduled. The form of the input is\n      user defined and should be meaningful to the activity implementation.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Unit of work sent to an activity worker.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.\n      This initiates a long poll, where the service holds the HTTP\n      connection open and responds as soon as a task becomes available.\n      The maximum time the service holds on to the request before responding is 60 seconds. If no task is\n      available within 60 seconds, the poll will return an empty result.\n      An empty result, in this context, means that an ActivityTask is returned, but that the value of taskToken is an empty string.\n      If a task is returned, the worker should use its type to identify and process it correctly.\n    </p>\n    <important>\n      Workers should set their client side socket timeout to at least 70 seconds (10 seconds higher than the maximum time service may hold the poll request).\n    </important>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> PollForActivityTask Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 03:53:52 GMT\n          X-Amz-Target: SimpleWorkflowService.PollForActivityTask\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=dv0H1RPYucoIcRckspWO0f8xG120MWZRKmj3O5/A4rY=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 108\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"taskList\":\n          {\"name\": \"mainTaskList\"},\n          \"identity\": \"VerifyCreditCardWorker01\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 837\n          Content-Type: application/json\n          x-amzn-RequestId: b48fb6b5-3ff5-11e1-a23a-99d60383ae71\n\n          {\"activityId\": \"verification-27\",\n          \"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"},\n          \"input\": \"5634-0056-4367-0923,12/12,437\",\n          \"startedEventId\": 11,\n          \"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAX9p3pcp3857oLXFUuwdxRU5/zmn9f40XaMF7VohAH4jOtjXpZu7GdOzEi0b3cWYHbG5b5dpdcTXHUDPVMHXiUxCgr+Nc/wUW9016W4YxJGs/jmxzPln8qLftU+SW135Q0UuKp5XRGoRTJp3tbHn2pY1vC8gDB/K69J6q668U1pd4Cd9o43//lGgOIjN0/Ihg+DO+83HNcOuVEQMM28kNMXf7yePh31M4dMKJwQaQZG13huJXDwzJOoZQz+XFuqFly+lPnCE4XvsnhfAvTsh50EtNDEtQzPCFJoUeld9g64V/FS/39PHL3M93PBUuroPyHuCwHsNC6fZ7gM/XOKmW4kKnXPoQweEUkFV/J6E6+M1reBO7nJADTrLSnajg6MY/viWsEYmMw/DS5FlquFaDIhFkLhWUWN+V2KqiKS23GYwpzgZ7fgcWHQF2NLEY3zrjam4LW/UW5VLCyM3FpVD3erCTi9IvUgslPzyVGuWNAoTmgJEWvimgwiHxJMxxc9JBDR390iMmImxVl3eeSDUWx8reQltiviadPDjyRmVhYP8\",\n          \"workflowExecution\":\n          {\"runId\": \"cfa2bd33-31b0-4b75-b131-255bb0d97b3f\",\n          \"workflowId\": \"20110927-T-1\"}\n          }\n        </response>\n      </example>\n    </examples>\n  "
    },
    "PollForDecisionTask": {
      "name": "PollForDecisionTask",
      "input": {
        "shape_name": "PollForDecisionTaskInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the task lists to poll.\n    </p>\n  ",
            "required": true
          },
          "taskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      Specifies the task list to poll for decision tasks.\n    </p>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
            "required": true
          },
          "identity": {
            "shape_name": "Identity",
            "type": "string",
            "max_length": 256,
            "documentation": "\n    <p>\n      Identity of the decider making the request, which is recorded in the\n      DecisionTaskStarted event in the workflow history. This enables diagnostic tracing\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If on a previous call to this method a <code>NextPageToken</code> was returned, the results are\n      being paginated. To get the next page of results, repeat the call with the returned token and\n      all other arguments unchanged.\n    </p>\n    <note>The <code>nextPageToken</code> returned by this action cannot be used with\n      <a>GetWorkflowExecutionHistory</a> to get the next page. You must call <a>PollForDecisionTask</a> again\n      (with the <code>nextPageToken</code>) to retrieve the next page of history records. Calling <a>PollForDecisionTask</a>\n      with a <code>nextPageToken</code> will not return a new decision task.</note>.\n\n  "
          },
          "maximumPageSize": {
            "shape_name": "PageSize",
            "type": "integer",
            "min_length": 0,
            "max_length": 1000,
            "documentation": "\n    <p>\n      The maximum number of history events returned in each page. The default is 100, but the caller\n      can override this value to a page size <i>smaller</i> than the default. You cannot specify a\n      page size greater than 100.\n      Note that the number of events may be less than the maxiumum page size, in which case, the returned page will have fewer results than the maximumPageSize specified.\n    </p>\n  "
          },
          "reverseOrder": {
            "shape_name": "ReverseOrder",
            "type": "boolean",
            "documentation": "\n    <p>\n      When set to <code>true</code>, returns the events in reverse order. By default the results are returned in ascending order\n      of the <code>eventTimestamp</code> of the events.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DecisionTask",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n         The opaque string used as a handle on the task. This token is used by workers to\n      communicate progress and response information back to the system about\n         the task.\n    </p>\n  ",
            "required": true
          },
          "startedEventId": {
            "shape_name": "EventId",
            "type": "long",
            "documentation": "\n    <p>\n      The id of the <code>DecisionTaskStarted</code> event recorded in the history.\n    </p>\n  ",
            "required": true
          },
          "workflowExecution": {
            "shape_name": "WorkflowExecution",
            "type": "structure",
            "members": {
              "workflowId": {
                "shape_name": "WorkflowId",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                "required": true
              },
              "runId": {
                "shape_name": "RunId",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The workflow execution for which this decision task was created.\n    </p>\n  ",
            "required": true
          },
          "workflowType": {
            "shape_name": "WorkflowType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      The type of the workflow execution for which this decision task was created.\n    </p>\n  ",
            "required": true
          },
          "events": {
            "shape_name": "HistoryEventList",
            "type": "list",
            "members": {
              "shape_name": "HistoryEvent",
              "type": "structure",
              "members": {
                "eventTimestamp": {
                  "shape_name": "Timestamp",
                  "type": "timestamp",
                  "documentation": "\n    <p>\n      The date and time when the event occurred.\n    </p>\n  ",
                  "required": true
                },
                "eventType": {
                  "shape_name": "EventType",
                  "type": "string",
                  "enum": [
                    "WorkflowExecutionStarted",
                    "WorkflowExecutionCancelRequested",
                    "WorkflowExecutionCompleted",
                    "CompleteWorkflowExecutionFailed",
                    "WorkflowExecutionFailed",
                    "FailWorkflowExecutionFailed",
                    "WorkflowExecutionTimedOut",
                    "WorkflowExecutionCanceled",
                    "CancelWorkflowExecutionFailed",
                    "WorkflowExecutionContinuedAsNew",
                    "ContinueAsNewWorkflowExecutionFailed",
                    "WorkflowExecutionTerminated",
                    "DecisionTaskScheduled",
                    "DecisionTaskStarted",
                    "DecisionTaskCompleted",
                    "DecisionTaskTimedOut",
                    "ActivityTaskScheduled",
                    "ScheduleActivityTaskFailed",
                    "ActivityTaskStarted",
                    "ActivityTaskCompleted",
                    "ActivityTaskFailed",
                    "ActivityTaskTimedOut",
                    "ActivityTaskCanceled",
                    "ActivityTaskCancelRequested",
                    "RequestCancelActivityTaskFailed",
                    "WorkflowExecutionSignaled",
                    "MarkerRecorded",
                    "RecordMarkerFailed",
                    "TimerStarted",
                    "StartTimerFailed",
                    "TimerFired",
                    "TimerCanceled",
                    "CancelTimerFailed",
                    "StartChildWorkflowExecutionInitiated",
                    "StartChildWorkflowExecutionFailed",
                    "ChildWorkflowExecutionStarted",
                    "ChildWorkflowExecutionCompleted",
                    "ChildWorkflowExecutionFailed",
                    "ChildWorkflowExecutionTimedOut",
                    "ChildWorkflowExecutionCanceled",
                    "ChildWorkflowExecutionTerminated",
                    "SignalExternalWorkflowExecutionInitiated",
                    "SignalExternalWorkflowExecutionFailed",
                    "ExternalWorkflowExecutionSignaled",
                    "RequestCancelExternalWorkflowExecutionInitiated",
                    "RequestCancelExternalWorkflowExecutionFailed",
                    "ExternalWorkflowExecutionCancelRequested"
                  ],
                  "documentation": "\n      <p>\n         The type of the history event.\n      </p>\n  ",
                  "required": true
                },
                "eventId": {
                  "shape_name": "EventId",
                  "type": "long",
                  "documentation": "\n    <p>\n      The system generated id of the event. This id uniquely identifies the event with in the workflow execution history.\n    </p>\n  ",
                  "required": true
                },
                "workflowExecutionStartedEventAttributes": {
                  "shape_name": "WorkflowExecutionStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the workflow execution (if any).\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration of decision tasks for this workflow type.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions if this workflow execution is terminated,\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n\n      The supported child policies are:\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n    </p>\n  ",
                      "required": true
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list for scheduling the decision tasks for this workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow type of this execution.\n    </p>\n  ",
                      "required": true
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n    <p>\n      The list of tags associated with this workflow execution. An execution can have up to 5 tags.\n    </p>\n  "
                    },
                    "continuedExecutionRunId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      If this workflow execution was started due to a <code>ContinueAsNewWorkflowExecution</code> decision, then\n      it contains the <code>runId</code> of the previous workflow execution that was closed and continued as this execution.\n    </p>\n  "
                    },
                    "parentWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The source workflow execution that started this workflow execution. The member is not set if the workflow execution was\n      not started by a workflow.\n    </p>\n  "
                    },
                    "parentInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this workflow execution. The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCompletedEventAttributes": {
                  "shape_name": "WorkflowExecutionCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The result produced by the workflow execution upon successful completion.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "completeWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "CompleteWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "CompleteWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CompleteWorkflowExecution</code> decision to complete this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CompleteWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionFailedEventAttributes": {
                  "shape_name": "WorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The descriptive reason provided for the failure (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>FailWorkflowExecution</code> decision to fail this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "failWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "FailWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "FailWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>FailWorkflowExecution</code> decision to fail this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>FailWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionTimedOutEventAttributes": {
                  "shape_name": "WorkflowExecutionTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "WorkflowExecutionTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of timeout that caused this event.\n    </p>\n  ",
                      "required": true
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n      <p>\n         The policy used for the child workflow executions of this workflow execution.\n         The supported child policies are:\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n      </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCanceledEventAttributes": {
                  "shape_name": "WorkflowExecutionCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details for the cancellation (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "cancelWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "CancelWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "CancelWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CancelWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionContinuedAsNewEventAttributes": {
                  "shape_name": "WorkflowExecutionContinuedAsNewEventAttributes",
                  "type": "structure",
                  "members": {
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the new workflow execution.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "newExecutionRunId": {
                      "shape_name": "RunId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the new workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The total duration allowed for the new workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      Represents a task list.\n    </p>\n  ",
                      "required": true
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n   <p>\n      The maximum duration of decision tasks for the new workflow execution.\n   </p>\n   <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions of the new execution if it is terminated\n      by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.</p>\n\n      <p>The supported child policies are:</p>\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n      receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n  ",
                      "required": true
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n   <p>\n      The list of tags associated with the new workflow execution.\n   </p>\n  "
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      Represents a workflow type.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionContinuedAsNew</code> then this member is set and\n      provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "continueAsNewWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "ContinueAsNewWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "cause": {
                      "shape_name": "ContinueAsNewWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNHANDLED_DECISION",
                        "WORKFLOW_TYPE_DEPRECATED",
                        "WORKFLOW_TYPE_DOES_NOT_EXIST",
                        "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_CHILD_POLICY_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that started this execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ContinueAsNewWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionTerminatedEventAttributes": {
                  "shape_name": "WorkflowExecutionTerminatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "TerminateReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason provided for the termination (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details provided for the termination (if any).\n    </p>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n      <p>\n         The policy used for the child workflow executions of this workflow execution.\n         The supported child policies are:</p>\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "WorkflowExecutionTerminatedCause",
                      "type": "string",
                      "enum": [
                        "CHILD_POLICY_APPLIED",
                        "EVENT_LIMIT_EXCEEDED",
                        "OPERATOR_INITIATED"
                      ],
                      "documentation": "\n    <p>\n      If set, indicates that the workflow execution was automatically terminated, and specifies the cause.\n      This happens if the parent workflow execution times out or is terminated and the child policy is set to terminate child executions.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionTerminated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionCancelRequestedEventAttributes": {
                  "shape_name": "WorkflowExecutionCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "externalWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution for which the cancellation was requested.\n    </p>\n  "
                    },
                    "externalInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this workflow execution.The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "WorkflowExecutionCancelRequestedCause",
                      "type": "string",
                      "enum": [
                        "CHILD_POLICY_APPLIED"
                      ],
                      "documentation": "\n    <p>\n      If set, indicates that the request to cancel the workflow execution was automatically generated, and specifies the cause.\n      This happens if the parent workflow execution times out or is terminated, and the child policy is set to cancel child executions.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionCancelRequested</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskScheduledEventAttributes": {
                  "shape_name": "DecisionTaskScheduledEventAttributes",
                  "type": "structure",
                  "members": {
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list in which the decision task was scheduled.\n    </p>\n  ",
                      "required": true
                    },
                    "startToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for this decision task. The task is considered timed out if it does not\n      completed within this duration.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskScheduled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskStartedEventAttributes": {
                  "shape_name": "DecisionTaskStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "identity": {
                      "shape_name": "Identity",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      Identity of the decider making the request. This enables diagnostic tracing\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskCompletedEventAttributes": {
                  "shape_name": "DecisionTaskCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "executionContext": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      User defined context for the workflow execution.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>DecisionTaskStarted</code> event recorded when this decision task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "decisionTaskTimedOutEventAttributes": {
                  "shape_name": "DecisionTaskTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "DecisionTaskTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of timeout that expired before the decision task could be completed.\n    </p>\n  ",
                      "required": true
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskScheduled</code> event that was recorded when this decision task was\n      scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>DecisionTaskStarted</code> event recorded when this decision task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskScheduledEventAttributes": {
                  "shape_name": "ActivityTaskScheduledEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityType": {
                      "shape_name": "ActivityType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the activity task.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique id of the activity task.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the activity task.\n    </p>\n  "
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks. This data is not sent to the activity.\n    </p>\n  "
                    },
                    "scheduleToStartTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time the activity task can wait to be assigned to a worker.\n    </p>\n  "
                    },
                    "scheduleToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time for this activity task.\n    </p>\n  "
                    },
                    "startToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum amount of time a worker may take to process the activity task.\n    </p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The task list in which the activity task has been scheduled.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision that\n      resulted in the scheduling of this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "heartbeatTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum time before which the worker processing this task must report progress by\n      calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out.\n      If the worker subsequently attempts to record a heartbeat or return a result, it will be ignored.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskScheduled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskStartedEventAttributes": {
                  "shape_name": "ActivityTaskStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "identity": {
                      "shape_name": "Identity",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      Identity of the worker that was assigned this task. This aids diagnostics\n      when problems arise. The form of this identity is user defined.\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCompletedEventAttributes": {
                  "shape_name": "ActivityTaskCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The results of the activity task (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskFailedEventAttributes": {
                  "shape_name": "ActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason provided for the failure (if any).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskTimedOutEventAttributes": {
                  "shape_name": "ActivityTaskTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "timeoutType": {
                      "shape_name": "ActivityTaskTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE",
                        "SCHEDULE_TO_START",
                        "SCHEDULE_TO_CLOSE",
                        "HEARTBEAT"
                      ],
                      "documentation": "\n    <p>\n      The type of the timeout that caused this event.\n    </p>\n  ",
                      "required": true
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "LimitedData",
                      "type": "string",
                      "max_length": 2048,
                      "documentation": "\n    <p>\n      Contains the content of the <code>details</code> parameter for the last call made by the activity to <code>RecordActivityTaskHeartbeat</code>.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCanceledEventAttributes": {
                  "shape_name": "ActivityTaskCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the cancellation (if any).\n    </p>\n  "
                    },
                    "scheduledEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>ActivityTaskScheduled</code> event that was recorded when this activity task\n      was scheduled.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ActivityTaskStarted</code> event recorded when this activity task was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "latestCancelRequestedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      If set, contains the Id of the last <code>ActivityTaskCancelRequested</code> event recorded for this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "activityTaskCancelRequestedEventAttributes": {
                  "shape_name": "ActivityTaskCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique ID of the task.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ActivityTaskcancelRequested</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "workflowExecutionSignaledEventAttributes": {
                  "shape_name": "WorkflowExecutionSignaledEventAttributes",
                  "type": "structure",
                  "members": {
                    "signalName": {
                      "shape_name": "SignalName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the signal received. The decider can use the signal name and inputs to determine\n      how to the process the signal.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Inputs provided with the signal (if any). The decider can use the signal name and inputs to determine\n      how to process the signal.\n    </p>\n  "
                    },
                    "externalWorkflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow execution that sent the signal. This is set only of the signal was sent by another\n      workflow execution.\n    </p>\n  "
                    },
                    "externalInitiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflow</code> decision to signal this workflow execution.The source event\n      with this Id can be found in the history of the source workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event. This field is set only if the signal was initiated by another workflow execution.\n\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>WorkflowExecutionSignaled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "markerRecordedEventAttributes": {
                  "shape_name": "MarkerRecordedEventAttributes",
                  "type": "structure",
                  "members": {
                    "markerName": {
                      "shape_name": "MarkerName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the marker.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the marker (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RecordMarker</code> decision that requested this marker.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>MarkerRecorded</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "recordMarkerFailedEventAttributes": {
                  "shape_name": "RecordMarkerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "markerName": {
                      "shape_name": "MarkerName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>The marker's name.</p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "RecordMarkerFailedCause",
                      "type": "string",
                      "enum": [
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RecordMarkerFailed</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.</p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>DecisionTaskFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerStartedEventAttributes": {
                  "shape_name": "TimerStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that was started.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    },
                    "startToFireTimeout": {
                      "shape_name": "DurationInSeconds",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The duration of time after which the timer will fire.\n    </p>\n    <p>The duration is specified in seconds. The valid values are integers greater than or equal to 0.</p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartTimer</code> decision for this activity task.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerFiredEventAttributes": {
                  "shape_name": "TimerFiredEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that fired.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>TimerStarted</code> event that was recorded when this timer was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerFired</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "timerCanceledEventAttributes": {
                  "shape_name": "TimerCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer that was canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>TimerStarted</code> event that was recorded when this timer was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelTimer</code> decision to cancel this timer.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>TimerCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startChildWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "StartChildWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent decision\n      tasks. This data is not sent to the activity.\n    </p>\n  "
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The inputs provided to the child workflow execution (if any).\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for the child workflow execution. If the workflow execution is not closed within this duration,\n      it will be timed out and force terminated.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list used for the decision tasks of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a> to request this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n      The policy to use for the child workflow executions if this execution gets terminated by explicitly calling\n      the <a>TerminateWorkflowExecution</a> action or due to an expired timeout.</p>\n    <p>The supported child policies are:</p>\n\n    <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n        <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n        receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n    </ul>\n  ",
                      "required": true
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration allowed for the decision tasks for this workflow execution.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n    <p>\n      The list of tags to associated with the child workflow execution.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartChildWorkflowExecutionInitiated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionStartedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionStartedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was started.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionStarted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionCompletedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionCompletedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was completed.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The result of the child workflow execution (if any).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionCompleted</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The reason for the failure (if provided).\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The details of the failure (if provided).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionFailed</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionTimedOutEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionTimedOutEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that timed out.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "timeoutType": {
                      "shape_name": "WorkflowExecutionTimeoutType",
                      "type": "string",
                      "enum": [
                        "START_TO_CLOSE"
                      ],
                      "documentation": "\n    <p>\n      The type of the timeout that caused the child workflow execution to time out.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionTimedOut</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionCanceledEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionCanceledEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Details of the cancellation (if provided).\n    </p>\n  "
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionCanceled</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "childWorkflowExecutionTerminatedEventAttributes": {
                  "shape_name": "ChildWorkflowExecutionTerminatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The child workflow execution that was terminated.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "startedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The Id of the <code>ChildWorkflowExecutionStarted</code> event recorded when this child workflow execution was started.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ChildWorkflowExecutionTerminated</code> then this member is set and provides\n      detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "signalExternalWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "SignalExternalWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution to send the signal to.\n    </p>\n  "
                    },
                    "signalName": {
                      "shape_name": "SignalName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the signal.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Input provided to the signal (if any).\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in\n      the <code>SignalExternalWorkflowExecution</code> decision for this signal.\n      This information can be useful for diagnosing problems by tracing back the cause of events leading up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent decision\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>SignalExternalWorkflowExecutionInitiated</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "externalWorkflowExecutionSignaledEventAttributes": {
                  "shape_name": "ExternalWorkflowExecutionSignaledEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution that the signal was delivered to.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflowExecution</code> decision to request this signal.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ExternalWorkflowExecutionSignaled</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "signalExternalWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "SignalExternalWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution that the signal was being delivered to.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution that the signal was being delivered to.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "SignalExternalWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
                        "SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>SignalExternalWorkflowExecution</code> decision to request this signal.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that resulted in\n      the <code>SignalExternalWorkflowExecution</code> decision for this signal.\n      This information can be useful for diagnosing problems by tracing back the cause of events leading up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>If the event is of type <code>SignalExternalWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.</p>\n  "
                },
                "externalWorkflowExecutionCancelRequestedEventAttributes": {
                  "shape_name": "ExternalWorkflowExecutionCancelRequestedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowExecution": {
                      "shape_name": "WorkflowExecution",
                      "type": "structure",
                      "members": {
                        "workflowId": {
                          "shape_name": "WorkflowId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n         The user defined identifier associated with the workflow execution.\n    </p>\n  ",
                          "required": true
                        },
                        "runId": {
                          "shape_name": "RunId",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      A system generated unique identifier for the workflow execution.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The external workflow execution to which the cancellation request was delivered.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ExternalWorkflowExecutionCancelRequested</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": {
                  "shape_name": "RequestCancelExternalWorkflowExecutionInitiatedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution to be canceled.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution to be canceled.\n    </p>\n  "
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelExternalWorkflowExecutionInitiated</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelExternalWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "RequestCancelExternalWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow to which the cancel request was to be delivered.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution.\n    </p>\n  "
                    },
                    "cause": {
                      "shape_name": "RequestCancelExternalWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION",
                        "REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding to the\n      <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this external workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelExternalWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "scheduleActivityTaskFailedEventAttributes": {
                  "shape_name": "ScheduleActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityType": {
                      "shape_name": "ActivityType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The activity type provided in the <code>ScheduleActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The activityId provided in the <code>ScheduleActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "ScheduleActivityTaskFailedCause",
                      "type": "string",
                      "enum": [
                        "ACTIVITY_TYPE_DEPRECATED",
                        "ACTIVITY_TYPE_DOES_NOT_EXIST",
                        "ACTIVITY_ID_ALREADY_IN_USE",
                        "OPEN_ACTIVITIES_LIMIT_EXCEEDED",
                        "ACTIVITY_CREATION_RATE_EXCEEDED",
                        "DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED",
                        "DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision that\n      resulted in the scheduling of this activity task.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>ScheduleActivityTaskFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "requestCancelActivityTaskFailedEventAttributes": {
                  "shape_name": "RequestCancelActivityTaskFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The activityId provided in the <code>RequestCancelActivityTask</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "RequestCancelActivityTaskFailedCause",
                      "type": "string",
                      "enum": [
                        "ACTIVITY_ID_UNKNOWN",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>RequestCancelActivityTask</code> decision for this cancellation request.\n      This information can be useful for diagnosing problems by tracing back the cause of events.</p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>RequestCancelActivityTaskFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startTimerFailedEventAttributes": {
                  "shape_name": "StartTimerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The timerId provided in the <code>StartTimer</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "StartTimerFailedCause",
                      "type": "string",
                      "enum": [
                        "TIMER_ID_ALREADY_IN_USE",
                        "OPEN_TIMERS_LIMIT_EXCEEDED",
                        "TIMER_CREATION_RATE_EXCEEDED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartTimer</code> decision for this activity task.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartTimerFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "cancelTimerFailedEventAttributes": {
                  "shape_name": "CancelTimerFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The timerId provided in the <code>CancelTimer</code> decision that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "CancelTimerFailedCause",
                      "type": "string",
                      "enum": [
                        "TIMER_ID_UNKNOWN",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>\n      The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.\n    </p>\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>CancelTimer</code> decision to cancel this timer.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>CancelTimerFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                },
                "startChildWorkflowExecutionFailedEventAttributes": {
                  "shape_name": "StartChildWorkflowExecutionFailedEventAttributes",
                  "type": "structure",
                  "members": {
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The workflow type provided in the <code>StartChildWorkflowExecution</code> <a>Decision</a> that failed.\n    </p>\n  ",
                      "required": true
                    },
                    "cause": {
                      "shape_name": "StartChildWorkflowExecutionFailedCause",
                      "type": "string",
                      "enum": [
                        "WORKFLOW_TYPE_DOES_NOT_EXIST",
                        "WORKFLOW_TYPE_DEPRECATED",
                        "OPEN_CHILDREN_LIMIT_EXCEEDED",
                        "OPEN_WORKFLOWS_LIMIT_EXCEEDED",
                        "CHILD_CREATION_RATE_EXCEEDED",
                        "WORKFLOW_ALREADY_RUNNING",
                        "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_TASK_LIST_UNDEFINED",
                        "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED",
                        "DEFAULT_CHILD_POLICY_UNDEFINED",
                        "OPERATION_NOT_PERMITTED"
                      ],
                      "documentation": "\n    <p>The cause of the failure to process the decision.\n      This information is generated by the system and can be useful for diagnostic purposes.</p>\n\n    <note>If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</note>\n  ",
                      "required": true
                    },
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the child workflow execution.\n    </p>\n  ",
                      "required": true
                    },
                    "initiatedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding to the\n      <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the chain of events leading\n      up to this event.\n    </p>\n  ",
                      "required": true
                    },
                    "decisionTaskCompletedEventId": {
                      "shape_name": "EventId",
                      "type": "long",
                      "documentation": "\n    <p>\n      The id of the <code>DecisionTaskCompleted</code> event corresponding to the decision task that\n      resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a> to request this child workflow execution.\n      This information can be useful for diagnosing problems by tracing back the cause of events.\n    </p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>\n      If the event is of type <code>StartChildWorkflowExecutionFailed</code> then this member\n      is set and provides detailed information about the event. It is not set for other event types.\n    </p>\n  "
                }
              },
              "documentation": "\n      <p>Event within a workflow execution. A history event can be one of these types:</p>\n      <ul>\n         <li>\n            <b>WorkflowExecutionStarted</b>: The workflow execution was started.\n         </li>\n         <li>\n            <b>WorkflowExecutionCompleted</b>: The workflow execution was closed due to successful completion.\n         </li>\n         <li>\n            <b>WorkflowExecutionFailed</b>: The workflow execution closed due to a failure.\n         </li>\n         <li>\n            <b>WorkflowExecutionTimedOut</b>: The workflow execution was closed because a time out was exceeded.\n         </li>\n         <li>\n            <b>WorkflowExecutionCanceled</b>: The workflow execution was successfully canceled and closed.\n         </li>\n         <li>\n            <b>WorkflowExecutionTerminated</b>: The workflow execution was terminated.\n         </li>\n         <li>\n            <b>WorkflowExecutionContinuedAsNew</b>: The workflow execution was closed and a new\n            execution of the same type was created with the same workflowId.\n         </li>\n         <li>\n            <b>WorkflowExecutionCancelRequested</b>: A request to cancel this workflow execution was made.\n         </li>\n         <li>\n            <b>DecisionTaskScheduled</b>: A decision task was scheduled for the workflow execution.\n         </li>\n         <li>\n            <b>DecisionTaskStarted</b>: The decision task was dispatched to a decider.\n         </li>\n         <li>\n            <b>DecisionTaskCompleted</b>: The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.\n         </li>\n<!--\n         <li>\n            <b>DecisionTaskFailed</b>: The decider failed a decision task by calling <a>RespondDecisionTaskFailed</a>.\n         </li>\n         --><li>\n            <b>DecisionTaskTimedOut</b>: The decision task timed out.\n         </li>\n         <li>\n            <b>ActivityTaskScheduled</b>: An activity task was scheduled for execution.\n         </li>\n         <li>\n            <b>ScheduleActivityTaskFailed</b>: Failed to process ScheduleActivityTask decision. This happens when\n            the decision is not configured properly, for example the activity type specified is not registered.\n         </li>\n         <li>\n            <b>ActivityTaskStarted</b>: The scheduled activity task was dispatched to a worker.\n         </li>\n         <li>\n            <b>ActivityTaskCompleted</b>: An activity worker successfully completed an activity task by calling <a>RespondActivityTaskCompleted</a>.\n         </li>\n         <li>\n            <b>ActivityTaskFailed</b>: An activity worker failed an activity task by calling <a>RespondActivityTaskFailed</a>.\n         </li>\n         <li>\n            <b>ActivityTaskTimedOut</b>: The activity task timed out.\n         </li>\n         <li>\n            <b>ActivityTaskCanceled</b>: The activity task was successfully canceled.\n         </li>\n         <!--\n         <li>\n            <b>ActivityTaskHeartbeatRecorded</b>: A call to <a>RecordActivityTaskHeartbeat</a> was\n            successfully processed by the system.\n         </li>\n         -->\n         <li>\n            <b>ActivityTaskCancelRequested</b>: A <code>RequestCancelActivityTask</code> decision was\n            received by the system.\n         </li>\n         <li>\n            <b>RequestCancelActivityTaskFailed</b>: Failed to process RequestCancelActivityTask decision. This happens when\n            the decision is not configured properly.\n         </li>\n         <li>\n            <b>WorkflowExecutionSignaled</b>: An external signal was received for the workflow execution.\n         </li>\n         <li>\n            <b>MarkerRecorded</b>: A marker was recorded in the workflow history as the result of a\n            <code>RecordMarker</code> decision.\n         </li>\n         <li>\n            <b>TimerStarted</b>: A timer was started for the workflow execution due to a\n            <code>StartTimer</code> decision.\n         </li>\n         <li>\n            <b>StartTimerFailed</b>: Failed to process StartTimer decision. This happens when\n            the decision is not configured properly, for example a timer already exists with the specified timer Id.\n         </li>\n         <li>\n            <b>TimerFired</b>: A timer, previously started for this workflow execution, fired.\n         </li>\n         <li>\n            <b>TimerCanceled</b>: A timer, previously started for this workflow execution,\n            was successfully canceled.\n         </li>\n         <li>\n            <b>CancelTimerFailed</b>: Failed to process CancelTimer decision. This happens when\n            the decision is not configured properly, for example no timer exists with the specified timer Id.\n         </li>\n         <li>\n            <b>StartChildWorkflowExecutionInitiated</b>: A request was made to start a child workflow execution.\n         </li>\n         <li>\n            <b>StartChildWorkflowExecutionFailed</b>: Failed to process StartChildWorkflowExecution decision.\n            This happens when the decision is not configured properly, for example the workflow type specified is not registered.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionStarted</b>: A child workflow execution was successfully started.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionCompleted</b>: A child workflow execution, started by this workflow execution,\n            completed successfully and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionFailed</b>: A child workflow execution, started by this workflow execution,\n            failed to complete successfully and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionTimedOut</b>:  A child workflow execution, started by this workflow execution,\n            timed out and was closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionCanceled</b>:  A child workflow execution, started by this workflow execution,\n            was canceled and closed.\n         </li>\n         <li>\n            <b>ChildWorkflowExecutionTerminated</b>:  A child workflow execution, started by this workflow execution,\n            was terminated.\n         </li>\n         <li>\n            <b>SignalExternalWorkflowExecutionInitiated</b>: A request to signal an external workflow was made.\n         </li>\n         <li>\n            <b>ExternalWorkflowExecutionSignaled</b>: A signal, requested by this workflow execution, was successfully\n            delivered to the target external workflow execution.\n         </li>\n         <li>\n            <b>SignalExternalWorkflowExecutionFailed</b>:  The request to signal an external\n            workflow execution failed.\n         </li>\n         <li>\n            <b>RequestCancelExternalWorkflowExecutionInitiated</b>: A request was made to request the cancellation of an external workflow execution.\n         </li>\n         <li>\n            <b>ExternalWorkflowExecutionCancelRequested</b>: Request to cancel an external workflow execution was successfully\n            delivered to the target execution.\n         </li>\n         <li>\n            <b>RequestCancelExternalWorkflowExecutionFailed</b>: Request to cancel an external workflow execution\n            failed.\n         </li>\n      </ul>\n  "
            },
            "documentation": "\n    <p>\n      A paginated list of history events of the workflow execution. The decider uses this\n      during the processing of the decision task.\n    </p>\n  ",
            "required": true
          },
          "nextPageToken": {
            "shape_name": "PageToken",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      Returns a value if the results are paginated. To get the next page of results,\n      repeat the request specifying this token and all other arguments unchanged.\n    </p>\n  "
          },
          "previousStartedEventId": {
            "shape_name": "EventId",
            "type": "long",
            "documentation": "\n    <p>\n      The id of the DecisionTaskStarted event of the previous decision task of this workflow execution\n      that was processed by the decider. This can be used to determine the events in the history new since the\n      last decision task received by the decider.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      A structure that represents a decision task. Decision tasks are sent to\n      deciders in order for them to make decisions.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.\n      A decision task may be returned for any open workflow execution that is\n      using the specified task list. The task includes a paginated view of the history of the workflow execution.\n      The decider should use the workflow type and the history to determine how to properly handle the task.\n    </p>\n    <p>\n      This action initiates a long poll, where the service holds the HTTP connection open and responds as soon a task becomes available.\n      If no decision task is available in the specified task list before the timeout of 60 seconds expires, an empty result is returned.\n      An empty result, in this context, means that a DecisionTask is returned, but that the value of taskToken is an empty string.\n    </p>\n    <important>\n      Deciders should set their client side socket timeout to at least 70 seconds (10 seconds higher than the timeout).\n    </important>\n    <important>\n      Because the number of workflow history events for a single workflow execution might be very large, the result\n      returned might be split up across a number of pages.\n      To retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code> using the <code>nextPageToken</code> returned by the initial call.\n      Note that you do <b>not</b> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>. Instead, call <code>PollForDecisionTask</code> again.\n    </important>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n\n      <example>\n\n        <name> PollForDecisionTask Example </name>\n\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 02:09:54 GMT\n          X-Amz-Target: SimpleWorkflowService.PollForDecisionTask\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=R3CJ2HMLSVpc2p6eafeztZCZWcgza+h61gSUuWx15gw=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 171\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"},\n          \"identity\": \"Decider01\",\n          \"maximumPageSize\": 50,\n          \"reverseOrder\": true}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 1639\n          Content-Type: application/json\n          x-amzn-RequestId: 03db54cf-3f1e-11e1-b118-3bfa5e8e7fc3\n\n          {\"events\":\n          [\n          {\"decisionTaskStartedEventAttributes\":\n          {\"identity\": \"Decider01\",\n          \"scheduledEventId\": 2},\n          \"eventId\": 3,\n          \"eventTimestamp\": 1326593394.566,\n          \"eventType\": \"DecisionTaskStarted\"},\n          {\"decisionTaskScheduledEventAttributes\":\n          {\"startToCloseTimeout\": \"600\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"}\n          },\n          \"eventId\": 2,\n          \"eventTimestamp\": 1326592619.474,\n          \"eventType\": \"DecisionTaskScheduled\"},\n          {\"eventId\": 1,\n          \"eventTimestamp\": 1326592619.474,\n          \"eventType\": \"WorkflowExecutionStarted\",\n          \"workflowExecutionStartedEventAttributes\":\n          {\"childPolicy\": \"TERMINATE\",\n          \"executionStartToCloseTimeout\": \"3600\",\n          \"input\": \"arbitrary-string-that-is-meaningful-to-the-workflow\",\n          \"parentInitiatedEventId\": 0,\n          \"tagList\":\n          [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n          \"taskList\":\n          {\"name\": \"specialTaskList\"},\n          \"taskStartToCloseTimeout\": \"600\",\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n          }\n          ],\n          \"previousStartedEventId\": 0,\n          \"startedEventId\": 3,\n          \"taskToken\": \"AAAAKgAAAAEAAAAAAAAAATZDvCYwk/hP/X1ZGdJhb+T6OWzcBx2DPhsIi5HF4aGQI4OXrDE7Ny3uM+aiAhGrmeNyVAa4yNIBQuoZuJA5G+BoaB0JuHFBOynHDTnm7ayNH43KhMkfdrDG4elfHSz3m/EtbLnFGueAr7+3NKDG6x4sTKg3cZpOtSguSx05yI1X3AtscS8ATcLB2Y3Aub1YonN/i/k67voca/GFsSiwSz3AAnJj1IPvrujgIj9KUvckwRPC5ET7d33XJcRp+gHYzZsBLVBaRmV3gEYAnp2ICslFn4YSjGy+dFXCNpOa4G1O8pczCbFUGbQ3+5wf0RSaa/xMq2pfdBKnuFp0wp8kw1k+5ZsbtDZeZn8g5GyKCLiLms/xD0OxugGGUe5ZlAoHEkTWGxZj/G32P7cMoCgrcACfFPdx1LNYYEre7YiGiyjGnfW2t5mW7VK9Np28vcXVbdpH4JNEB9OuB1xqL8N8ifPVtc72uxB1i9XEdq/8rkXasSEw4TubB2FwgqnuJstmfEhpOdb5HfhR6OwmnHuk9eszO/fUkGucTUXQP2hhB+Gz\",\n          \"workflowExecution\":\n          {\"runId\": \"06b8f87a-24b3-40b6-9ceb-9676f28e9493\",\n          \"workflowId\": \"20110927-T-1\"},\n          \"workflowType\":\n          {\"name\": \"customerOrderWorkflow\",\n          \"version\": \"1.0\"}\n          }\n        </response>\n\n      </example>\n\n    </examples>\n\n  "
    },
    "RecordActivityTaskHeartbeat": {
      "name": "RecordActivityTaskHeartbeat",
      "input": {
        "shape_name": "RecordActivityTaskHeartbeatInput",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The <code>taskToken</code> of the <a>ActivityTask</a>.\n    </p>\n    <important>\n      The <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.\n    </important>\n  ",
            "required": true
          },
          "details": {
            "shape_name": "LimitedData",
            "type": "string",
            "max_length": 2048,
            "documentation": "\n    <p>\n      If specified, contains details about the progress of the task.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ActivityTaskStatus",
        "type": "structure",
        "members": {
          "cancelRequested": {
            "shape_name": "Canceled",
            "type": "boolean",
            "documentation": "\n    <p>\n      Set to <code>true</code> if cancellation of the task is requested.\n    </p>\n  ",
            "required": true
          }
        },
        "documentation": "\n    <p>\n      Status information about an activity task.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by activity workers to report to the service that the <a>ActivityTask</a> represented by the specified\n      <code>taskToken</code> is still making progress. The worker can also (optionally) specify details of the progress,\n      for example percent complete, using the <code>details</code> parameter.\n\n      This action can also be used by the worker as a mechanism to check if cancellation is being requested for the activity task.\n      If a cancellation is being attempted for the specified task, then the boolean <code>cancelRequested</code> flag\n      returned by the service is set to <code>true</code>.\n    </p>\n    <p>\n      This action resets the <code>taskHeartbeatTimeout</code> clock.\n      The <code>taskHeartbeatTimeout</code> is specified in <a>RegisterActivityType</a>.\n    </p>\n    <p>\n      This action does not in itself create an event in the workflow execution history.\n      However, if the task times out, the workflow execution history will contain a <code>ActivityTaskTimedOut</code> event\n      that contains the information from the last heartbeat generated by the activity worker.\n    </p>\n    <note>\n      The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration of an activity task, regardless\n      of the number of <a>RecordActivityTaskHeartbeat</a> requests received. The <code>taskStartToCloseTimeout</code> is also\n      specified in <a>RegisterActivityType</a>.\n    </note>\n    <note>\n      This operation is only useful for long-lived activities to report liveliness of the task and to determine\n      if a cancellation is being attempted.\n    </note>\n\n    <important>\n      If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation is being\n      attempted. If the worker can cancel the activity, it should respond with\n      <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.\n    </important>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RecordActivityTaskHeartbeat Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 03:55:06 GMT\n          X-Amz-Target: SimpleWorkflowService.RecordActivityTaskHeartbeat\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=DEA8rw5TqtpqCeTljl7eotZkuWTgmGZ1PWyDNZPehT0=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 623\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAX9p3pcp3857oLXFUuwdxRU5/zmn9f40XaMF7VohAH4jOtjXpZu7GdOzEi0b3cWYHbG5b5dpdcTXHUDPVMHXiUxCgr+Nc/wUW9016W4YxJGs/jmxzPln8qLftU+SW135Q0UuKp5XRGoRTJp3tbHn2pY1vC8gDB/K69J6q668U1pd4Cd9o43//lGgOIjN0/Ihg+DO+83HNcOuVEQMM28kNMXf7yePh31M4dMKJwQaQZG13huJXDwzJOoZQz+XFuqFly+lPnCE4XvsnhfAvTsh50EtNDEtQzPCFJoUeld9g64V/FS/39PHL3M93PBUuroPyHuCwHsNC6fZ7gM/XOKmW4kKnXPoQweEUkFV/J6E6+M1reBO7nJADTrLSnajg6MY/viWsEYmMw/DS5FlquFaDIhFkLhWUWN+V2KqiKS23GYwpzgZ7fgcWHQF2NLEY3zrjam4LW/UW5VLCyM3FpVD3erCTi9IvUgslPzyVGuWNAoTmgJEWvimgwiHxJMxxc9JBDR390iMmImxVl3eeSDUWx8reQltiviadPDjyRmVhYP8\",\n          \"details\": \"starting task\"}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 25\n          Content-Type: application/json\n          x-amzn-RequestId: e08622cd-3ff5-11e1-9b11-7182192d0b57\n\n          {\"cancelRequested\":false}\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RegisterActivityType": {
      "name": "RegisterActivityType",
      "input": {
        "shape_name": "RegisterActivityTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain in which this activity is to be registered.\n    </p>\n  ",
            "required": true
          },
          "name": {
            "shape_name": "Name",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the activity type within the domain.\n    </p>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
            "required": true
          },
          "version": {
            "shape_name": "Version",
            "type": "string",
            "min_length": 1,
            "max_length": 64,
            "documentation": "\n    <p>\n      The version of the activity type.\n    </p>\n    <note>\n      The activity type consists of the name and version, the combination of which must be unique within the domain.\n    </note>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
            "required": true
          },
          "description": {
            "shape_name": "Description",
            "type": "string",
            "max_length": 1024,
            "documentation": "\n    <p>\n      A textual description of the activity type.\n    </p>\n  "
          },
          "defaultTaskStartToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n    <p>\n      If set, specifies the default maximum duration that a worker can take to process tasks of this activity type.\n      This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
          },
          "defaultTaskHeartbeatTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n    <p>\n      If set, specifies the default maximum time before which a worker processing a task of this type must report progress by\n      calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out.\n      This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.\n      If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives\n      an <code>UnknownResource</code> fault.\n      In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
          },
          "defaultTaskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n    <p>\n      If set, specifies the default task list to use for scheduling tasks of this activity type. This default task list is used\n      if a task list is not provided when a task is scheduled through the <code>ScheduleActivityTask</code> <a>Decision</a>.\n    </p>\n  "
          },
          "defaultTaskScheduleToStartTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n    <p>\n      If set, specifies the default maximum duration that a task of this activity type can wait before being assigned to a worker.\n      This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
          },
          "defaultTaskScheduleToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n    <p>\n      If set, specifies the default maximum duration for a task of this activity type.\n      This default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "TypeAlreadyExistsFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned if the type\n      already exists in the specified domain. You will get this fault even if the existing\n      type is in deprecated status.\n      You can specify another version if the intent is to create a new distinct version of the type.\n    </p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        },
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Registers a new <i>activity type</i> along with its configuration settings in the specified domain.\n    </p>\n\n    <important>\n      A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the domain. You cannot change any configuration\n      settings of the type after its registration, and it must be registered as a new version.\n    </important>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n      <ul>\n        <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n        <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n        <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n          <ul>\n            <li>\n<code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.</li>\n            <li>\n<code>name</code>: String constraint. The key is <code>swf:name</code>.</li>\n            <li>\n<code>version</code>: String constraint. The key is <code>swf:version</code>.</li>\n          </ul>\n</li>\n      </ul>\n      <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n        see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RegisterActivityType Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 00:14:06 GMT\n          X-Amz-Target: SimpleWorkflowService.RegisterActivityType\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=F9cptqaGWa2H7LW3dpctF9J5svsB6FRZ4krghCRnml0=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 343\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"name\": \"activityVerify\",\n          \"version\": \"1.0\",\n          \"description\": \"Verify the customer credit card\",\n          \"defaultTaskStartToCloseTimeout\": \"600\",\n          \"defaultTaskHeartbeatTimeout\": \"120\",\n          \"defaultTaskList\":\n          {\"name\": \"mainTaskList\"},\n          \"defaultTaskScheduleToStartTimeout\": \"300\",\n          \"defaultTaskScheduleToCloseTimeout\": \"900\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: d68969c7-3f0d-11e1-9b11-7182192d0b57\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RegisterDomain": {
      "name": "RegisterDomain",
      "input": {
        "shape_name": "RegisterDomainInput",
        "type": "structure",
        "members": {
          "name": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         Name of the domain to register. The name must be unique.\n      </p>\n      <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n   ",
            "required": true
          },
          "description": {
            "shape_name": "Description",
            "type": "string",
            "max_length": 1024,
            "documentation": "\n      <p>Textual description of the domain.</p>\n   "
          },
          "workflowExecutionRetentionPeriodInDays": {
            "shape_name": "DurationInDays",
            "type": "string",
            "min_length": 1,
            "max_length": 8,
            "documentation": "\n      <p>A duration (in days) for which the record (including the history) of workflow executions in this domain should\n      be kept by the service. After the retention period, the workflow execution will not be available in the results of\n      visibility calls.</p>\n      <p>If you pass the value <code>NONE</code> then there is no expiration for workflow execution history (effectively\n      an infinite retention period).</p>\n   ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "DomainAlreadyExistsFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned if the specified domain already exists. You will\n      get this fault even if the existing domain is in deprecated status.\n    </p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Registers a new domain.\n      </p>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n     <ul>\n       <li>You cannot use an IAM policy to control domain access for this action. The name of the domain being\n       registered is available as the resource of this action.</li>\n       <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n       <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n     </ul>\n     <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n       see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n     <p></p>\n<examples>\n    <example>\n       <name> RegisterDomain Example </name>\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Fri, 13 Jan 2012 18:42:12 GMT\nX-Amz-Target: SimpleWorkflowService.RegisterDomain\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=tzjkF55lxAxPhzp/BRGFYQRQRq6CqrM254dTDE/EncI=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 91\nPragma: no-cache\nCache-Control: no-cache\n\n{\"name\": \"867530902\",\n \"description\": \"music\",\n \"workflowExecutionRetentionPeriodInDays\": \"60\"}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\nx-amzn-RequestId: 4ec4ac3f-3e16-11e1-9b11-7182192d0b57\n</response>\n\n      </example>\n\n    </examples>\n\n  "
    },
    "RegisterWorkflowType": {
      "name": "RegisterWorkflowType",
      "input": {
        "shape_name": "RegisterWorkflowTypeInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The name of the domain in which to register the workflow type.\n      </p>\n   ",
            "required": true
          },
          "name": {
            "shape_name": "Name",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The name of the workflow type.\n      </p>\n      <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n   ",
            "required": true
          },
          "version": {
            "shape_name": "Version",
            "type": "string",
            "min_length": 1,
            "max_length": 64,
            "documentation": "\n      <p>\n         The version of the workflow type.\n      </p>\n      <note>\n         The workflow type consists of the name and version, the combination of which must be unique within the domain. To get a list of all currently registered\n         workflow types, use the <a>ListWorkflowTypes</a> action.\n      </note>\n      <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n   ",
            "required": true
          },
          "description": {
            "shape_name": "Description",
            "type": "string",
            "max_length": 1024,
            "documentation": "\n      <p>\n         Textual description of the workflow type.\n      </p>\n   "
          },
          "defaultTaskStartToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n      <p>\n         If set, specifies the default maximum duration of decision tasks for this workflow type. This\n         default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the\n         <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   "
          },
          "defaultExecutionStartToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n      <p>\n         If set, specifies the default maximum duration for executions of this workflow type. You can\n         override this default when starting an execution through the <a>StartWorkflowExecution</a> Action or\n         <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n      </p>\n\n      <p>\n         The duration is specified in seconds. The valid values are integers greater than or equal to 0.\n         Unlike some of the other timeout parameters in Amazon SWF, you cannot specify a value of \"NONE\" for <code>defaultExecutionStartToCloseTimeout</code>; there is a\n         one-year max limit on the time that a workflow execution can run. Exceeding this limit will always cause the workflow execution to time out.\n      </p>\n\n   "
          },
          "defaultTaskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n      <p>\n         If set, specifies the default task list to use for scheduling decision tasks for executions of this workflow type.\n         This default is used only if a task list is not provided when starting the execution\n         through the <a>StartWorkflowExecution</a> Action or <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n      </p>\n   "
          },
          "defaultChildPolicy": {
            "shape_name": "ChildPolicy",
            "type": "string",
            "enum": [
              "TERMINATE",
              "REQUEST_CANCEL",
              "ABANDON"
            ],
            "documentation": "\n      <p>\n         If set, specifies the default policy to use for the child workflow executions when a workflow execution of this type is terminated,\n         by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n         This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or\n         the <code>StartChildWorkflowExecution</code> <a>Decision</a>.\n         The supported child policies are:</p>\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n   "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "TypeAlreadyExistsFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned if the type\n      already exists in the specified domain. You will get this fault even if the existing\n      type is in deprecated status.\n      You can specify another version if the intent is to create a new distinct version of the type.\n    </p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        },
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Registers a new <i>workflow type</i> and its configuration settings in the specified domain.\n      </p>\n    <p>\n      The retention period for the workflow history is set by the <a>RegisterDomain</a> action.\n    </p>\n      <important>\n         If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned. You cannot change the configuration settings\n         of a workflow type once it is registered and it must be registered as a new version.\n      </important>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n       <ul>\n         <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n         <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n         <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n           <ul>\n             <li>\n<code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.</li>\n             <li>\n<code>name</code>: String constraint. The key is <code>swf:name</code>.</li>\n             <li>\n<code>version</code>: String constraint. The key is <code>swf:version</code>.</li>\n           </ul>\n</li>\n       </ul>\n       <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n         see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n<examples>\n\n    <example>\n       <name> RegisterWorkflowType Example </name>\n\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Fri, 13 Jan 2012 18:59:33 GMT\nX-Amz-Target: SimpleWorkflowService.RegisterWorkflowType\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=p5FUOoV3QXAafb7aK5z79Ztu5v0w9NeEqLu0ei+P9FA=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 300\nPragma: no-cache\nCache-Control: no-cache\n\n{\"domain\": \"867530901\",\n \"name\": \"customerOrderWorkflow\",\n \"version\": \"1.0\",\n \"description\": \"Handle customer orders\",\n \"defaultTaskStartToCloseTimeout\": \"600\",\n \"defaultExecutionStartToCloseTimeout\": \"3600\",\n \"defaultTaskList\":\n   {\"name\": \"mainTaskList\"},\n \"defaultChildPolicy\": \"TERMINATE\"}\n</request>\n\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\nx-amzn-RequestId: bb469e67-3e18-11e1-9914-a356b6ea8bdf\n</response>\n\n    </example>\n  </examples>\n"
    },
    "RequestCancelWorkflowExecution": {
      "name": "RequestCancelWorkflowExecution",
      "input": {
        "shape_name": "RequestCancelWorkflowExecutionInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the workflow execution to cancel.\n    </p>\n  ",
            "required": true
          },
          "workflowId": {
            "shape_name": "WorkflowId",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The workflowId of the workflow execution to cancel.\n    </p>\n  ",
            "required": true
          },
          "runId": {
            "shape_name": "RunIdOptional",
            "type": "string",
            "max_length": 64,
            "documentation": "\n    <p>\n      The runId of the workflow execution to cancel.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running workflow execution\n      identified by the given domain, workflowId, and runId. This logically requests the\n      cancellation of the workflow execution as a whole. It is up to the decider to take appropriate actions when it\n      receives an execution history with this event.\n    </p>\n    <note>\n      If the runId is not specified, the\n      <code>WorkflowExecutionCancelRequested</code> event is recorded in the history of the current open workflow execution with the\n      specified workflowId in the domain.\n    </note>\n    <note>\n      Because this action allows the workflow to properly clean up and gracefully close, it should be used instead of\n      <a>TerminateWorkflowExecution</a> when possible.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RequestCancelWorkflowExecution Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 04:49:06 GMT\n          X-Amz-Target: SimpleWorkflowService.RequestCancelWorkflowExecution\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=xODwV3kbpJbWVa6bQiV2zQAw9euGI3uXI82urc+bVeo=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 106\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"workflowId\": \"20110927-T-1\",\n          \"runId\": \"94861fda-a714-4126-95d7-55ba847da8ab\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: 6bd0627e-3ffd-11e1-9b11-7182192d0b57\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RespondActivityTaskCanceled": {
      "name": "RespondActivityTaskCanceled",
      "input": {
        "shape_name": "RespondActivityTaskCanceledInput",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The <code>taskToken</code> of the <a>ActivityTask</a>.\n    </p>\n    <important>\n      The <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.\n    </important>\n\n  ",
            "required": true
          },
          "details": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      Optional information about the cancellation.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code>\n      was successfully canceled. Additional <code>details</code> can be optionally provided using the <code>details</code> argument.\n    </p>\n    <p>\n      These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code> event added to\n      the workflow history.\n    </p>\n    <important>\n      Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a> request returns\n      <code>true</code> and if the activity can be safely undone or abandoned.\n    </important>\n\n    <p>\n      A task is considered open from the time that it is scheduled until it is\n      closed. Therefore a task is reported as open while a worker is\n      processing it. A task is closed after it has been specified in a call to\n      <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,\n      <a>RespondActivityTaskFailed</a>, or the task has\n      <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\">timed out</a>.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RespondActivityTaskCanceled Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 04:36:44 GMT\n          X-Amz-Target: SimpleWorkflowService.RespondActivityTaskCanceled\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=7ZMb0Np0OyXw6hrFSBFDAfBnSaEP1TH7cAG29DL5BUI=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 640\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAQlFok8Ay875ki85gos/Okm9kWg1Jm6DbwiBZgxyCrW2OS+DQQtrCTMr+KH1ouxrCVOkTXPOUY/M4Ujfr1CrsMi6S0DMD8/N6yxzd34+PIIvRY8w9M5z89PbPQKjKHKbz2ocbTnHgRThaBO4ZmeadNyZWSeQyZXmsQFmFuHfaH9P2ibzrDS1dU+s/iw/R9RBrRWArsph/FIfWdRUJfu/FH9IFPSb3KYKMVaJAOyWhcR1KrRGywIGxPC7m9tQjapXqitoRYj42qgABydT4NVR5cLCkeYW0LKxUGVU46+gNvRaUfYzP31JVARQh5d0j7S/ERi10m6bamPJ3UcZfLFbM42mIINywmcTORMpQ/nPGLU1iECYrtnAV0YTlGZfGm+Vi6Gcgwyi4hEjg7TCBjc6WBw3JuAfFvUPU5cfvAoX7quUZRA7JUnYGObE0y9zYuTnCx6C1GL7Ks2MEA0coIiAl4JZx6qsGYfeKjIGntTsoCEe1zjp5gRqfeD74kfeZg0HmqA0xiFGZ40OHbImnF5YHsedYfLk6u09SAkQMD8iJhT8\",\n          \"details\": \"customer canceled transaction\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: b1a001a6-3ffb-11e1-9b11-7182192d0b57\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RespondActivityTaskCompleted": {
      "name": "RespondActivityTaskCompleted",
      "input": {
        "shape_name": "RespondActivityTaskCompletedInput",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The <code>taskToken</code> of the <a>ActivityTask</a>.\n    </p>\n    <important>\n      The <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.\n    </important>\n\n  ",
            "required": true
          },
          "result": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      The result of the activity task. It is a free form string that is implementation specific.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code>\n      completed successfully with a <code>result</code> (if provided).\n      The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in the workflow\n      history.\n    </p>\n\n    <important>\n      If the requested task does not complete successfully, use <a>RespondActivityTaskFailed</a> instead.\n      If the worker finds that the task is canceled through the <code>canceled</code> flag returned by\n      <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean up and then call <a>RespondActivityTaskCanceled</a>.\n    </important>\n\n    <p>\n      A task is considered open from the time that it is scheduled until it is\n      closed. Therefore a task is reported as open while a worker is\n      processing it. A task is closed after it has been specified in a call to\n      RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,\n      <a>RespondActivityTaskFailed</a>, or the task has\n      <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\">timed out</a>.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RespondActivityTaskCompleted Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 03:56:15 GMT\n          X-Amz-Target: SimpleWorkflowService.RespondActivityTaskCompleted\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=M+ygHbMHSHJiVrsAQTW/BfkgHoNzLPnPD+dVywJiPXE=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 638\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAX9p3pcp3857oLXFUuwdxRU5/zmn9f40XaMF7VohAH4jOtjXpZu7GdOzEi0b3cWYHbG5b5dpdcTXHUDPVMHXiUxCgr+Nc/wUW9016W4YxJGs/jmxzPln8qLftU+SW135Q0UuKp5XRGoRTJp3tbHn2pY1vC8gDB/K69J6q668U1pd4Cd9o43//lGgOIjN0/Ihg+DO+83HNcOuVEQMM28kNMXf7yePh31M4dMKJwQaQZG13huJXDwzJOoZQz+XFuqFly+lPnCE4XvsnhfAvTsh50EtNDEtQzPCFJoUeld9g64V/FS/39PHL3M93PBUuroPyHuCwHsNC6fZ7gM/XOKmW4kKnXPoQweEUkFV/J6E6+M1reBO7nJADTrLSnajg6MY/viWsEYmMw/DS5FlquFaDIhFkLhWUWN+V2KqiKS23GYwpzgZ7fgcWHQF2NLEY3zrjam4LW/UW5VLCyM3FpVD3erCTi9IvUgslPzyVGuWNAoTmgJEWvimgwiHxJMxxc9JBDR390iMmImxVl3eeSDUWx8reQltiviadPDjyRmVhYP8\",\n          \"result\": \"customer credit card verified\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: 0976f0f4-3ff6-11e1-9a27-0760db01a4a8\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RespondActivityTaskFailed": {
      "name": "RespondActivityTaskFailed",
      "input": {
        "shape_name": "RespondActivityTaskFailedInput",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The <code>taskToken</code> of the <a>ActivityTask</a>.\n    </p>\n    <important>\n      The <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.\n    </important>\n\n  ",
            "required": true
          },
          "reason": {
            "shape_name": "FailureReason",
            "type": "string",
            "max_length": 256,
            "documentation": "\n    <p>\n      Description of the error that may assist in diagnostics.\n    </p>\n  "
          },
          "details": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      Optional detailed information about the failure.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code>\n      has failed with <code>reason</code> (if specified).\n      The <code>reason</code> and <code>details</code> appear in the\n      <code>ActivityTaskFailed</code> event added to the workflow history.\n    </p>\n\n    <p>\n      A task is considered open from the time that it is scheduled until it is\n      closed. Therefore a task is reported as open while a worker is\n      processing it. A task is closed after it has been specified in a call to\n      <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,\n      RespondActivityTaskFailed, or the task has\n      <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\">timed out</a>.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RespondActivityTaskFailed Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Mon, 16 Jan 2012 04:17:24 GMT\n          X-Amz-Target: SimpleWorkflowService.RespondActivityTaskFailed\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=JC+/uds/mFEq8qca2WFs5kfp2eAEONc70IqFgHErhpc=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 682\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAdG7j7YFEl9pfKdXRL3Cy3Q3c1Z8QwdOSX53bKiUV6MMGXvf3Lrinmmzj1HFFl5lcwHzEFxLbMaSZ/lMt/RFJPumHXAnUqlYjZLODhrBqsIzDQFKcbCFMq7y4jm0EFzsV2Suv8iu/obcZ/idU8qjd9uG/82zumG2xz1Z4IbOFwOTlpj2++5YVH4ftyycIcjlDw58r0O1vAo4PEondkqjyn+YxBxyZLy1z1fvMi0zeO8Lh16w96y6v+KdVc/ECoez1Og8sROaXG0l8ptW5YR733LIuUBK4sxWa12egF5i4e8AV8JloojOaq0jy4iFsIscRazOSQErjo15Guz89BK2XW911P3I+X7nJjH0wwW55XGCs0jezvsEC8M6D9Ob7CgWr6RrnK3g1AKemcby2XqgQRN52DMIYxzV+lMS/QBYKOqtkLoMY0NKeuRVwm9f1zCY00v6kxqK9m2zFvaxqlJ5/JVCWMNWEWJfQZVtC3GzMWmzeCt7Auq8A5/Caq/DKyOhTIhY/Go00iiDA6ecP8taTYiVzb8VR5xEiQ1uCxnECkwW\",\n          \"reason\": \"could not verify customer credit card\",\n          \"details\": \"card number invalid\"}\n        </request>\n\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: feadaedd-3ff8-11e1-9e8f-57bb03e21482\n        </response>\n      </example>\n    </examples>\n  "
    },
    "RespondDecisionTaskCompleted": {
      "name": "RespondDecisionTaskCompleted",
      "input": {
        "shape_name": "RespondDecisionTaskCompletedInput",
        "type": "structure",
        "members": {
          "taskToken": {
            "shape_name": "TaskToken",
            "type": "string",
            "min_length": 1,
            "max_length": 1024,
            "documentation": "\n    <p>\n      The <code>taskToken</code> from the <a>DecisionTask</a>.\n    </p>\n    <important>\n      The <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.\n    </important>\n\n  ",
            "required": true
          },
          "decisions": {
            "shape_name": "DecisionList",
            "type": "list",
            "members": {
              "shape_name": "Decision",
              "type": "structure",
              "members": {
                "decisionType": {
                  "shape_name": "DecisionType",
                  "type": "string",
                  "enum": [
                    "ScheduleActivityTask",
                    "RequestCancelActivityTask",
                    "CompleteWorkflowExecution",
                    "FailWorkflowExecution",
                    "CancelWorkflowExecution",
                    "ContinueAsNewWorkflowExecution",
                    "RecordMarker",
                    "StartTimer",
                    "CancelTimer",
                    "SignalExternalWorkflowExecution",
                    "RequestCancelExternalWorkflowExecution",
                    "StartChildWorkflowExecution"
                  ],
                  "documentation": "\n    <p>\n      Specifies the type of the decision.\n    </p>\n  ",
                  "required": true
                },
                "scheduleActivityTaskDecisionAttributes": {
                  "shape_name": "ScheduleActivityTaskDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "activityType": {
                      "shape_name": "ActivityType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of this activity.\n      <note>The combination of activity type name and version must be unique within a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of this activity.\n      <note>The combination of activity type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the activity task to schedule.\n      This field is required.\n    </p>\n  ",
                      "required": true
                    },
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>activityId</code> of the activity task.\n      This field is required.\n    </p>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks. This data is not sent to the activity.\n    </p>\n  "
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the activity task.\n    </p>\n  "
                    },
                    "scheduleToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The maximum duration for this activity task.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   <note>A schedule-to-close timeout for this activity task must be specified either as a default for the activity type or through this field.\n   If neither this field is set nor a default schedule-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      If set, specifies the name of the task list in which to schedule the activity task. If not specified, the <code>defaultTaskList</code>\n      registered with the activity type will be used.\n    </p>\n   <note>A task list for this activity task must be specified either as a default for the activity type or through this field.\n   If neither this field is set nor a default task list was specified at registration time then a fault will be returned.</note>\n\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  "
                    },
                    "scheduleToStartTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      If set, specifies the maximum duration the activity task can wait to be assigned to a worker. This\n      overrides the default schedule-to-start timeout specified when registering the activity type using <a>RegisterActivityType</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   <note>A schedule-to-start timeout for this activity task must be specified either as a default for the activity type or through this field.\n   If neither this field is set nor a default schedule-to-start timeout was specified at registration time then a fault will be returned.</note>\n\n  "
                    },
                    "startToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      If set, specifies the maximum duration a worker may take to process this activity task. This\n      overrides the default start-to-close timeout specified when registering the activity type using <a>RegisterActivityType</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   <note>A start-to-close timeout for this activity task must be specified either as a default for the activity type or through this field.\n   If neither this field is set nor a default start-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "heartbeatTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      If set, specifies the maximum time before which a worker processing a task of this type must report progress by\n      calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity task is automatically timed out.\n      If the worker subsequently attempts to record a heartbeat or returns a result, it will be ignored.\n      This overrides the default heartbeat timeout specified when registering the activity type using <a>RegisterActivityType</a>.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>ScheduleActivityTask</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "requestCancelActivityTaskDecisionAttributes": {
                  "shape_name": "RequestCancelActivityTaskDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "activityId": {
                      "shape_name": "ActivityId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>activityId</code> of the activity task to be canceled.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>RequestCancelActivityTask</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "completeWorkflowExecutionDecisionAttributes": {
                  "shape_name": "CompleteWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "result": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The result of the workflow execution. The form of the result is implementation defined.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>CompleteWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "failWorkflowExecutionDecisionAttributes": {
                  "shape_name": "FailWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "reason": {
                      "shape_name": "FailureReason",
                      "type": "string",
                      "max_length": 256,
                      "documentation": "\n    <p>\n      A descriptive reason for the failure that may help in diagnostics.\n    </p>\n  "
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional details of the failure.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>FailWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "cancelWorkflowExecutionDecisionAttributes": {
                  "shape_name": "CancelWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional details of the cancellation.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>CancelWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "continueAsNewWorkflowExecutionDecisionAttributes": {
                  "shape_name": "ContinueAsNewWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input provided to the new workflow execution.\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n    <p>\n      If set, specifies the total duration for this workflow execution. This overrides\n      the <code>defaultExecutionStartToCloseTimeout</code> specified when registering the workflow type.\n    </p>\n    <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   <note>An execution start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this field.\n   If neither this field is set nor a default execution start-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      Represents a task list.\n    </p>\n  "
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n      <p>\n         Specifies the maximum duration of decision tasks for the new workflow execution.\n         This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n      <note>A task start-to-close timeout for the new workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n         If set, specifies the policy to use for the child workflow executions of the new execution if it is terminated\n         by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n         This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n         The supported child policies are:</p>\n\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n   <note>A child policy for the new workflow execution must be specified either as a default registered for its workflow type\n   or through this field. If neither this field is set nor a default child policy was specified at registration time then a fault will be returned.\n   </note>\n  "
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n   <p>\n      The list of tags to associate with the new workflow execution. A maximum\n      of 5 tags can be specified. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a>\n      or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.\n   </p>\n  "
                    },
                    "workflowTypeVersion": {
                      "shape_name": "Version",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 64,
                      "documentation": null
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>ContinueAsNewWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "recordMarkerDecisionAttributes": {
                  "shape_name": "RecordMarkerDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "markerName": {
                      "shape_name": "MarkerName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the marker.\n      This file is required.\n    </p>\n  ",
                      "required": true
                    },
                    "details": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional details of the marker.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>RecordMarker</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "startTimerDecisionAttributes": {
                  "shape_name": "StartTimerDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer.\n      This field is required.</p>\n      <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    },
                    "startToFireTimeout": {
                      "shape_name": "DurationInSeconds",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 8,
                      "documentation": "\n    <p>\n      The duration to wait before firing the timer.\n      This field is required.\n    </p>\n    <p>The duration is specified in seconds. The valid values are integers greater than or equal to 0.</p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>StartTimer</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "cancelTimerDecisionAttributes": {
                  "shape_name": "CancelTimerDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "timerId": {
                      "shape_name": "TimerId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The unique Id of the timer to cancel. This field is required.\n    </p>\n  ",
                      "required": true
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>CancelTimer</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "signalExternalWorkflowExecutionDecisionAttributes": {
                  "shape_name": "SignalExternalWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the workflow execution to be signaled.\n      This field is required.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the workflow execution to be signaled.\n    </p>\n  "
                    },
                    "signalName": {
                      "shape_name": "SignalName",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The name of the signal.The target workflow execution will use the signal name and\n      input to process the signal.\n      This field is required.\n    </p>\n  ",
                      "required": true
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional input to be provided with the signal.The target workflow execution will use the signal name and\n      input to process the signal.\n    </p>\n  "
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent decision\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>SignalExternalWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "requestCancelExternalWorkflowExecutionDecisionAttributes": {
                  "shape_name": "RequestCancelExternalWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the external workflow execution to cancel.\n      This field is required.\n    </p>\n  ",
                      "required": true
                    },
                    "runId": {
                      "shape_name": "RunIdOptional",
                      "type": "string",
                      "max_length": 64,
                      "documentation": "\n    <p>\n      The <code>runId</code> of the external workflow execution to cancel.\n    </p>\n  "
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks.\n    </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>RequestCancelExternalWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                },
                "startChildWorkflowExecutionDecisionAttributes": {
                  "shape_name": "StartChildWorkflowExecutionDecisionAttributes",
                  "type": "structure",
                  "members": {
                    "workflowType": {
                      "shape_name": "WorkflowType",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        },
                        "version": {
                          "shape_name": "Version",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 64,
                          "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The type of the workflow execution to be started.\n      This field is required.\n    </p>\n  ",
                      "required": true
                    },
                    "workflowId": {
                      "shape_name": "WorkflowId",
                      "type": "string",
                      "min_length": 1,
                      "max_length": 256,
                      "documentation": "\n    <p>\n      The <code>workflowId</code> of the workflow execution.\n      This field is required.\n    </p>\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  ",
                      "required": true
                    },
                    "control": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      Optional data attached to the event that can be used by the decider in subsequent workflow\n      tasks. This data is not sent to the child workflow execution.\n    </p>\n  "
                    },
                    "input": {
                      "shape_name": "Data",
                      "type": "string",
                      "max_length": 32768,
                      "documentation": "\n    <p>\n      The input to be provided to the workflow execution.\n    </p>\n  "
                    },
                    "executionStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n   <p>\n      The total duration for this workflow execution. This overrides\n      the defaultExecutionStartToCloseTimeout specified when registering the workflow type.\n   </p>\n   <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n   <note>An execution start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n   If neither this parameter is set nor a default execution start-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "taskList": {
                      "shape_name": "TaskList",
                      "type": "structure",
                      "members": {
                        "name": {
                          "shape_name": "Name",
                          "type": "string",
                          "min_length": 1,
                          "max_length": 256,
                          "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                          "required": true
                        }
                      },
                      "documentation": "\n    <p>\n      The name of the task list to be used for decision tasks of the child workflow execution.\n    </p>\n   <note>A task list for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n   If neither this parameter is set nor a default task list was specified at registration time then a fault will be returned.</note>\n\n    <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n  "
                    },
                    "taskStartToCloseTimeout": {
                      "shape_name": "DurationInSecondsOptional",
                      "type": "string",
                      "max_length": 8,
                      "documentation": "\n      <p>\n         Specifies the maximum duration of decision tasks for this workflow execution.\n         This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n      </p>\n      <p>The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.</p>\n      <note>A task start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>\n  "
                    },
                    "childPolicy": {
                      "shape_name": "ChildPolicy",
                      "type": "string",
                      "enum": [
                        "TERMINATE",
                        "REQUEST_CANCEL",
                        "ABANDON"
                      ],
                      "documentation": "\n    <p>\n         If set, specifies the policy to use for the child workflow executions if the workflow execution being started is terminated\n         by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n         This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n         The supported child policies are:</p>\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n   <note>A child policy for the workflow execution being started must be specified either as a default registered for its workflow type\n   or through this field. If neither this field is set nor a default child policy was specified at registration time then a fault will be returned.\n   </note>\n  "
                    },
                    "tagList": {
                      "shape_name": "TagList",
                      "type": "list",
                      "members": {
                        "shape_name": "Tag",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 256,
                        "documentation": null
                      },
                      "max_length": 5,
                      "documentation": "\n     <p>\n         The list of tags to associate with the child workflow execution. A maximum\n         of 5 tags can be specified. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a>\n         or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.\n      </p>\n  "
                    }
                  },
                  "documentation": "\n    <p>\n      Provides details of the <code>StartChildWorkflowExecution</code> decision. It is not set for other decision types.\n    </p>\n  "
                }
              },
              "documentation": "\n   <p>\n      Specifies a decision made by the decider. A decision can be one of these types:\n   </p>\n   <ul>\n     <li>\n<b>CancelTimer</b> cancels a previously started timer and records a <code>TimerCanceled</code> event in the history.</li>\n     <li>\n<b>CancelWorkflowExecution</b> closes the workflow execution and records a <code>WorkflowExecutionCanceled</code> event in the history.</li>\n     <li>\n<b>CompleteWorkflowExecution</b> closes the workflow execution and records a <code>WorkflowExecutionCompleted</code> event in the history .</li>\n     <li>\n<b>ContinueAsNewWorkflowExecution</b> closes the workflow execution and starts a new workflow execution of the same type using the same\n       workflow id and a unique run Id. A <code>WorkflowExecutionContinuedAsNew</code> event is recorded in the history.</li>\n     <li>\n<b>FailWorkflowExecution</b> closes the workflow execution and records a <code>WorkflowExecutionFailed</code> event in the history.</li>\n     <li>\n<b>RecordMarker</b> records a <code>MarkerRecorded</code> event in the history. Markers can be used for adding\n       custom information in the history for instance to let deciders know that they do not need to look at the history beyond\n       the marker event.</li>\n     <li>\n<b>RequestCancelActivityTask</b> attempts to cancel a previously scheduled activity task. If the activity task was scheduled\n      but has not been assigned to a worker, then it will be canceled. If the activity task was already assigned to a worker, then\n      the worker will be informed that cancellation has been requested in the response to <a>RecordActivityTaskHeartbeat</a>.</li>\n     <li>\n<b>RequestCancelExternalWorkflowExecution</b> requests that a request be made to cancel the specified external workflow execution\n       and records a <code>RequestCancelExternalWorkflowExecutionInitiated</code> event in the history.</li>\n     <li>\n<b>ScheduleActivityTask</b> schedules an activity task.</li>\n     <li>\n<b>SignalExternalWorkflowExecution</b> requests a signal to be delivered to the specified external workflow execution\n       and records a <code>SignalExternalWorkflowExecutionInitiated</code> event in the history.</li>\n     <li>\n<b>StartChildWorkflowExecution</b> requests that a child workflow execution be started\n       and records a <code>StartChildWorkflowExecutionInitiated</code> event in the history. The child workflow execution is a separate workflow execution\n       with its own history.</li>\n     <li>\n<b>StartTimer</b> starts a timer for this workflow execution and records a <code>TimerStarted</code> event in the history.\n      This timer will fire after the specified delay and record a <code>TimerFired</code> event.</li>\n   </ul>\n\n    <p><b>Access Control</b></p>\n    <p>If you grant permission to use <code>RespondDecisionTaskCompleted</code>, you can use IAM policies to express permissions for the list of decisions\n      returned by this action as if they were members of the API. Treating decisions as a pseudo API maintains a uniform conceptual model and helps\n      keep policies readable. For details and example IAM policies, see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <p><b>Decision Failure</b></p>\n    <p>Decisions can fail for several reasons</p>\n    <ul>\n      <li>The ordering of decisions should follow a logical flow. Some decisions might not make sense in the current context of the workflow\n            execution and will therefore fail.</li>\n      <li>A limit on your account was reached.</li>\n      <li>The decision lacks sufficient permissions.</li>\n    </ul>\n    <p>One of the following events might be added to the history to indicate an error. The event attribute's <b>cause</b> parameter indicates the cause.\n      If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked\n      sufficient permissions.\n         </p>\n\n         <ul>\n            <li>\n<b>ScheduleActivityTaskFailed</b> a ScheduleActivityTask decision failed. This could happen if the activity type specified in the decision\n            is not registered, is in a deprecated state, or the decision is not properly configured.</li>\n\n            <li>\n<b>RequestCancelActivityTaskFailed</b> a RequestCancelActivityTask decision failed. This could happen if there is no open activity task with the specified activityId.</li>\n\n            <li>\n<b>StartTimerFailed</b> a StartTimer decision failed. This could happen if there is another open timer with the same timerId.</li>\n\n            <li>\n<b>CancelTimerFailed</b> a CancelTimer decision failed. This could happen if there is no open timer with the specified timerId.</li>\n\n            <li>\n<b>StartChildWorkflowExecutionFailed</b> a StartChildWorkflowExecution decision failed. This could happen if the workflow type specified is not registered, is deprecated, or the decision is not properly configured.</li>\n\n            <li>\n            <b>SignalExternalWorkflowExecutionFailed</b>\n            a SignalExternalWorkflowExecution decision failed. This could happen if the <code>workflowID</code> specified in the decision was incorrect.\n            </li>\n\n            <li>\n            <b>RequestCancelExternalWorkflowExecutionFailed</b>\n            a RequestCancelExternalWorkflowExecution decision failed. This could happen if the <code>workflowID</code> specified in the decision was incorrect.\n            </li>\n\n            <li>\n            <b>CancelWorkflowExecutionFailed</b>\n            a CancelWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.\n            </li>\n\n            <li>\n            <b>CompleteWorkflowExecutionFailed</b>\n            a CompleteWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.\n            </li>\n\n            <li>\n            <b>ContinueAsNewWorkflowExecutionFailed</b>\n            a ContinueAsNewWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution or the ContinueAsNewWorkflowExecution decision was not configured correctly.\n            </li>\n\n            <li>\n            <b>FailWorkflowExecutionFailed</b>\n            a FailWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.\n            </li>\n         </ul>\n\n         <p>\n            The preceding error events might occur due to an error in the decider logic, which might put the workflow execution in an unstable state The cause field in the event structure for the error event indicates the cause of the error.\n         </p>\n\n         <note>\n            A workflow execution may be closed by the decider by returning one of the following decisions when completing a decision task:\n            <code>CompleteWorkflowExecution</code>, <code>FailWorkflowExecution</code>, <code>CancelWorkflowExecution</code>\n            and <code>ContinueAsNewWorkflowExecution</code>.\n            An UnhandledDecision fault will be returned if a workflow closing decision is specified and a signal\n            or activity event had been added to the history while the decision task was being performed by the decider.\n            Unlike the above situations which are\n            logic issues, this fault is always possible because of race conditions in a distributed system. The right\n            action here is to call <a>RespondDecisionTaskCompleted</a>  without any decisions. This would result in\n            another decision task with these new events included in the history. The decider should handle the new events and\n            may decide to close the workflow execution.\n         </note>\n\n    <p><b>How to Code a Decision</b></p>\n    <p>\n            You code a decision by first setting the\n            decision type field to one of the above decision values, and then set the corresponding attributes field\n            shown below:\n         </p>\n         <ul>\n            <li><a>ScheduleActivityTaskDecisionAttributes</a></li>\n            <li><a>RequestCancelActivityTaskDecisionAttributes</a></li>\n            <li><a>CompleteWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>FailWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>CancelWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>ContinueAsNewWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>RecordMarkerDecisionAttributes</a></li>\n            <li><a>StartTimerDecisionAttributes</a></li>\n            <li><a>CancelTimerDecisionAttributes</a></li>\n            <li><a>SignalExternalWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a></li>\n            <li><a>StartChildWorkflowExecutionDecisionAttributes</a></li>\n         </ul>\n\n  "
            },
            "documentation": "\n    <p>\n      The list of decisions (possibly empty) made by the decider while processing this decision task. See the docs\n      for the <a>Decision</a> structure for details.\n    </p>\n  "
          },
          "executionContext": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      User defined context to add to workflow execution.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Used by deciders to tell the service that the <a>DecisionTask</a> identified by the <code>taskToken</code>\n      has successfully completed. The <code>decisions</code> argument specifies the list of decisions made while\n      processing the task.\n    </p>\n    <p>\n      A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code> specified is\n      attached to the event in the workflow execution history.\n    </p>\n\n    <p><b>Access Control</b></p>\n    <p>If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>, it can express permissions for the\n      list of decisions in the <code>decisions</code> parameter. Each of the decisions has one or more parameters, much like a regular API call. To allow for policies\n      to be as readable as possible, you can express permissions on decisions as if they were actual API\n      calls, including applying conditions to some parameters. For more information,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> RespondDecisionTaskCompleted Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 23:31:06 GMT\n          X-Amz-Target: SimpleWorkflowService.RespondDecisionTaskCompleted\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=FL4ouCb8n6j5egcKOXoa+5Vctc8WmA91B2ekKnks2J8=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 1184\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"taskToken\": \"AAAAKgAAAAEAAAAAAAAAAQLPoqDSLcx4ksNCEQZCyEBqpKhE+FgFSOvHd9zlCROacKYHh640MkANx2y9YM3CQnec0kEb1oRvB6DxKesTY3U/UQhvBqPY7E4BYE6hkDj/NmSbt9EwEJ/a+WD+oc2sDNfeVz2x+6wjb5vQdFKwBoQ6MDWLFbAhcgK+ymoRjoBHrPsrNLX3IA6sQaPmQRZQs3FRZonoVzP6uXMCZPnCZQULFjU1kTM8VHzH7ywqWKVmmdvnqyREOCT9VqmYbhLntJXsDj+scAvuNy17MCX9M9AJ7V/5qrLCeYdWA4FBQgY4Ew6IC+dge/UZdVMmpW/uB7nvSk6owQIhapPh5pEUwwY/yNnoVLTiPOz9KzZlANyw7uDchBRLvUJORFtpP9ZQIouNP8QOvFWm7Idc50ahwGEdTCiG+KDXV8kAzx7wKHs7l1TXYkC15x0h3XPH0MdLeEjipv98EpZaMIVtgGSdRjluOjNWEL2zowZByitleI5bdvxZdgalAXXKEnbYE6/rfLGReAJKdh2n0dmTMI+tK7uuxIWX6F4ocqSI1Xb2x5zZ\",\n          \"decisions\":\n          [\n          {\"decisionType\": \"ScheduleActivityTask\",\n          \"scheduleActivityTaskDecisionAttributes\":\n          {\"activityType\":\n          {\"name\": \"activityVerify\",\n          \"version\": \"1.0\"},\n          \"activityId\": \"verification-27\",\n          \"control\": \"digital music\",\n          \"input\": \"5634-0056-4367-0923,12/12,437\",\n          \"scheduleToCloseTimeout\": \"900\",\n          \"taskList\":\n          {\"name\": \"specialTaskList\"},\n          \"scheduleToStartTimeout\": \"300\",\n          \"startToCloseTimeout\": \"600\",\n          \"heartbeatTimeout\": \"120\"}\n          }\n          ],\n          \"executionContext\": \"Black Friday\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: feef79b5-3fd0-11e1-9a27-0760db01a4a8\n        </response>\n      </example>\n    </examples>\n  "
    },
    "SignalWorkflowExecution": {
      "name": "SignalWorkflowExecution",
      "input": {
        "shape_name": "SignalWorkflowExecutionInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the domain containing the workflow execution to signal.\n    </p>\n  ",
            "required": true
          },
          "workflowId": {
            "shape_name": "WorkflowId",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The workflowId of the workflow execution to signal.\n    </p>\n  ",
            "required": true
          },
          "runId": {
            "shape_name": "RunIdOptional",
            "type": "string",
            "max_length": 64,
            "documentation": "\n    <p>\n      The runId of the workflow execution to signal.\n    </p>\n  "
          },
          "signalName": {
            "shape_name": "SignalName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n    <p>\n      The name of the signal. This name must be meaningful to the target workflow.\n    </p>\n  ",
            "required": true
          },
          "input": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n    <p>\n      Data to attach to the <code>WorkflowExecutionSignaled</code> event in the target workflow execution's history.\n    </p>\n  "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n    <p>\n      Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history and creates\n      a decision task for the workflow execution\n      identified by the given domain, workflowId and runId. The event is recorded with the\n      specified user defined signalName and input (if provided).\n    </p>\n    <note>\n      If a runId is not specified, then the <code>WorkflowExecutionSignaled</code>\n      event is recorded in the history of the current open workflow with the matching workflowId in the domain.\n    </note>\n    <note>\n      If the specified workflow execution is not open, this method fails\n      with <code>UnknownResource</code>.\n    </note>\n\n    <p><b>Access Control</b></p>\n    <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n    <ul>\n      <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n      <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n      <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n    </ul>\n    <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n      see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n    <examples>\n      <example>\n        <name> SignalWorkflowExecution Example </name>\n        <request>\n          POST / HTTP/1.1\n          Host: swf.us-east-1.amazonaws.com\n          User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\n          Accept: application/json, text/javascript, */*\n          Accept-Language: en-us,en;q=0.5\n          Accept-Encoding: gzip,deflate\n          Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n          Keep-Alive: 115\n          Connection: keep-alive\n          Content-Type: application/x-amz-json-1.0\n          X-Requested-With: XMLHttpRequest\n          X-Amz-Date: Sun, 15 Jan 2012 00:06:18 GMT\n          X-Amz-Target: SimpleWorkflowService.SignalWorkflowExecution\n          Content-Encoding: amz-1.0\n          X-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=lQpBZezK7JNQrXeWuJE+l7S0ZwjOEONCeRyImoyfX+E=\n          Referer: http://swf.us-east-1.amazonaws.com/explorer/index.html\n          Content-Length: 162\n          Pragma: no-cache\n          Cache-Control: no-cache\n\n          {\"domain\": \"867530901\",\n          \"workflowId\": \"20110927-T-1\",\n          \"runId\": \"f5ebbac6-941c-4342-ad69-dfd2f8be6689\",\n          \"signalName\": \"CancelOrder\",\n          \"input\": \"order 3553\"}\n        </request>\n        <response>\n          HTTP/1.1 200 OK\n          Content-Length: 0\n          Content-Type: application/json\n          x-amzn-RequestId: bf78ae15-3f0c-11e1-9914-a356b6ea8bdf\n        </response>\n      </example>\n    </examples>\n  "
    },
    "StartWorkflowExecution": {
      "name": "StartWorkflowExecution",
      "input": {
        "shape_name": "StartWorkflowExecutionInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The name of the domain in which the workflow execution is created.\n      </p>\n   ",
            "required": true
          },
          "workflowId": {
            "shape_name": "WorkflowId",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n         <p>\n            The user defined identifier associated with the workflow execution. You can use this to\n            associate a custom identifier with the workflow execution. You may specify the same\n            identifier if a workflow execution is logically a <i>restart</i> of a previous execution.\n            You cannot have two open workflow executions with the same <code>workflowId</code> at the same time.\n         </p>\n         <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n   ",
            "required": true
          },
          "workflowType": {
            "shape_name": "WorkflowType",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              },
              "version": {
                "shape_name": "Version",
                "type": "string",
                "min_length": 1,
                "max_length": 64,
                "documentation": "\n    <p>\n      The version of the workflow type.\n      This field is required.\n      <note>The combination of workflow type name and version must be unique with in a domain.</note>\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n      <p>\n         The type of the workflow to start.\n      </p>\n    ",
            "required": true
          },
          "taskList": {
            "shape_name": "TaskList",
            "type": "structure",
            "members": {
              "name": {
                "shape_name": "Name",
                "type": "string",
                "min_length": 1,
                "max_length": 256,
                "documentation": "\n    <p>\n      The name of the task list.\n    </p>\n  ",
                "required": true
              }
            },
            "documentation": "\n         <p>\n         The task list to use for the decision tasks generated for this workflow execution.\n         This overrides the <code>defaultTaskList</code> specified when registering the workflow type.\n         </p>\n      <note>A task list for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default task list was specified at registration time then a fault will be returned.</note>\n         <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (\\u0000-\\u001f | \\u007f - \\u009f). Also, it must not contain the literal string &quot;arn&quot;.</p>\n   "
          },
          "input": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n         <p>\n            The input for the workflow execution. This is a free form string which should be meaningful to the workflow you are starting.\n            This <code>input</code> is made available to the new workflow execution in the <code>WorkflowExecutionStarted</code> history event.\n         </p>\n   "
          },
          "executionStartToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n\n      <p>\n         The total duration for this workflow execution. This overrides\n         the defaultExecutionStartToCloseTimeout specified when registering the workflow type.\n      </p>\n\n      <p>\n         The duration is specified in seconds. The valid values are integers greater than or equal to 0.\n         Exceeding this limit will cause the workflow execution to time out. Unlike some of the other timeout parameters in Amazon SWF, you cannot\n         specify a value of \"NONE\" for this timeout; there is a one-year max limit on the time that a workflow execution can run.\n      </p>\n\n      <note>\n         An execution start-to-close timeout must be specified either through this parameter or as a default when the workflow type is registered.\n         If neither this parameter nor a default execution start-to-close timeout is specified, a fault is returned.\n      </note>\n\n   "
          },
          "tagList": {
            "shape_name": "TagList",
            "type": "list",
            "members": {
              "shape_name": "Tag",
              "type": "string",
              "min_length": 1,
              "max_length": 256,
              "documentation": null
            },
            "max_length": 5,
            "documentation": "\n         <p>\n            The list of tags to associate with the workflow execution. You can specify a maximum\n            of 5 tags. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or\n            <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.\n         </p>\n   "
          },
          "taskStartToCloseTimeout": {
            "shape_name": "DurationInSecondsOptional",
            "type": "string",
            "max_length": 8,
            "documentation": "\n      <p>\n         Specifies the maximum duration of decision tasks for this workflow execution.\n         This parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n      </p>\n\n      <p>\n         The valid values are integers greater than or equal to <code>0</code>. An integer value can be used to specify the duration in seconds while <code>NONE</code> can be used to specify unlimited duration.\n      </p>\n\n      <note>A task start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault will be returned.</note>\n   "
          },
          "childPolicy": {
            "shape_name": "ChildPolicy",
            "type": "string",
            "enum": [
              "TERMINATE",
              "REQUEST_CANCEL",
              "ABANDON"
            ],
            "documentation": "\n      <p>\n         If set, specifies the policy to use for the child workflow executions of this workflow execution if it is terminated,\n         by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout.\n         This policy overrides the default child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.\n         The supported child policies are:</p>\n\n      <ul>\n      <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n      <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n      <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n      receives an execution history with this event.\n      </li>\n      <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n      </ul>\n      <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default child policy was specified at registration time then a fault will be returned.</note>\n   "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "Run",
        "type": "structure",
        "members": {
          "runId": {
            "shape_name": "RunId",
            "type": "string",
            "min_length": 1,
            "max_length": 64,
            "documentation": "\n    <p>\n      The <code>runId</code> of a workflow execution. This Id is generated by the service and can be used to uniquely identify\n      the workflow execution within a domain.\n    </p>\n  "
          }
        },
        "documentation": "\n    <p>\n      Specifies the <code>runId</code> of a workflow execution.\n    </p>\n  "
      },
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "TypeDeprecatedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the specified activity or workflow type was already deprecated.\n    </p>\n  "
        },
        {
          "shape_name": "WorkflowExecutionAlreadyStartedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n         Returned by <a>StartWorkflowExecution</a> when an open execution with the same\n         workflowId is already running in the specified domain.\n    </p>\n  "
        },
        {
          "shape_name": "LimitExceededFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned by any operation if a system imposed limitation has been reached.\n      To address this fault you should either clean up unused resources or increase the\n      limit by contacting AWS.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        },
        {
          "shape_name": "DefaultUndefinedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": null
            }
          },
          "documentation": null
        }
      ],
      "documentation": "\n      <p>\n         Starts an execution of the workflow type in the specified domain using the provided <code>workflowId</code>\n         and input data.\n      </p>\n      <p>This action returns the newly started workflow execution.</p>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n       <ul>\n         <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n         <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n         <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys.\n           <ul>\n             <li>\n<code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.</li>\n             <li>\n<code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.</li>\n             <li>\n<code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.</li>\n             <li>\n<code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.</li>\n             <li>\n<code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.</li>\n             <li>\n<code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li>\n             <li>\n<code>name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li>\n             <li>\n<code>version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li>\n           </ul>\n</li>\n       </ul>\n       <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n         see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n<examples>\n    <example>\n       <name> StartWorkflowExecution Example </name>\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Sat, 14 Jan 2012 22:45:13 GMT\nX-Amz-Target: SimpleWorkflowService.StartWorkflowExecution\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=aYxuqLX+TO91kPVg+jh+aA8PWxQazQRN2+SZUGdOgU0=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 417\nPragma: no-cache\nCache-Control: no-cache\n\n{\"domain\": \"867530901\",\n \"workflowId\": \"20110927-T-1\",\n \"workflowType\":\n  {\"name\": \"customerOrderWorkflow\",\n   \"version\": \"1.0\"},\n \"taskList\":\n  {\"name\": \"specialTaskList\"},\n \"input\": \"arbitrary-string-that-is-meaningful-to-the-workflow\",\n \"executionStartToCloseTimeout\": \"1800\",\n \"tagList\":\n  [\"music purchase\", \"digital\", \"ricoh-the-dog\"],\n \"taskStartToCloseTimeout\": \"600\",\n \"childPolicy\": \"TERMINATE\"}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 48\nContent-Type: application/json\nx-amzn-RequestId: 6c25f6e6-3f01-11e1-9a27-0760db01a4a8\n\n{\"runId\":\"1e536162-f1ea-48b0-85f3-aade88eef2f7\"}\n</response>\n      </example>\n    </examples>\n  "
    },
    "TerminateWorkflowExecution": {
      "name": "TerminateWorkflowExecution",
      "input": {
        "shape_name": "TerminateWorkflowExecutionInput",
        "type": "structure",
        "members": {
          "domain": {
            "shape_name": "DomainName",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n      <p>\n         The domain of the workflow execution to terminate.\n      </p>\n   ",
            "required": true
          },
          "workflowId": {
            "shape_name": "WorkflowId",
            "type": "string",
            "min_length": 1,
            "max_length": 256,
            "documentation": "\n         <p>\n            The workflowId of the workflow execution to terminate.\n         </p>\n   ",
            "required": true
          },
          "runId": {
            "shape_name": "RunIdOptional",
            "type": "string",
            "max_length": 64,
            "documentation": "\n         <p>\n            The runId of the workflow execution to terminate.\n         </p>\n   "
          },
          "reason": {
            "shape_name": "TerminateReason",
            "type": "string",
            "max_length": 256,
            "documentation": "\n         <p>\n            An optional descriptive reason for terminating the workflow execution.\n         </p>\n   "
          },
          "details": {
            "shape_name": "Data",
            "type": "string",
            "max_length": 32768,
            "documentation": "\n         <p>\n            Optional details for terminating the workflow execution.\n         </p>\n   "
          },
          "childPolicy": {
            "shape_name": "ChildPolicy",
            "type": "string",
            "enum": [
              "TERMINATE",
              "REQUEST_CANCEL",
              "ABANDON"
            ],
            "documentation": "\n      <p>\n         If set, specifies the policy to use for the child workflow executions of the workflow execution being terminated.\n         This policy overrides the child policy specified for the workflow execution at registration time or when starting the execution.\n         The supported child policies are:</p>\n         <ul>\n         <li>\n<b>TERMINATE:</b> the child executions will be terminated.</li>\n         <li>\n<b>REQUEST_CANCEL:</b> a request to cancel will be attempted for each child execution by recording a\n         <code>WorkflowExecutionCancelRequested</code> event in its history. It is up to the decider to take appropriate actions when it\n         receives an execution history with this event.\n         </li>\n         <li>\n<b>ABANDON:</b> no action will be taken. The child executions will continue to run.</li>\n         </ul>\n      <note>A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter.\n      If neither this parameter is set nor a default child policy was specified at registration time, a fault will be returned.</note>\n\n   "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "shape_name": "UnknownResourceFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>\n      Returned when the named resource cannot be found with in the scope of this operation (region or domain).\n      This could happen if the named resource was never created or is no longer available for this operation.\n    </p>\n  "
        },
        {
          "shape_name": "OperationNotPermittedFault",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "ErrorMessage",
              "type": "string",
              "documentation": "\n    <p>\n      A description that may help with diagnosing the cause of the fault.\n    </p>\n  "
            }
          },
          "documentation": "\n    <p>Returned when the caller does not have sufficient permissions to invoke the action.</p>\n  "
        }
      ],
      "documentation": "\n      <p>\n         Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the\n         workflow execution identified by the given domain, runId, and workflowId.\n         The child policy, registered with the workflow type or specified when starting this execution,\n         is applied to any open child workflow executions of this\n         workflow execution.\n      </p>\n      <important>\n         If the identified workflow execution was in progress, it is terminated immediately.\n      </important>\n      <note>\n         If a runId is not specified, then the <code>WorkflowExecutionTerminated</code>\n         event is recorded in the history of the current open workflow with the matching workflowId in the domain.\n      </note>\n      <note>\n         You should consider using <a>RequestCancelWorkflowExecution</a> action instead because it allows the workflow to gracefully close while\n         <a>TerminateWorkflowExecution</a> does not.\n   </note>\n\n     <p><b>Access Control</b></p>\n     <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p>\n     <ul>\n       <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li>\n       <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li>\n       <li>You cannot use an IAM policy to constrain this action's parameters.</li>\n     </ul>\n     <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails by throwing <code>OperationNotPermitted</code>. For details and example IAM policies,\n       see <a href=\"http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>\n\n<examples>\n    <example>\n       <name> TerminateWorkflowExecution Example </name>\n<request>\nPOST / HTTP/1.1\nHost: swf.us-east-1.amazonaws.com\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.25) Gecko/20111212 Firefox/3.6.25 ( .NET CLR 3.5.30729; .NET4.0E)\nAccept: application/json, text/javascript, */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive: 115\nConnection: keep-alive\nContent-Type: application/x-amz-json-1.0\nX-Requested-With: XMLHttpRequest\nX-Amz-Date: Mon, 16 Jan 2012 04:56:34 GMT\nX-Amz-Target: SimpleWorkflowService.TerminateWorkflowExecution\nContent-Encoding: amz-1.0\nX-Amzn-Authorization: AWS3 AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE,Algorithm=HmacSHA256,SignedHeaders=Host;X-Amz-Date;X-Amz-Target;Content-Encoding,Signature=JHMRAjN6JGPawEuhiANHfiCil9KOGfDF/cuXYmuu9S4=\nReferer: http://swf.us-east-1.amazonaws.com/explorer/index.html\nContent-Length: 218\nPragma: no-cache\nCache-Control: no-cache\n\n{\"domain\": \"867530901\",\n \"workflowId\": \"20110927-T-1\",\n \"runId\": \"94861fda-a714-4126-95d7-55ba847da8ab\",\n \"reason\": \"transaction canceled\",\n \"details\": \"customer credit card declined\",\n \"childPolicy\": \"TERMINATE\"}\n</request>\n\n<response>\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\nx-amzn-RequestId: 76d68a47-3ffe-11e1-b118-3bfa5e8e7fc3\n</response>\n      </example>\n    </examples>\n  "
    }
  }
}
