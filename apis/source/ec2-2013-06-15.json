{
  "api_version": "2013-06-15",
  "type": "query",
  "result_wrapped": false,
  "signature_version": "v2",
  "service_full_name": "Amazon Elastic Compute Cloud",
  "service_abbreviation": "Amazon EC2",
  "endpoint_prefix": "ec2",
  "xmlnamespace": "http://ec2.amazonaws.com/doc/2013-06-15",
  "documentation": "\n        <p>\n        Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides\n        resizable compute capacity in the cloud.\n        It is designed to make web-scale computing easier for developers.\n        </p>\n        <p>\n        Amazon EC2's simple web service interface allows you to obtain and configure\n        capacity with minimal friction. It provides you with complete control of your\n        computing resources and lets you run on Amazon's proven computing environment.\n        Amazon EC2 reduces the time required to obtain and boot new server instances to\n        minutes, allowing you to quickly scale capacity, both up and down, as your\n        computing requirements change. Amazon EC2 changes the economics of computing by\n        allowing you to pay only for capacity that you actually use. Amazon EC2 provides\n        developers the tools to build failure resilient applications and isolate\n        themselves from common failure scenarios.\n        </p>\n        <p>\n        Visit <a href=\"http://aws.amazon.com/ec2/\">http://aws.amazon.com/ec2/</a> for\n        more information.\n        </p>\n    ",
  "operations": {
    "ActivateLicense": {
      "name": "ActivateLicense",
      "input": {
        "shape_name": "ActivateLicenseRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "LicenseId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the ID for the specific license to activate against.\n        </p>\n    ",
            "required": true
          },
          "Capacity": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Specifies the additional number of licenses to activate.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Activates a specific number of licenses for a 90-day period.\n        Activations can be done against a specific license ID.\n        </p>\n    "
    },
    "AllocateAddress": {
      "name": "AllocateAddress",
      "input": {
        "shape_name": "AllocateAddressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Domain": {
            "shape_name": "DomainType",
            "type": "string",
            "enum": [
              "vpc",
              "standard"
            ],
            "documentation": "\n        <p>\n        Set to <code>vpc</code> to allocate the address to your VPC. By default, will allocate to EC2.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "AllocateAddressResult",
        "type": "structure",
        "members": {
          "PublicIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        IP address for use with your account.\n        </p>\n   ",
            "xmlname": "publicIp"
          },
          "Domain": {
            "shape_name": "DomainType",
            "type": "string",
            "enum": [
              "vpc",
              "standard"
            ],
            "documentation": null,
            "xmlname": "domain"
          },
          "AllocationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "allocationId"
          }
        },
        "documentation": "\n        <p>\n        Result returned from allocating an Elastic IP.\n        </p>\n   "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The AllocateAddress operation acquires an elastic IP address for use with your\n        account.\n        </p>\n    "
    },
    "AssignPrivateIpAddresses": {
      "name": "AssignPrivateIpAddresses",
      "input": {
        "shape_name": "AssignPrivateIpAddressesRequest",
        "type": "structure",
        "members": {
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "PrivateIpAddresses": {
            "shape_name": "PrivateIpAddressStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "PrivateIpAddress"
            },
            "documentation": null,
            "flattened": true
          },
          "SecondaryPrivateIpAddressCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null
          },
          "AllowReassignment": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "AssociateAddress": {
      "name": "AssociateAddress",
      "input": {
        "shape_name": "AssociateAddressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The instance to associate with the IP address.\n        </p>\n    "
          },
          "PublicIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        IP address that you are assigning to the instance.\n        </p>\n    "
          },
          "AllocationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The allocation ID that AWS returned when you allocated the elastic IP address for use with Amazon VPC.\n        </p>\n    "
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "PrivateIpAddress": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "AllowReassociation": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        Associates an elastic IP address with an instance. If the IP address is\n        currently assigned to another instance, the IP address is\n        assigned to the new instance.\n        </p>\n        <p>\n        This is an idempotent operation. If you enter it more than once, Amazon\n        EC2 does not return an error.\n        </p>\n   "
      },
      "output": {
        "shape_name": "AssociateAddressResult",
        "type": "structure",
        "members": {
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "associationId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The AssociateAddress operation associates an elastic IP address with an\n        instance.\n        </p>\n        <p>\n        If the IP address is currently assigned to another instance, the IP address is\n        assigned to the new instance. This is an idempotent operation. If you enter it\n        more than once, Amazon EC2 does not return an error.\n        </p>\n    "
    },
    "AssociateDhcpOptions": {
      "name": "AssociateDhcpOptions",
      "input": {
        "shape_name": "AssociateDhcpOptionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "DhcpOptionsId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n            The ID of the DHCP options\n            to associate with the VPC.\n            Specify \"default\" to associate the\n            default DHCP options with the VPC.\n        </p>\n    ",
            "required": true
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC to associate the DHCP options with.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Associates a set of DHCP options (that you've previously created) with the specified VPC. Or,\n        associates the default DHCP options with the VPC. The default set consists of the standard EC2 host\n        name, no domain name, no DNS server, no NTP server, and no NetBIOS server or node type.\n        After you associate the options with the VPC, any existing instances and all new instances that you\n        launch in that VPC use the options. For more information about the supported DHCP options and using\n        them with Amazon VPC, go to Using DHCP Options in the Amazon Virtual Private Cloud Developer\n        Guide.\n        </p>\n    "
    },
    "AssociateRouteTable": {
      "name": "AssociateRouteTable",
      "input": {
        "shape_name": "AssociateRouteTableRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SubnetId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the subnet.\n        </p>\n    ",
            "required": true
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the route table.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "AssociateRouteTableResult",
        "type": "structure",
        "members": {
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "associationId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n\t\tAssociates a subnet with a route table. The subnet and route table must be in the same VPC.\n\t\tThis association causes traffic originating from the subnet to be routed according to the\n\t\troutes in the route table. The action returns an association ID, which you need if you want\n\t\tto disassociate the route table from the subnet later. A route table can be associated with\n\t\tmultiple subnets.\n\t\t</p>\n\t\t<p>\n\t\tFor more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "AttachInternetGateway": {
      "name": "AttachInternetGateway",
      "input": {
        "shape_name": "AttachInternetGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InternetGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the Internet gateway to attach.\n        </p>\n    ",
            "required": true
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Attaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC.\n\t\tFor more information about your VPC and Internet gateway, go to the Amazon Virtual Private Cloud\n\t\tUser Guide.\n        </p>\n    "
    },
    "AttachNetworkInterface": {
      "name": "AttachNetworkInterface",
      "input": {
        "shape_name": "AttachNetworkInterfaceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "DeviceIndex": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "AttachNetworkInterfaceResult",
        "type": "structure",
        "members": {
          "AttachmentId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "attachmentId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "AttachVolume": {
      "name": "AttachVolume",
      "input": {
        "shape_name": "AttachVolumeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the Amazon EBS volume. The volume and instance must be within the\n        same Availability Zone and the instance must be running.\n        </p>\n    ",
            "required": true
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance to which the volume attaches. The volume and instance must be within\n        the same Availability Zone and the instance must be running.\n        </p>\n    ",
            "required": true
          },
          "Device": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies how the device is exposed to the instance (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        Request to attach an Amazon EBS volume to a running instance and expose it as\n        the specified device.\n        </p>\n   "
      },
      "output": {
        "shape_name": "VolumeAttachment",
        "type": "structure",
        "members": {
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "volumeId"
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "instanceId"
          },
          "Device": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        How the device is exposed to the instance (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
            "xmlname": "device"
          },
          "State": {
            "shape_name": "VolumeAttachmentState",
            "type": "string",
            "enum": [
              "attaching",
              "attached",
              "detaching",
              "detached"
            ],
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "status"
          },
          "AttachTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        Timestamp when this attachment initiated.\n        </p>\n    ",
            "xmlname": "attachTime"
          },
          "DeleteOnTermination": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n    `   <p>\n        Whether this volume will be deleted or not when the associated instance is\n        terminated.\n        </p>\n    ",
            "xmlname": "deleteOnTermination"
          }
        },
        "documentation": "\n    ",
        "xmlname": "attachment"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Attach a previously created volume to a running instance.\n        </p>\n    "
    },
    "AttachVpnGateway": {
      "name": "AttachVpnGateway",
      "input": {
        "shape_name": "AttachVpnGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPN gateway to attach to the VPC.\n        </p>\n    ",
            "required": true
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC to attach to the VPN gateway.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "AttachVpnGatewayResult",
        "type": "structure",
        "members": {
          "VpcAttachement": {
            "shape_name": "VpcAttachment",
            "type": "structure",
            "members": {
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n\n        </p>\n    ",
                "xmlname": "vpcId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n\n        </p>\n    ",
                "xmlname": "state"
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "attachment"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Attaches a VPN gateway to a VPC. This is the last step required to get your VPC fully connected\n        to your data center before launching instances in it. For more information, go to Process for Using\n        Amazon VPC in the Amazon Virtual Private Cloud Developer Guide.\n        </p>\n    "
    },
    "AuthorizeSecurityGroupEgress": {
      "name": "AuthorizeSecurityGroupEgress",
      "input": {
        "shape_name": "AuthorizeSecurityGroupEgressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the VPC security group to modify.\n        </p>\n    ",
            "required": true
          },
          "SourceSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "SourceSecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "IpProtocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "FromPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "ToPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "CidrIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "IpPermissions": {
            "shape_name": "IpPermissionList",
            "type": "list",
            "members": {
              "shape_name": "IpPermission",
              "type": "structure",
              "members": {
                "IpProtocol": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    "
                },
                "FromPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    "
                },
                "ToPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    "
                },
                "UserIdGroupPairs": {
                  "shape_name": "UserIdGroupPairList",
                  "type": "list",
                  "members": {
                    "shape_name": "UserIdGroupPair",
                    "type": "structure",
                    "members": {
                      "UserId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    "
                      },
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                    "xmlname": "Groups"
                  },
                  "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                  "flattened": true
                },
                "IpRanges": {
                  "shape_name": "IpRangeList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpRange",
                    "type": "structure",
                    "members": {
                      "CidrIp": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    "
                  },
                  "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                  "flattened": true
                }
              },
              "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    "
            },
            "documentation": "\n        <p>\n        List of IP permissions to authorize on the specified security group.  Specifying\n        permissions through IP permissions is the preferred way of authorizing permissions\n        since it offers more flexibility and control.\n        </p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tThis action applies only to security groups in a VPC; it's not supported for EC2 security groups.\n\t\tFor information about Amazon Virtual Private Cloud and VPC security groups, go to the Amazon\n\t\tVirtual Private Cloud User Guide.\n\t\t</p>\n\t\t<p>\n\t\tThe action adds one or more egress rules to a VPC security group. Specifically, this permits\n\t\tinstances in a security group to send traffic to either one or more destination CIDR IP address\n\t\tranges, or to one or more destination security groups in the same VPC.\n\t\t</p>\n\t\t<p>\n\t\tEach rule consists of the protocol (e.g., TCP), plus either a CIDR range, or a source group. For\n\t\tthe TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP\n\t\tprotocol, you must also specify the ICMP type and code. You can use <code>-1</code> as a wildcard\n\t\tfor the ICMP type or code.\n\t\t</p>\n\t\t<p>\n\t\tRule changes are propagated to instances within the security group as quickly as possible. However,\n\t\ta small delay might occur.\n\t\t</p>\n\t\t<p>\n\t\t<b>Important:</b> For VPC security groups: You can have up to 50 rules total per group (covering\n\t\tboth ingress and egress).\n\t\t</p>\n    "
    },
    "AuthorizeSecurityGroupIngress": {
      "name": "AuthorizeSecurityGroupIngress",
      "input": {
        "shape_name": "AuthorizeSecurityGroupIngressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Name of the standard (EC2) security group to modify. The group must belong to your account. Can be used instead of GroupID for standard (EC2) security groups.\n        </p>\n   "
          },
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the standard (EC2) or VPC security group to modify. The group must belong to your account. Required for VPC security groups; can be used instead of GroupName for standard (EC2) security groups.\n        </p>\n   "
          },
          "SourceSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n   "
          },
          "SourceSecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n   "
          },
          "IpProtocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n   "
          },
          "FromPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n   "
          },
          "ToPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "CidrIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "IpPermissions": {
            "shape_name": "IpPermissionList",
            "type": "list",
            "members": {
              "shape_name": "IpPermission",
              "type": "structure",
              "members": {
                "IpProtocol": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    "
                },
                "FromPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    "
                },
                "ToPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    "
                },
                "UserIdGroupPairs": {
                  "shape_name": "UserIdGroupPairList",
                  "type": "list",
                  "members": {
                    "shape_name": "UserIdGroupPair",
                    "type": "structure",
                    "members": {
                      "UserId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    "
                      },
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                    "xmlname": "Groups"
                  },
                  "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                  "flattened": true
                },
                "IpRanges": {
                  "shape_name": "IpRangeList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpRange",
                    "type": "structure",
                    "members": {
                      "CidrIp": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    "
                  },
                  "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                  "flattened": true
                }
              },
              "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    "
            },
            "documentation": "\n        <p>\n        List of IP permissions to authorize on the specified security group.  Specifying\n        permissions through IP permissions is the preferred way of authorizing permissions\n        since it offers more flexibility and control.\n        </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        Request to adds permissions to a security group.\n        </p>\n   "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The AuthorizeSecurityGroupIngress operation adds permissions to a security\n        group.\n        </p>\n        <p>\n        Permissions are specified by the IP protocol (TCP, UDP or ICMP), the source of\n        the request (by IP range or an Amazon EC2 user-group pair), the source and\n        destination port ranges (for TCP and UDP), and the ICMP codes and types (for\n        ICMP). When authorizing ICMP, <code>-1</code> can be used as a wildcard in the type and code\n        fields.\n        </p>\n        <p>\n        Permission changes are propagated to instances within the security group as\n        quickly as possible. However, depending on the number of instances, a small\n        delay might occur.\n        </p>\n    "
    },
    "BundleInstance": {
      "name": "BundleInstance",
      "input": {
        "shape_name": "BundleInstanceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance to bundle.\n        </p>\n    ",
            "required": true
          },
          "Storage": {
            "shape_name": "Storage",
            "type": "structure",
            "members": {
              "S3": {
                "shape_name": "S3Storage",
                "type": "structure",
                "members": {
                  "Bucket": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The bucket in which to store the AMI. You can specify a bucket that you\n        already own or a new bucket that Amazon EC2 creates on your\n        behalf.\n        </p>\n        <p>\n        If you specify a bucket that belongs to someone else, Amazon EC2 returns\n        an error.\n        </p>\n    "
                  },
                  "Prefix": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The prefix to use when storing the AMI in S3.\n        </p>\n    "
                  },
                  "AWSAccessKeyId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The Access Key ID of the owner of the Amazon S3 bucket.\n        </p>\n    "
                  },
                  "UploadPolicy": {
                    "shape_name": "String",
                    "type": "blob",
                    "documentation": "\n        <p>\n        A Base64-encoded Amazon S3 upload policy that gives Amazon EC2\n        permission to upload items into Amazon S3 on the user's behalf.\n        </p>\n    "
                  },
                  "UploadPolicySignature": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The signature of the Base64 encoded JSON document.\n        </p>\n    "
                  }
                },
                "documentation": "\n        <p>\n        The details of S3 storage for bundling a Windows instance.\n        </p>\n    "
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "BundleInstanceResult",
        "type": "structure",
        "members": {
          "BundleTask": {
            "shape_name": "BundleTask",
            "type": "structure",
            "members": {
              "InstanceId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Instance associated with this bundle task.\n        </p>\n    ",
                "xmlname": "instanceId"
              },
              "BundleId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Unique identifier for this task.\n        </p>\n    ",
                "xmlname": "bundleId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The state of this task.\n        </p>\n    ",
                "xmlname": "state"
              },
              "StartTime": {
                "shape_name": "DateTime",
                "type": "timestamp",
                "documentation": "\n        <p>\n        The time this task started.\n        </p>\n    ",
                "xmlname": "startTime"
              },
              "UpdateTime": {
                "shape_name": "DateTime",
                "type": "timestamp",
                "documentation": "\n        <p>\n        The time of the most recent update for the task.\n        </p>\n    ",
                "xmlname": "updateTime"
              },
              "Storage": {
                "shape_name": "Storage",
                "type": "structure",
                "members": {
                  "S3": {
                    "shape_name": "S3Storage",
                    "type": "structure",
                    "members": {
                      "Bucket": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The bucket in which to store the AMI. You can specify a bucket that you\n        already own or a new bucket that Amazon EC2 creates on your\n        behalf.\n        </p>\n        <p>\n        If you specify a bucket that belongs to someone else, Amazon EC2 returns\n        an error.\n        </p>\n    ",
                        "xmlname": "bucket"
                      },
                      "Prefix": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The prefix to use when storing the AMI in S3.\n        </p>\n    ",
                        "xmlname": "prefix"
                      },
                      "AWSAccessKeyId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The Access Key ID of the owner of the Amazon S3 bucket.\n        </p>\n    "
                      },
                      "UploadPolicy": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        A Base64-encoded Amazon S3 upload policy that gives Amazon EC2\n        permission to upload items into Amazon S3 on the user's behalf.\n        </p>\n    ",
                        "xmlname": "uploadPolicy"
                      },
                      "UploadPolicySignature": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The signature of the Base64 encoded JSON document.\n        </p>\n    ",
                        "xmlname": "uploadPolicySignature"
                      }
                    },
                    "documentation": "\n        <p>\n        The details of S3 storage for bundling a Windows instance.\n        </p>\n    "
                  }
                },
                "documentation": "\n        <p>\n        Amazon S3 storage locations.\n        </p>\n    ",
                "xmlname": "storage"
              },
              "Progress": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The level of task completion, in percent (e.g., 20%).\n        </p>\n    ",
                "xmlname": "progress"
              },
              "BundleTaskError": {
                "shape_name": "BundleTaskError",
                "type": "structure",
                "members": {
                  "Code": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        Error code.\n        </p>\n    ",
                    "xmlname": "code"
                  },
                  "Message": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        Error message.\n        </p>\n    ",
                    "xmlname": "message"
                  }
                },
                "documentation": "\n        <p>\n        If the task fails, a description of the error.\n        </p>\n    ",
                "xmlname": "error"
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "bundleInstanceTask"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The BundleInstance operation request that an instance is bundled the next time it boots.\n        The bundling process creates a new image from a running instance and stores\n        the AMI data in S3. Once bundled, the image must be registered in the normal\n        way using the RegisterImage API.\n        </p>\n    "
    },
    "CancelBundleTask": {
      "name": "CancelBundleTask",
      "input": {
        "shape_name": "CancelBundleTaskRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "BundleId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the bundle task to cancel.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to cancel an Amazon EC2 bundle task.\n        </p>\n    "
      },
      "output": {
        "shape_name": "CancelBundleTaskResult",
        "type": "structure",
        "members": {
          "BundleTask": {
            "shape_name": "BundleTask",
            "type": "structure",
            "members": {
              "InstanceId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Instance associated with this bundle task.\n        </p>\n    ",
                "xmlname": "instanceId"
              },
              "BundleId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Unique identifier for this task.\n        </p>\n    ",
                "xmlname": "bundleId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The state of this task.\n        </p>\n    ",
                "xmlname": "state"
              },
              "StartTime": {
                "shape_name": "DateTime",
                "type": "timestamp",
                "documentation": "\n        <p>\n        The time this task started.\n        </p>\n    ",
                "xmlname": "startTime"
              },
              "UpdateTime": {
                "shape_name": "DateTime",
                "type": "timestamp",
                "documentation": "\n        <p>\n        The time of the most recent update for the task.\n        </p>\n    ",
                "xmlname": "updateTime"
              },
              "Storage": {
                "shape_name": "Storage",
                "type": "structure",
                "members": {
                  "S3": {
                    "shape_name": "S3Storage",
                    "type": "structure",
                    "members": {
                      "Bucket": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The bucket in which to store the AMI. You can specify a bucket that you\n        already own or a new bucket that Amazon EC2 creates on your\n        behalf.\n        </p>\n        <p>\n        If you specify a bucket that belongs to someone else, Amazon EC2 returns\n        an error.\n        </p>\n    ",
                        "xmlname": "bucket"
                      },
                      "Prefix": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The prefix to use when storing the AMI in S3.\n        </p>\n    ",
                        "xmlname": "prefix"
                      },
                      "AWSAccessKeyId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The Access Key ID of the owner of the Amazon S3 bucket.\n        </p>\n    "
                      },
                      "UploadPolicy": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        A Base64-encoded Amazon S3 upload policy that gives Amazon EC2\n        permission to upload items into Amazon S3 on the user's behalf.\n        </p>\n    ",
                        "xmlname": "uploadPolicy"
                      },
                      "UploadPolicySignature": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The signature of the Base64 encoded JSON document.\n        </p>\n    ",
                        "xmlname": "uploadPolicySignature"
                      }
                    },
                    "documentation": "\n        <p>\n        The details of S3 storage for bundling a Windows instance.\n        </p>\n    "
                  }
                },
                "documentation": "\n        <p>\n        Amazon S3 storage locations.\n        </p>\n    ",
                "xmlname": "storage"
              },
              "Progress": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The level of task completion, in percent (e.g., 20%).\n        </p>\n    ",
                "xmlname": "progress"
              },
              "BundleTaskError": {
                "shape_name": "BundleTaskError",
                "type": "structure",
                "members": {
                  "Code": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        Error code.\n        </p>\n    ",
                    "xmlname": "code"
                  },
                  "Message": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        Error message.\n        </p>\n    ",
                    "xmlname": "message"
                  }
                },
                "documentation": "\n        <p>\n        If the task fails, a description of the error.\n        </p>\n    ",
                "xmlname": "error"
              }
            },
            "documentation": "\n        <p>\n        The canceled bundle task.\n        </p>\n    ",
            "xmlname": "bundleInstanceTask"
          }
        },
        "documentation": "\n        <p>\n        The result of canceling an Amazon EC2 bundle task.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        CancelBundleTask operation cancels a pending or\n        in-progress bundling task. This is an asynchronous\n        call and it make take a while for the task to be canceled.\n        If a task is canceled while it is storing items,\n        there may be parts of the incomplete AMI stored in S3.\n        It is up to the caller to clean up these parts from S3.\n        </p>\n    "
    },
    "CancelConversionTask": {
      "name": "CancelConversionTask",
      "input": {
        "shape_name": "CancelConversionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ConversionTaskId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "ReasonMessage": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "CancelExportTask": {
      "name": "CancelExportTask",
      "input": {
        "shape_name": "CancelExportTaskRequest",
        "type": "structure",
        "members": {
          "ExportTaskId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "CancelReservedInstancesListing": {
      "name": "CancelReservedInstancesListing",
      "input": {
        "shape_name": "CancelReservedInstancesListingRequest",
        "type": "structure",
        "members": {
          "ReservedInstancesListingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CancelReservedInstancesListingResult",
        "type": "structure",
        "members": {
          "ReservedInstancesListings": {
            "shape_name": "ReservedInstancesListingList",
            "type": "list",
            "members": {
              "shape_name": "ReservedInstancesListing",
              "type": "structure",
              "members": {
                "ReservedInstancesListingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesListingId"
                },
                "ReservedInstancesId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesId"
                },
                "CreateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "createDate"
                },
                "UpdateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "updateDate"
                },
                "Status": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "status"
                },
                "StatusMessage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "statusMessage"
                },
                "InstanceCounts": {
                  "shape_name": "InstanceCountList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceCount",
                    "type": "structure",
                    "members": {
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      },
                      "InstanceCount": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "instanceCount"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "instanceCounts"
                },
                "PriceSchedules": {
                  "shape_name": "PriceScheduleList",
                  "type": "list",
                  "members": {
                    "shape_name": "PriceSchedule",
                    "type": "structure",
                    "members": {
                      "Term": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "xmlname": "term"
                      },
                      "Price": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": null,
                        "xmlname": "price"
                      },
                      "CurrencyCode": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "currencyCode"
                      },
                      "Active": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "active"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "priceSchedules"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                },
                "ClientToken": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "clientToken"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "reservedInstancesListingsSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CancelSpotInstanceRequests": {
      "name": "CancelSpotInstanceRequests",
      "input": {
        "shape_name": "CancelSpotInstanceRequestsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SpotInstanceRequestIds": {
            "shape_name": "SpotInstanceRequestIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SpotInstanceRequestId"
            },
            "documentation": "\n        <p>\n        Specifies the ID of the Spot Instance request.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CancelSpotInstanceRequestsResult",
        "type": "structure",
        "members": {
          "CancelledSpotInstanceRequests": {
            "shape_name": "CancelledSpotInstanceRequestList",
            "type": "list",
            "members": {
              "shape_name": "CancelledSpotInstanceRequest",
              "type": "structure",
              "members": {
                "SpotInstanceRequestId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotInstanceRequestId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "state"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "spotInstanceRequestSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Cancels one or more Spot Instance requests.\n        </p>\n        <p>\n        Spot Instances are instances that Amazon EC2 starts\n        on your behalf when the maximum price that you specify\n        exceeds the current Spot Price. Amazon EC2 periodically\n        sets the Spot Price based on available Spot Instance\n        capacity and current spot instance requests.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
    },
    "ConfirmProductInstance": {
      "name": "ConfirmProductInstance",
      "input": {
        "shape_name": "ConfirmProductInstanceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ProductCode": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The product code to confirm.\n        </p>\n    ",
            "required": true
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance to confirm.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to verify whether an Amazon DevPay product code is associated\n        with an instance.\n        </p>\n        <p>\n        This can only be executed by the owner of the AMI and is useful when an\n        AMI owner wants to verify whether a user's instance is eligible for support.\n        </p>\n    "
      },
      "output": {
        "shape_name": "ConfirmProductInstanceResult",
        "type": "structure",
        "members": {
          "OwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The instance owner's account ID. Only present if the product code is\n        attached to the instance.\n        </p>\n    ",
            "xmlname": "ownerId"
          }
        },
        "documentation": "\n        <p>\n        The result of calling the ConfirmProductInstance operation.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The ConfirmProductInstance operation returns true if the specified product code\n        is attached to the specified instance. The operation returns false if the\n        product code is not attached to the instance.\n        </p>\n        <p>\n        The ConfirmProductInstance operation can only be executed by the owner of the\n        AMI. This feature is useful when an AMI owner is providing support and wants to\n        verify whether a user's instance is eligible.\n        </p>\n    "
    },
    "CopyImage": {
      "name": "CopyImage",
      "input": {
        "shape_name": "CopyImageRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SourceRegion": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "SourceImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Name": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "ClientToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CopyImageResult",
        "type": "structure",
        "members": {
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "imageId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CopySnapshot": {
      "name": "CopySnapshot",
      "input": {
        "shape_name": "CopySnapshotRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SourceRegion": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "SourceSnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CopySnapshotResult",
        "type": "structure",
        "members": {
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "snapshotId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateCustomerGateway": {
      "name": "CreateCustomerGateway",
      "input": {
        "shape_name": "CreateCustomerGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Type": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The type of VPN connection this customer gateway supports.\n        </p>\n    ",
            "required": true
          },
          "PublicIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\t\tThe Internet-routable IP address for the customer gateway's outside interface.\n\t\tThe address must be static\n        </p>\n    ",
            "required": true,
            "xmlname": "IpAddress"
          },
          "BgpAsn": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        The customer gateway's Border Gateway Protocol (BGP)\n        Autonomous System Number (ASN).\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateCustomerGatewayResult",
        "type": "structure",
        "members": {
          "CustomerGateway": {
            "shape_name": "CustomerGateway",
            "type": "structure",
            "members": {
              "CustomerGatewayId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the customer gateway.\n        </p>\n    ",
                "xmlname": "customerGatewayId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Describes the current state of the customer gateway.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                "xmlname": "state"
              },
              "Type": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the type of VPN connection the\n        customer gateway supports.\n        </p>\n    ",
                "xmlname": "type"
              },
              "IpAddress": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Contains the Internet-routable IP address of the\n        customer gateway's outside interface.\n        </p>\n    ",
                "xmlname": "ipAddress"
              },
              "BgpAsn": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the customer gateway's Border Gateway Protocol (BGP)\n        Autonomous System Number (ASN).\n        </p>\n    ",
                "xmlname": "bgpAsn"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the CustomerGateway.\n      </p>\n    ",
                "xmlname": "tagSet"
              }
            },
            "documentation": "\n        <p>\n        Information about the customer gateway.\n        </p>\n    ",
            "xmlname": "customerGateway"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Provides information to AWS about your customer gateway device. The customer gateway is the\n        appliance at your end of the VPN connection (compared to the VPN gateway, which is the device\n        at the AWS side of the VPN connection). You can have a single active customer gateway per AWS\n        account (active means that you've created a VPN connection to use with the customer gateway). AWS\n        might delete any customer gateway that you create with this operation if you leave it inactive for an\n        extended period of time.\n        </p>\n        <p>\n        You must provide the Internet-routable IP address of the customer gateway's external interface. The IP\n        address must be static.\n        </p>\n        <p>\n        You must also provide the device's Border Gateway Protocol (BGP) Autonomous System Number\n        (ASN). You can use an existing ASN assigned to your network. If you don't have an ASN already,\n        you can use a private ASN (in the 64512 - 65534 range). For more information about ASNs, go to\n        <a href=\"http://en.wikipedia.org/wiki/Autonomous_system_%28Internet%29\">\n        http://en.wikipedia.org/wiki/Autonomous_system_%28Internet%29</a>.\n        </p>\n    "
    },
    "CreateDhcpOptions": {
      "name": "CreateDhcpOptions",
      "input": {
        "shape_name": "CreateDhcpOptionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "DhcpConfigurations": {
            "shape_name": "DhcpConfigurationList",
            "type": "list",
            "members": {
              "shape_name": "DhcpConfiguration",
              "type": "structure",
              "members": {
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Contains the name of a DHCP option.\n        </p>\n    "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n        <p>\n        Contains a set of values for a DHCP option.\n        </p>\n    ",
                  "flattened": true
                }
              },
              "documentation": "\n        <p>\n        The DhcpConfiguration data type\n        </p>\n    ",
              "xmlname": "DhcpConfiguration"
            },
            "documentation": "\n        <p>\n        A set of one or more DHCP configurations.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateDhcpOptionsResult",
        "type": "structure",
        "members": {
          "DhcpOptions": {
            "shape_name": "DhcpOptions",
            "type": "structure",
            "members": {
              "DhcpOptionsId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the set of DHCP options.\n        </p>\n    ",
                "xmlname": "dhcpOptionsId"
              },
              "DhcpConfigurations": {
                "shape_name": "DhcpConfigurationList",
                "type": "list",
                "members": {
                  "shape_name": "DhcpConfiguration",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Contains the name of a DHCP option.\n        </p>\n    ",
                      "xmlname": "key"
                    },
                    "Values": {
                      "shape_name": "ValueStringList",
                      "type": "list",
                      "members": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": "\n        <p>\n        Contains a set of values for a DHCP option.\n        </p>\n    ",
                      "xmlname": "valueSet"
                    }
                  },
                  "documentation": "\n        <p>\n        The DhcpConfiguration data type\n        </p>\n    ",
                  "xmlname": "item"
                },
                "documentation": "\n        <p>\n        Contains information about the set of DHCP options.\n        </p>\n    ",
                "xmlname": "dhcpConfigurationSet"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the DhcpOptions.\n      </p>\n    ",
                "xmlname": "tagSet"
              }
            },
            "documentation": "\n        <p>\n        A set of one or more DHCP options.\n        </p>\n    ",
            "xmlname": "dhcpOptions"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a set of DHCP options that you can then associate with one or more VPCs, causing all existing\n        and new instances that you launch in those VPCs to use the set of DHCP options. The following table\n        lists the individual DHCP options you can specify. For more information about the options, go to\n        <a href=\"http://www.ietf.org/rfc/rfc2132.txt\">http://www.ietf.org/rfc/rfc2132.txt</a>\n        </p>\n    "
    },
    "CreateImage": {
      "name": "CreateImage",
      "input": {
        "shape_name": "CreateImageRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance from which to create the new image.\n        </p>\n    ",
            "required": true
          },
          "Name": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name for the new AMI being created.\n        </p>\n    ",
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The description for the new AMI being created.\n        </p>\n    "
          },
          "NoReboot": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n        By default this property is set to <code>false</code>, which means Amazon EC2\n        attempts to cleanly shut down the instance before image creation and reboots\n        the instance afterwards. When set to true, Amazon EC2 will not shut down the\n        instance before creating the image. When this option is used, file system\n        integrity on the created image cannot be guaranteed.\n        </p>\n    "
          },
          "BlockDeviceMappings": {
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list",
            "members": {
              "shape_name": "BlockDeviceMapping",
              "type": "structure",
              "members": {
                "VirtualName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    "
                },
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    "
                },
                "Ebs": {
                  "shape_name": "EbsBlockDevice",
                  "type": "structure",
                  "members": {
                    "SnapshotId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    "
                    },
                    "VolumeSize": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    "
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    "
                    },
                    "VolumeType": {
                      "shape_name": "VolumeType",
                      "type": "string",
                      "enum": [
                        "standard",
                        "io1"
                      ],
                      "documentation": null
                    },
                    "Iops": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null
                    }
                  },
                  "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    "
                },
                "NoDevice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    "
                }
              },
              "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
              "xmlname": "BlockDeviceMapping"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        Represents a request to create a new EC2 image.\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateImageResult",
        "type": "structure",
        "members": {
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the new AMI.\n        </p>\n    ",
            "xmlname": "imageId"
          }
        },
        "documentation": "\n        <p>\n        The result of creating a new EC2 image. Contains the ID of the new image.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates an Amazon EBS-backed AMI from a \"running\" or \"stopped\" instance.\n        AMIs that use an Amazon EBS root device boot faster than AMIs that use instance stores.\n        They can be up to 1 TiB in size, use storage that persists on instance failure, and can be stopped and started.\n        </p>\n    "
    },
    "CreateInstanceExportTask": {
      "name": "CreateInstanceExportTask",
      "input": {
        "shape_name": "CreateInstanceExportTaskRequest",
        "type": "structure",
        "members": {
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "TargetEnvironment": {
            "shape_name": "ExportEnvironment",
            "type": "string",
            "enum": [
              "citrix",
              "vmware"
            ],
            "documentation": null
          },
          "ExportToS3Task": {
            "shape_name": "ExportToS3TaskSpecification",
            "type": "structure",
            "members": {
              "DiskImageFormat": {
                "shape_name": "DiskImageFormat",
                "type": "string",
                "enum": [
                  "vmdk",
                  "vhd"
                ],
                "documentation": null
              },
              "ContainerFormat": {
                "shape_name": "ContainerFormat",
                "type": "string",
                "enum": [
                  "ova"
                ],
                "documentation": null
              },
              "S3Bucket": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "S3Prefix": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              }
            },
            "documentation": null,
            "xmlname": "ExportToS3"
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateInstanceExportTaskResult",
        "type": "structure",
        "members": {
          "ExportTask": {
            "shape_name": "ExportTask",
            "type": "structure",
            "members": {
              "ExportTaskId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "exportTaskId"
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "description"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "state"
              },
              "StatusMessage": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "statusMessage"
              },
              "InstanceExportDetails": {
                "shape_name": "InstanceExportDetails",
                "type": "structure",
                "members": {
                  "InstanceId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "instanceId"
                  },
                  "TargetEnvironment": {
                    "shape_name": "ExportEnvironment",
                    "type": "string",
                    "enum": [
                      "citrix",
                      "vmware"
                    ],
                    "documentation": null,
                    "xmlname": "targetEnvironment"
                  }
                },
                "documentation": null,
                "xmlname": "instanceExport"
              },
              "ExportToS3Task": {
                "shape_name": "ExportToS3Task",
                "type": "structure",
                "members": {
                  "DiskImageFormat": {
                    "shape_name": "DiskImageFormat",
                    "type": "string",
                    "enum": [
                      "vmdk",
                      "vhd"
                    ],
                    "documentation": null,
                    "xmlname": "diskImageFormat"
                  },
                  "ContainerFormat": {
                    "shape_name": "ContainerFormat",
                    "type": "string",
                    "enum": [
                      "ova"
                    ],
                    "documentation": null,
                    "xmlname": "containerFormat"
                  },
                  "S3Bucket": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "s3Bucket"
                  },
                  "S3Key": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "s3Key"
                  }
                },
                "documentation": null,
                "xmlname": "exportToS3"
              }
            },
            "documentation": null,
            "xmlname": "exportTask"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateInternetGateway": {
      "name": "CreateInternetGateway",
      "input": {
        "shape_name": "CreateInternetGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateInternetGatewayResult",
        "type": "structure",
        "members": {
          "InternetGateway": {
            "shape_name": "InternetGateway",
            "type": "structure",
            "members": {
              "InternetGatewayId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "internetGatewayId"
              },
              "Attachments": {
                "shape_name": "InternetGatewayAttachmentList",
                "type": "list",
                "members": {
                  "shape_name": "InternetGatewayAttachment",
                  "type": "structure",
                  "members": {
                    "VpcId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "vpcId"
                    },
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "state"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "attachmentSet"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              }
            },
            "documentation": null,
            "xmlname": "internetGateway"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a new Internet gateway in your AWS account. After creating the Internet gateway,\n\t\tyou then attach it to a VPC using <code>AttachInternetGateway</code>. For more information\n\t\tabout your VPC and Internet gateway, go to Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "CreateKeyPair": {
      "name": "CreateKeyPair",
      "input": {
        "shape_name": "CreateKeyPairRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique name for the new key pair.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        Represents a request to create a new EC2 key pair.\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateKeyPairResult",
        "type": "structure",
        "members": {
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    ",
            "xmlname": "keyName"
          },
          "KeyFingerprint": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The SHA-1 digest of the DER encoded private key.\n        </p>\n    ",
            "xmlname": "keyFingerprint"
          },
          "KeyMaterial": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unencrypted PEM encoded RSA private key.\n        </p>\n    ",
            "xmlname": "keyMaterial"
          }
        },
        "documentation": "\n        <p>\n        The result of creating a new EC2 key pair.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The CreateKeyPair operation creates a new 2048 bit RSA key pair and returns a\n        unique ID that can be used to reference this key pair when launching new\n        instances. For more information, see RunInstances.\n        </p>\n    "
    },
    "CreateNetworkAcl": {
      "name": "CreateNetworkAcl",
      "input": {
        "shape_name": "CreateNetworkAclRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC where the network ACL will be created.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateNetworkAclResult",
        "type": "structure",
        "members": {
          "NetworkAcl": {
            "shape_name": "NetworkAcl",
            "type": "structure",
            "members": {
              "NetworkAclId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "networkAclId"
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "vpcId"
              },
              "IsDefault": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "default"
              },
              "Entries": {
                "shape_name": "NetworkAclEntryList",
                "type": "list",
                "members": {
                  "shape_name": "NetworkAclEntry",
                  "type": "structure",
                  "members": {
                    "RuleNumber": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null,
                      "xmlname": "ruleNumber"
                    },
                    "Protocol": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "protocol"
                    },
                    "RuleAction": {
                      "shape_name": "RuleAction",
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ],
                      "documentation": null,
                      "xmlname": "ruleAction"
                    },
                    "Egress": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "egress"
                    },
                    "CidrBlock": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "cidrBlock"
                    },
                    "IcmpTypeCode": {
                      "shape_name": "IcmpTypeCode",
                      "type": "structure",
                      "members": {
                        "Type": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP type. A value of <code>-1</code> is a wildcard meaning all types. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    ",
                          "xmlname": "type"
                        },
                        "Code": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP code. A value of <code>-1</code> is a wildcard meaning all codes. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    ",
                          "xmlname": "code"
                        }
                      },
                      "documentation": null,
                      "xmlname": "icmpTypeCode"
                    },
                    "PortRange": {
                      "shape_name": "PortRange",
                      "type": "structure",
                      "members": {
                        "From": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>\n       \tThe first port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    ",
                          "xmlname": "from"
                        },
                        "To": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>\n       \tThe last port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    ",
                          "xmlname": "to"
                        }
                      },
                      "documentation": null,
                      "xmlname": "portRange"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "entrySet"
              },
              "Associations": {
                "shape_name": "NetworkAclAssociationList",
                "type": "list",
                "members": {
                  "shape_name": "NetworkAclAssociation",
                  "type": "structure",
                  "members": {
                    "NetworkAclAssociationId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "networkAclAssociationId"
                    },
                    "NetworkAclId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "networkAclId"
                    },
                    "SubnetId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "subnetId"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "associationSet"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              }
            },
            "documentation": null,
            "xmlname": "networkAcl"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a new network ACL in a VPC. Network ACLs provide an optional layer of security\n\t\t(on top of security groups) for the instances in your VPC. For more information about\n\t\tnetwork ACLs, go to Network ACLs in the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "CreateNetworkAclEntry": {
      "name": "CreateNetworkAclEntry",
      "input": {
        "shape_name": "CreateNetworkAclEntryRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkAclId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the ACL where the entry will be created.\n        </p>\n    ",
            "required": true
          },
          "RuleNumber": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Rule number to assign to the entry (e.g., 100). ACL entries are processed in ascending\n\t\torder by rule number.\n        </p>\n    ",
            "required": true
          },
          "Protocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        IP protocol the rule applies to. Valid Values: <code>tcp</code>, <code>udp</code>,\n\t\t<code>icmp</code> or an IP protocol number.\n        </p>\n    ",
            "required": true
          },
          "RuleAction": {
            "shape_name": "RuleAction",
            "type": "string",
            "enum": [
              "allow",
              "deny"
            ],
            "documentation": "\n        <p>\n        Whether to allow or deny traffic that matches the rule.\n        </p>\n    ",
            "required": true
          },
          "Egress": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n       \tWhether this rule applies to egress traffic from the subnet (<code>true</code>) or ingress traffic to the subnet (<code>false</code>).\n        </p>\n    ",
            "required": true
          },
          "CidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The CIDR range to allow or deny, in CIDR notation (e.g., <code>172.16.0.0/24</code>).\n        </p>\n    ",
            "required": true
          },
          "IcmpTypeCode": {
            "shape_name": "IcmpTypeCode",
            "type": "structure",
            "members": {
              "Type": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP type. A value of <code>-1</code> is a wildcard meaning all types. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    "
              },
              "Code": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP code. A value of <code>-1</code> is a wildcard meaning all codes. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    "
              }
            },
            "documentation": "\n    \t<p>ICMP values.</p>\n    ",
            "xmlname": "Icmp"
          },
          "PortRange": {
            "shape_name": "PortRange",
            "type": "structure",
            "members": {
              "From": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n       \tThe first port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    "
              },
              "To": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n       \tThe last port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    "
              }
            },
            "documentation": "\n\t\t<p>Port ranges.</p>\n    "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n       \tCreates an entry (i.e., rule) in a network ACL with a rule number you specify. Each network\n\t\tACL has a set of numbered ingress rules and a separate set of numbered egress rules. When\n\t\tdetermining whether a packet should be allowed in or out of a subnet associated with the ACL,\n\t\tAmazon VPC processes the entries in the ACL according to the rule numbers, in ascending order.\n    \t</p>\n        <p>\n\t\t<b>Important:</b> We recommend that you leave room between the rules (e.g., 100, 110, 120,\n\t\tetc.), and not number them sequentially (101, 102, 103, etc.). This allows you to easily\n\t\tadd a new rule between existing ones without having to renumber the rules.\n    \t</p>\n        <p>\n\t\tAfter you add an entry, you can't modify it; you must either replace it, or create a new\n\t\tentry and delete the old one.\n    \t</p>\n        <p>\n\t\tFor more information about network ACLs, go to Network ACLs in the Amazon Virtual Private\n\t\tCloud User Guide.\n        </p>\n    "
    },
    "CreateNetworkInterface": {
      "name": "CreateNetworkInterface",
      "input": {
        "shape_name": "CreateNetworkInterfaceRequest",
        "type": "structure",
        "members": {
          "SubnetId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "PrivateIpAddress": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "Groups": {
            "shape_name": "SecurityGroupIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": null,
            "flattened": true
          },
          "PrivateIpAddresses": {
            "shape_name": "PrivateIpAddressSpecificationList",
            "type": "list",
            "members": {
              "shape_name": "PrivateIpAddressSpecification",
              "type": "structure",
              "members": {
                "PrivateIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "required": true
                },
                "Primary": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null
                }
              },
              "documentation": null
            },
            "documentation": null,
            "flattened": true
          },
          "SecondaryPrivateIpAddressCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null
          },
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateNetworkInterfaceResult",
        "type": "structure",
        "members": {
          "NetworkInterface": {
            "shape_name": "NetworkInterface",
            "type": "structure",
            "members": {
              "NetworkInterfaceId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "networkInterfaceId"
              },
              "SubnetId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "subnetId"
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "vpcId"
              },
              "AvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "availabilityZone"
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "description"
              },
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "ownerId"
              },
              "RequesterId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "requesterId"
              },
              "RequesterManaged": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "requesterManaged"
              },
              "Status": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "status"
              },
              "MacAddress": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "macAddress"
              },
              "PrivateIpAddress": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "privateIpAddress"
              },
              "PrivateDnsName": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "privateDnsName"
              },
              "SourceDestCheck": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "sourceDestCheck"
              },
              "Groups": {
                "shape_name": "GroupIdentifierList",
                "type": "list",
                "members": {
                  "shape_name": "GroupIdentifier",
                  "type": "structure",
                  "members": {
                    "GroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n\n        </p>\n    ",
                      "xmlname": "groupName"
                    },
                    "GroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "groupId"
                    }
                  },
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "groupSet"
              },
              "Attachment": {
                "shape_name": "NetworkInterfaceAttachment",
                "type": "structure",
                "members": {
                  "AttachmentId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "attachmentId"
                  },
                  "InstanceId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "instanceId"
                  },
                  "InstanceOwnerId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "instanceOwnerId"
                  },
                  "DeviceIndex": {
                    "shape_name": "Integer",
                    "type": "integer",
                    "documentation": null,
                    "xmlname": "deviceIndex"
                  },
                  "Status": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "status"
                  },
                  "AttachTime": {
                    "shape_name": "DateTime",
                    "type": "timestamp",
                    "documentation": null,
                    "xmlname": "attachTime"
                  },
                  "DeleteOnTermination": {
                    "shape_name": "Boolean",
                    "type": "boolean",
                    "documentation": null,
                    "xmlname": "deleteOnTermination"
                  }
                },
                "documentation": null,
                "xmlname": "attachment"
              },
              "Association": {
                "shape_name": "NetworkInterfaceAssociation",
                "type": "structure",
                "members": {
                  "PublicIp": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "publicIp"
                  },
                  "IpOwnerId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "ipOwnerId"
                  },
                  "AllocationId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "allocationId"
                  },
                  "AssociationId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "associationId"
                  }
                },
                "documentation": null,
                "xmlname": "association"
              },
              "TagSet": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              },
              "PrivateIpAddresses": {
                "shape_name": "NetworkInterfacePrivateIpAddressList",
                "type": "list",
                "members": {
                  "shape_name": "NetworkInterfacePrivateIpAddress",
                  "type": "structure",
                  "members": {
                    "PrivateIpAddress": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "privateIpAddress"
                    },
                    "PrivateDnsName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "privateDnsName"
                    },
                    "Primary": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "primary"
                    },
                    "Association": {
                      "shape_name": "NetworkInterfaceAssociation",
                      "type": "structure",
                      "members": {
                        "PublicIp": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "publicIp"
                        },
                        "IpOwnerId": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "ipOwnerId"
                        },
                        "AllocationId": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "allocationId"
                        },
                        "AssociationId": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "associationId"
                        }
                      },
                      "documentation": null,
                      "xmlname": "association"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "privateIpAddressesSet"
              }
            },
            "documentation": null,
            "xmlname": "networkInterface"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreatePlacementGroup": {
      "name": "CreatePlacementGroup",
      "input": {
        "shape_name": "CreatePlacementGroupRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the <code>PlacementGroup</code>.\n        </p>\n    ",
            "required": true
          },
          "Strategy": {
            "shape_name": "PlacementStrategy",
            "type": "string",
            "enum": [
              "cluster"
            ],
            "documentation": "\n        <p>\n        The <code>PlacementGroup</code> strategy.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a <a>PlacementGroup</a> into which multiple Amazon EC2\n        instances can be launched.\n        Users must give the group a name unique within the scope of the user account.\n        </p>\n    "
    },
    "CreateReservedInstancesListing": {
      "name": "CreateReservedInstancesListing",
      "input": {
        "shape_name": "CreateReservedInstancesListingRequest",
        "type": "structure",
        "members": {
          "ReservedInstancesId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "InstanceCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null,
            "required": true
          },
          "PriceSchedules": {
            "shape_name": "PriceScheduleSpecificationList",
            "type": "list",
            "members": {
              "shape_name": "PriceScheduleSpecification",
              "type": "structure",
              "members": {
                "Term": {
                  "shape_name": "Long",
                  "type": "long",
                  "documentation": null
                },
                "Price": {
                  "shape_name": "Double",
                  "type": "double",
                  "documentation": null
                },
                "CurrencyCode": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                }
              },
              "documentation": null
            },
            "documentation": null,
            "required": true,
            "flattened": true
          },
          "ClientToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateReservedInstancesListingResult",
        "type": "structure",
        "members": {
          "ReservedInstancesListings": {
            "shape_name": "ReservedInstancesListingList",
            "type": "list",
            "members": {
              "shape_name": "ReservedInstancesListing",
              "type": "structure",
              "members": {
                "ReservedInstancesListingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesListingId"
                },
                "ReservedInstancesId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesId"
                },
                "CreateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "createDate"
                },
                "UpdateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "updateDate"
                },
                "Status": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "status"
                },
                "StatusMessage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "statusMessage"
                },
                "InstanceCounts": {
                  "shape_name": "InstanceCountList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceCount",
                    "type": "structure",
                    "members": {
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      },
                      "InstanceCount": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "instanceCount"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "instanceCounts"
                },
                "PriceSchedules": {
                  "shape_name": "PriceScheduleList",
                  "type": "list",
                  "members": {
                    "shape_name": "PriceSchedule",
                    "type": "structure",
                    "members": {
                      "Term": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "xmlname": "term"
                      },
                      "Price": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": null,
                        "xmlname": "price"
                      },
                      "CurrencyCode": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "currencyCode"
                      },
                      "Active": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "active"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "priceSchedules"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                },
                "ClientToken": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "clientToken"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "reservedInstancesListingsSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateRoute": {
      "name": "CreateRoute",
      "input": {
        "shape_name": "CreateRouteRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the route table where the route will be added.\n        </p>\n    ",
            "required": true
          },
          "DestinationCidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The CIDR address block used for the destination match. For example:\n\t\t<code>0.0.0.0/0</code>. Routing decisions are based on the most specific match.\n        </p>\n    ",
            "required": true
          },
          "GatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n       \tThe ID of a VPN or Internet gateway attached to your VPC. You must provide either <code>GatewayId</code> or\n\t\t<code>InstanceId</code>, but not both.\n        </p>\n    "
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n       \tThe ID of a NAT instance in your VPC. You must provide either <code>GatewayId</code> or\n\t\t<code>InstanceId</code>, but not both.\n        </p>\n    "
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n       \tCreates a new route in a route table within a VPC. The route's target can be either\n\t\ta gateway attached to the VPC or a NAT instance in the VPC.\n    \t</p>\n        <p>\n\t\tWhen determining how to route traffic, we use the route with the most specific match.\n\t\tFor example, let's say the traffic is destined for <code>192.0.2.3</code>, and the\n\t\troute table includes the following two routes:\n    \t</p>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t<code>192.0.2.0/24</code> (goes to some target A)\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<code>192.0.2.0/28</code> (goes to some target B)\n\t\t\t</li>\n\t\t</ul>\n        <p>\n\t\tBoth routes apply to the traffic destined for <code>192.0.2.3</code>. However, the\n\t\tsecond route in the list is more specific, so we use that route to determine where\n\t\tto target the traffic.\n    \t</p>\n        <p>\n\t\tFor more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "CreateRouteTable": {
      "name": "CreateRouteTable",
      "input": {
        "shape_name": "CreateRouteTableRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC where the route table will be created.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateRouteTableResult",
        "type": "structure",
        "members": {
          "RouteTable": {
            "shape_name": "RouteTable",
            "type": "structure",
            "members": {
              "RouteTableId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "routeTableId"
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "vpcId"
              },
              "Routes": {
                "shape_name": "RouteList",
                "type": "list",
                "members": {
                  "shape_name": "Route",
                  "type": "structure",
                  "members": {
                    "DestinationCidrBlock": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "destinationCidrBlock"
                    },
                    "GatewayId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "gatewayId"
                    },
                    "InstanceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceId"
                    },
                    "InstanceOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceOwnerId"
                    },
                    "NetworkInterfaceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "networkInterfaceId"
                    },
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "state"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "routeSet"
              },
              "Associations": {
                "shape_name": "RouteTableAssociationList",
                "type": "list",
                "members": {
                  "shape_name": "RouteTableAssociation",
                  "type": "structure",
                  "members": {
                    "RouteTableAssociationId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "routeTableAssociationId"
                    },
                    "RouteTableId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "routeTableId"
                    },
                    "SubnetId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "subnetId"
                    },
                    "Main": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "main"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "associationSet"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              },
              "PropagatingVgws": {
                "shape_name": "PropagatingVgwList",
                "type": "list",
                "members": {
                  "shape_name": "PropagatingVgw",
                  "type": "structure",
                  "members": {
                    "GatewayId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "gatewayId"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "propagatingVgwSet"
              }
            },
            "documentation": null,
            "xmlname": "routeTable"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a new route table within a VPC. After you create a new route table, you can add\n\t\troutes and associate the table with a subnet. For more information about route tables,\n\t\tgo to <a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "CreateSecurityGroup": {
      "name": "CreateSecurityGroup",
      "input": {
        "shape_name": "CreateSecurityGroupRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Name of the security group.\n        </p>\n    ",
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Description of the group. This is informational only.\n        </p>\n    ",
            "required": true,
            "xmlname": "GroupDescription"
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the VPC.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        Represents a request to create a new EC2 security group.\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateSecurityGroupResult",
        "type": "structure",
        "members": {
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "groupId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The CreateSecurityGroup operation creates a new security group.\n        </p>\n        <p>\n        Every instance is launched in a security group. If no security group is\n        specified during launch, the instances are launched in the default security\n        group. Instances within the same security group have unrestricted network\n        access to each other. Instances will reject network access attempts from other\n        instances in a different security group. As the owner of instances you can\n        grant or revoke specific permissions using the AuthorizeSecurityGroupIngress\n        and RevokeSecurityGroupIngress operations.\n        </p>\n    "
    },
    "CreateSnapshot": {
      "name": "CreateSnapshot",
      "input": {
        "shape_name": "CreateSnapshotRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the volume from which to create the snapshot.\n        </p>\n    ",
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The description for the new snapshot.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        Represents a request to create a snapshot from an <i>Elastic Block Storage</i> (EBS)\n        volume.\n        </p>\n    "
      },
      "output": {
        "shape_name": "Snapshot",
        "type": "structure",
        "members": {
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of this snapshot.\n        </p>\n    ",
            "xmlname": "snapshotId"
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the volume from which this snapshot was created.\n        </p>\n    ",
            "xmlname": "volumeId"
          },
          "State": {
            "shape_name": "SnapshotState",
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "error"
            ],
            "documentation": "\n        <p>\n        Snapshot state (e.g., pending, completed, or error).\n        </p>\n    ",
            "xmlname": "status"
          },
          "StartTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        Time stamp when the snapshot was initiated.\n        </p>\n    ",
            "xmlname": "startTime"
          },
          "Progress": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The progress of the snapshot, in percentage.\n        </p>\n    ",
            "xmlname": "progress"
          },
          "OwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        AWS Access Key ID of the user who owns the snapshot.\n        </p>\n    ",
            "xmlname": "ownerId"
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Description of the snapshot.\n        </p>\n\n    ",
            "xmlname": "description"
          },
          "VolumeSize": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
            "xmlname": "volumeSize"
          },
          "OwnerAlias": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The AWS account alias (e.g., \"amazon\", \"redhat\", \"self\", etc.) or AWS\n        account ID that owns the AMI.\n        </p>\n    ",
            "xmlname": "ownerAlias"
          },
          "Tags": {
            "shape_name": "TagList",
            "type": "list",
            "members": {
              "shape_name": "Tag",
              "type": "structure",
              "members": {
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                  "xmlname": "key"
                },
                "Value": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                  "xmlname": "value"
                }
              },
              "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
              "xmlname": "item"
            },
            "documentation": "\n      <p>\n      A list of tags for the Snapshot.\n      </p>\n    ",
            "xmlname": "tagSet"
          }
        },
        "documentation": "\n        <p>\n        The new snapshot.\n        </p>\n    ",
        "xmlname": "snapshot"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Create a snapshot of the volume identified by volume ID. A volume does not have to be detached\n        at the time the snapshot is taken.\n        </p>\n        <note>\n        Snapshot creation requires that the system is in a consistent state.\n        For instance, this means that if taking a snapshot of a database, the tables must\n        be read-only locked to ensure that the snapshot will not contain a corrupted\n        version of the database.  Therefore, be careful when using this API to ensure that\n        the system remains in the consistent state until the create snapshot status\n        has returned.\n        </note>\n    "
    },
    "CreateSpotDatafeedSubscription": {
      "name": "CreateSpotDatafeedSubscription",
      "input": {
        "shape_name": "CreateSpotDatafeedSubscriptionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Bucket": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Amazon S3 bucket in which to store the Spot Instance datafeed.\n        </p>\n    ",
            "required": true
          },
          "Prefix": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The prefix that is prepended to datafeed files.\n        </p>\n    "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "CreateSpotDatafeedSubscriptionResult",
        "type": "structure",
        "members": {
          "SpotDatafeedSubscription": {
            "shape_name": "SpotDatafeedSubscription",
            "type": "structure",
            "members": {
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the AWS account ID of the account.\n        </p>\n    ",
                "xmlname": "ownerId"
              },
              "Bucket": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the Amazon S3 bucket where the Spot Instance data feed is located.\n        </p>\n    ",
                "xmlname": "bucket"
              },
              "Prefix": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Contains the prefix that is prepended to data feed files.\n        </p>\n    ",
                "xmlname": "prefix"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the state of the Spot Instance request.\n        </p>\n    ",
                "xmlname": "state"
              },
              "Fault": {
                "shape_name": "SpotInstanceStateFault",
                "type": "structure",
                "members": {
                  "Code": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "code"
                  },
                  "Message": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "message"
                  }
                },
                "documentation": "\n        <p>\n        Specifies a fault code for the Spot Instance request, if present.\n        </p>\n    ",
                "xmlname": "fault"
              }
            },
            "documentation": "\n        <p>\n        The SpotDatafeedSubscriptionType data type.\n        </p>\n    ",
            "xmlname": "spotDatafeedSubscription"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates the data feed for Spot Instances,\n        enabling you to view Spot Instance usage logs.\n        You can create one data feed per account.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
    },
    "CreateSubnet": {
      "name": "CreateSubnet",
      "input": {
        "shape_name": "CreateSubnetRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC to create the subnet in.\n        </p>\n    ",
            "required": true
          },
          "CidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The CIDR block the subnet is to cover.\n        </p>\n    ",
            "required": true
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Availability Zone to create the subnet in.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateSubnetResult",
        "type": "structure",
        "members": {
          "Subnet": {
            "shape_name": "Subnet",
            "type": "structure",
            "members": {
              "SubnetId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the subnet.\n        </p>\n    ",
                "xmlname": "subnetId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Describes the current state of the subnet.\n        The state of the subnet may be either\n        <code>pending</code> or\n        <code>available</code>.\n        </p>\n    ",
                "xmlname": "state"
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Contains the ID of the VPC the subnet is in.\n        </p>\n    ",
                "xmlname": "vpcId"
              },
              "CidrBlock": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the CIDR block assigned to the subnet.\n        </p>\n    ",
                "xmlname": "cidrBlock"
              },
              "AvailableIpAddressCount": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n        Specifies the number of unused IP addresses in the subnet.\n        </p>\n        <note>\n            <p>\n            The IP addresses for any stopped instances are\n            considered unavailable.\n            </p>\n        </note>\n    ",
                "xmlname": "availableIpAddressCount"
              },
              "AvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the Availability Zone the subnet is in.\n        </p>\n    ",
                "xmlname": "availabilityZone"
              },
              "DefaultForAz": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "defaultForAz"
              },
              "MapPublicIpOnLaunch": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "mapPublicIpOnLaunch"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the Subnet.\n      </p>\n    ",
                "xmlname": "tagSet"
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "subnet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a subnet in an existing VPC. You can create up to 20 subnets in a VPC. If you add more than\n        one subnet to a VPC, they're set up in a star topology with a logical router in the middle.\n        When you create each subnet, you provide the VPC ID and the CIDR block you want for the subnet.\n        Once you create a subnet, you can't change its CIDR block. The subnet's CIDR block can be the same\n        as the VPC's CIDR block (assuming you want only a single subnet in the VPC), or a subset of the\n        VPC's CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not\n        overlap. The smallest subnet (and VPC) you can create uses a <code>/28</code> netmask (16 IP addresses), and the\n        largest uses a <code>/18</code> netmask (16,384 IP addresses).\n        </p>\n        <important>\n            <p>\n            AWS reserves both the first four and the last IP address in each subnet's CIDR block. They're\n            not available for use.\n            </p>\n        </important>\n    "
    },
    "CreateTags": {
      "name": "CreateTags",
      "input": {
        "shape_name": "CreateTagsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Resources": {
            "shape_name": "ResourceIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ResourceId"
            },
            "documentation": "\n    <p>\n    One or more IDs of resources to tag.  This could be the ID of an AMI, an instance, an EBS volume, or snapshot, etc.\n    </p>\n   ",
            "required": true,
            "flattened": true
          },
          "Tags": {
            "shape_name": "TagList",
            "type": "list",
            "members": {
              "shape_name": "Tag",
              "type": "structure",
              "members": {
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   "
                },
                "Value": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   "
                }
              },
              "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
              "xmlname": "Tag"
            },
            "documentation": "\n    <p>\n    The tags to add or overwrite for the specified resources. Each tag item consists of a key-value pair.\n    </p>\n   ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n    <p>\n    Adds or overwrites tags for the specified resources.  Each resource can have a maximum of 10 tags.\n    Each tag consists of a key-value pair. Tag keys must be unique per resource.\n    </p>\n   "
    },
    "CreateVolume": {
      "name": "CreateVolume",
      "input": {
        "shape_name": "CreateVolumeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Size": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        The size of the volume, in gigabytes. Required if you are not creating a\n        volume from a snapshot.\n        </p>\n    "
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the snapshot from which to create the new volume.\n        </p>\n    "
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Availability Zone in which to create the new volume.\n        </p>\n    ",
            "required": true
          },
          "VolumeType": {
            "shape_name": "VolumeType",
            "type": "string",
            "enum": [
              "standard",
              "io1"
            ],
            "documentation": null
          },
          "Iops": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        A request to create a new Amazon EC2 Elastic Block Storage (EBS)\n        volume.\n        </p>\n    "
      },
      "output": {
        "shape_name": "Volume",
        "type": "structure",
        "members": {
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of this volume.\n        </p>\n    ",
            "xmlname": "volumeId"
          },
          "Size": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        The size of this volume, in gigabytes.\n        </p>\n   ",
            "xmlname": "size"
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Optional snapshot from which this volume was created.\n        </p>\n\n    ",
            "xmlname": "snapshotId"
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Availability zone in which this volume was created.\n        </p>\n    ",
            "xmlname": "availabilityZone"
          },
          "State": {
            "shape_name": "VolumeState",
            "type": "string",
            "enum": [
              "creating",
              "available",
              "in-use",
              "deleting",
              "error"
            ],
            "documentation": "\n        <p>\n        State of this volume (e.g., creating, available).\n        </p>\n    ",
            "xmlname": "status"
          },
          "CreateTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        Timestamp when volume creation was initiated.\n        </p>\n    ",
            "xmlname": "createTime"
          },
          "Attachments": {
            "shape_name": "VolumeAttachmentList",
            "type": "list",
            "members": {
              "shape_name": "VolumeAttachment",
              "type": "structure",
              "members": {
                "VolumeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "volumeId"
                },
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "Device": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        How the device is exposed to the instance (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                  "xmlname": "device"
                },
                "State": {
                  "shape_name": "VolumeAttachmentState",
                  "type": "string",
                  "enum": [
                    "attaching",
                    "attached",
                    "detaching",
                    "detached"
                  ],
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "status"
                },
                "AttachTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        Timestamp when this attachment initiated.\n        </p>\n    ",
                  "xmlname": "attachTime"
                },
                "DeleteOnTermination": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n    `   <p>\n        Whether this volume will be deleted or not when the associated instance is\n        terminated.\n        </p>\n    ",
                  "xmlname": "deleteOnTermination"
                }
              },
              "documentation": "\n        <p>\n        Specifies the details of a how an EC2 EBS volume is attached to an instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Information on what this volume is attached to.\n        </p>\n    ",
            "xmlname": "attachmentSet"
          },
          "Tags": {
            "shape_name": "TagList",
            "type": "list",
            "members": {
              "shape_name": "Tag",
              "type": "structure",
              "members": {
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                  "xmlname": "key"
                },
                "Value": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                  "xmlname": "value"
                }
              },
              "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
              "xmlname": "item"
            },
            "documentation": "\n      <p>\n      A list of tags for the Volume.\n      </p>\n    ",
            "xmlname": "tagSet"
          },
          "VolumeType": {
            "shape_name": "VolumeType",
            "type": "string",
            "enum": [
              "standard",
              "io1"
            ],
            "documentation": null,
            "xmlname": "volumeType"
          },
          "Iops": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null,
            "xmlname": "iops"
          }
        },
        "documentation": "\n        <p>\n        The newly created EBS volume.\n        </p>\n    ",
        "xmlname": "volume"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Initializes an empty volume of a given size.\n        </p>\n    "
    },
    "CreateVpc": {
      "name": "CreateVpc",
      "input": {
        "shape_name": "CreateVpcRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "CidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        A valid CIDR block.\n        </p>\n    ",
            "required": true
          },
          "InstanceTenancy": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC. A value of default means instances can be launched with any tenancy; a value of dedicated means instances must be launched with tenancy as dedicated.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateVpcResult",
        "type": "structure",
        "members": {
          "Vpc": {
            "shape_name": "Vpc",
            "type": "structure",
            "members": {
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the VPC.\n        </p>\n    ",
                "xmlname": "vpcId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Describes the current state of the VPC.\n        The state of the subnet may be either\n        <code>pending</code> or\n        <code>available</code>.\n        </p>\n    ",
                "xmlname": "state"
              },
              "CidrBlock": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the CIDR block the VPC covers.\n        </p>\n    ",
                "xmlname": "cidrBlock"
              },
              "DhcpOptionsId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the set of DHCP options\n        associated with the VPC.\n        Contains a value of <code>default</code>\n        if the default options are associated with\n        the VPC.\n        </p>\n    ",
                "xmlname": "dhcpOptionsId"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the VPC.\n      </p>\n    ",
                "xmlname": "tagSet"
              },
              "InstanceTenancy": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC.\n        </p>\n    ",
                "xmlname": "instanceTenancy"
              },
              "IsDefault": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>\n\n        </p>\n    ",
                "xmlname": "isDefault"
              }
            },
            "documentation": "\n        <p>\n        Information about the VPC.\n        </p>\n    ",
            "xmlname": "vpc"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a VPC with the CIDR block you specify. The smallest VPC you can create uses a <code>/28</code> netmask\n        (16 IP addresses), and the largest uses a <code>/18</code> netmask (16,384 IP addresses). To help you decide\n        how big to make your VPC, go to the topic about creating VPCs in the Amazon Virtual Private Cloud\n        Developer Guide.\n        </p>\n        <p>\n        By default, each instance you launch in the VPC has the default DHCP options (the standard EC2 host\n        name, no domain name, no DNS server, no NTP server, and no NetBIOS server or node type).\n        </p>\n    "
    },
    "CreateVpnConnection": {
      "name": "CreateVpnConnection",
      "input": {
        "shape_name": "CreateVpnConnectionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Type": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The type of VPN connection.\n        </p>\n    ",
            "required": true
          },
          "CustomerGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the customer gateway.\n        </p>\n    ",
            "required": true
          },
          "VpnGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPN gateway.\n        </p>\n    ",
            "required": true
          },
          "Options": {
            "shape_name": "VpnConnectionOptionsSpecification",
            "type": "structure",
            "members": {
              "StaticRoutesOnly": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null
              }
            },
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateVpnConnectionResult",
        "type": "structure",
        "members": {
          "VpnConnection": {
            "shape_name": "VpnConnection",
            "type": "structure",
            "members": {
              "VpnConnectionId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the VPN gateway\n        at the VPC end of the VPN connection.\n        </p>\n    ",
                "xmlname": "vpnConnectionId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Describes the current state of the VPN connection.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                "xmlname": "state"
              },
              "CustomerGatewayConfiguration": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Contains configuration information in the native XML format\n        for the VPN connection's customer gateway.\n        </p>\n        <p>\n        This element is\n        always present in the CreateVpnConnection response;\n        however, it's present in the DescribeVpnConnections response\n        only if the VPN connection is in the\n        <code>pending</code>\n        or\n        <code>available</code>\n        state.\n        </p>\n    ",
                "xmlname": "customerGatewayConfiguration"
              },
              "Type": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the type of VPN connection.\n        </p>\n    ",
                "xmlname": "type"
              },
              "CustomerGatewayId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies ID of the customer gateway at the end\n        of the VPN connection.\n        </p>\n    ",
                "xmlname": "customerGatewayId"
              },
              "VpnGatewayId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specfies the ID of the VPN gateway at the\n        VPC end of the VPN connection.\n        </p>\n    ",
                "xmlname": "vpnGatewayId"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the VpnConnection.\n      </p>\n    ",
                "xmlname": "tagSet"
              },
              "VgwTelemetry": {
                "shape_name": "VgwTelemetryList",
                "type": "list",
                "members": {
                  "shape_name": "VgwTelemetry",
                  "type": "structure",
                  "members": {
                    "OutsideIpAddress": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "outsideIpAddress"
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "status"
                    },
                    "LastStatusChange": {
                      "shape_name": "DateTime",
                      "type": "timestamp",
                      "documentation": null,
                      "xmlname": "lastStatusChange"
                    },
                    "StatusMessage": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "statusMessage"
                    },
                    "AcceptedRouteCount": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null,
                      "xmlname": "acceptedRouteCount"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "vgwTelemetry"
              },
              "Options": {
                "shape_name": "VpnConnectionOptions",
                "type": "structure",
                "members": {
                  "StaticRoutesOnly": {
                    "shape_name": "Boolean",
                    "type": "boolean",
                    "documentation": null,
                    "xmlname": "staticRoutesOnly"
                  }
                },
                "documentation": null,
                "xmlname": "options"
              },
              "Routes": {
                "shape_name": "VpnStaticRouteList",
                "type": "list",
                "members": {
                  "shape_name": "VpnStaticRoute",
                  "type": "structure",
                  "members": {
                    "DestinationCidrBlock": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "destinationCidrBlock"
                    },
                    "Source": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "source"
                    },
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "state"
                    }
                  },
                  "documentation": null,
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "routes"
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "vpnConnection"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a new VPN connection between an existing VPN gateway and customer gateway. The only\n        supported connection type is ipsec.1.\n        </p>\n        <p>\n        The response includes information that you need to configure your customer gateway, in XML format.\n        We recommend you use the command line version of this operation (<code>ec2-create-vpn-connection</code>),\n        which takes an <code>-f</code> option (for format) and returns configuration information formatted as expected by\n        the vendor you specified, or in a generic, human readable format. For information about the command,\n        go to <code>ec2-create-vpn-connection</code> in the Amazon Virtual Private Cloud Command Line Reference.\n        </p>\n        <important>\n            <p>\n            We strongly recommend you use HTTPS when calling this operation because the response\n            contains sensitive cryptographic information for configuring your customer gateway.\n            </p>\n            <p>\n            If you decide to shut down your VPN connection for any reason and then create a new one, you must\n            re-configure your customer gateway with the new information returned from this call.\n            </p>\n        </important>\n    "
    },
    "CreateVpnConnectionRoute": {
      "name": "CreateVpnConnectionRoute",
      "input": {
        "shape_name": "CreateVpnConnectionRouteRequest",
        "type": "structure",
        "members": {
          "VpnConnectionId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "DestinationCidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "CreateVpnGateway": {
      "name": "CreateVpnGateway",
      "input": {
        "shape_name": "CreateVpnGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Type": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The type of VPN connection this VPN gateway supports.\n        </p>\n    ",
            "required": true
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Availability Zone in which to create the VPN gateway.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "CreateVpnGatewayResult",
        "type": "structure",
        "members": {
          "VpnGateway": {
            "shape_name": "VpnGateway",
            "type": "structure",
            "members": {
              "VpnGatewayId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the VPN gateway.\n        </p>\n    ",
                "xmlname": "vpnGatewayId"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Describes the current state of the VPN gateway.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                "xmlname": "state"
              },
              "Type": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the type of VPN connection the VPN gateway supports.\n        </p>\n    ",
                "xmlname": "type"
              },
              "AvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the Availability Zone where the VPN gateway was created.\n        </p>\n    ",
                "xmlname": "availabilityZone"
              },
              "VpcAttachments": {
                "shape_name": "VpcAttachmentList",
                "type": "list",
                "members": {
                  "shape_name": "VpcAttachment",
                  "type": "structure",
                  "members": {
                    "VpcId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n\n        </p>\n    ",
                      "xmlname": "vpcId"
                    },
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n\n        </p>\n    ",
                      "xmlname": "state"
                    }
                  },
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "item"
                },
                "documentation": "\n        <p>\n        Contains information about the VPCs attached to the VPN gateway.\n        </p>\n    ",
                "xmlname": "attachments"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": "\n      <p>\n      A list of tags for the VpnGateway.\n      </p>\n    ",
                "xmlname": "tagSet"
              }
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "vpnGateway"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a new VPN gateway. A VPN gateway is the VPC-side endpoint for your VPN connection. You\n        can create a VPN gateway before creating the VPC itself.\n        </p>\n    "
    },
    "DeactivateLicense": {
      "name": "DeactivateLicense",
      "input": {
        "shape_name": "DeactivateLicenseRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "LicenseId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the ID for the specific license to deactivate against.\n        </p>\n    ",
            "required": true
          },
          "Capacity": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Specifies the amount of capacity to deactivate against the license.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deactivates a specific number of licenses.\n        Deactivations can be done against a specific license ID\n        after they have persisted for at least a 90-day period.\n        </p>\n    "
    },
    "DeleteCustomerGateway": {
      "name": "DeleteCustomerGateway",
      "input": {
        "shape_name": "DeleteCustomerGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "CustomerGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the customer gateway to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a customer gateway. You must delete the VPN connection before deleting the customer\n        gateway.\n        </p>\n        <p>\n        You can have a single active customer gateway per AWS account (active means that you've created\n        a VPN connection with that customer gateway). AWS might delete any customer gateway you leave\n        inactive for an extended period of time.\n        </p>\n    "
    },
    "DeleteDhcpOptions": {
      "name": "DeleteDhcpOptions",
      "input": {
        "shape_name": "DeleteDhcpOptionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "DhcpOptionsId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the DHCP options set to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a set of DHCP options that you specify. Amazon VPC returns an error if the set of options\n        you specify is currently associated with a VPC. You can disassociate the set of options by associating\n        either a new set of options or the default options with the VPC.\n        </p>\n    "
    },
    "DeleteInternetGateway": {
      "name": "DeleteInternetGateway",
      "input": {
        "shape_name": "DeleteInternetGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InternetGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the Internet gateway to be deleted.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes an Internet gateway from your AWS account. The gateway must not be attached to a VPC.\n\t\tFor more information about your VPC and Internet gateway, go to Amazon Virtual Private Cloud\n\t\tUser Guide.\n        </p>\n    "
    },
    "DeleteKeyPair": {
      "name": "DeleteKeyPair",
      "input": {
        "shape_name": "DeleteKeyPairRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the Amazon EC2 key pair to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        Represents a request to delete an Amazon EC2 key pair.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DeleteKeyPair operation deletes a key pair.\n        </p>\n    "
    },
    "DeleteNetworkAcl": {
      "name": "DeleteNetworkAcl",
      "input": {
        "shape_name": "DeleteNetworkAclRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkAclId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the network ACL to be deleted.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a network ACL from a VPC. The ACL must not have any subnets associated with it. You can't\n\t\tdelete the default network ACL. For more information about network ACLs, go to Network ACLs in the\n\t\tAmazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "DeleteNetworkAclEntry": {
      "name": "DeleteNetworkAclEntry",
      "input": {
        "shape_name": "DeleteNetworkAclEntryRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkAclId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the network ACL.\n        </p>\n    ",
            "required": true
          },
          "RuleNumber": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Rule number for the entry to delete.\n        </p>\n    ",
            "required": true
          },
          "Egress": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n        Whether the rule to delete is an egress rule (<code>true</code>) or ingress rule (<code>false</code>).\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes an ingress or egress entry (i.e., rule) from a network ACL. For more information about\n\t\tnetwork ACLs, go to Network ACLs in the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "DeleteNetworkInterface": {
      "name": "DeleteNetworkInterface",
      "input": {
        "shape_name": "DeleteNetworkInterfaceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "DeletePlacementGroup": {
      "name": "DeletePlacementGroup",
      "input": {
        "shape_name": "DeletePlacementGroupRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the <code>PlacementGroup</code> to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a <a>PlacementGroup</a> from a user's account.\n        Terminate all Amazon EC2 instances in the placement group before deletion.\n        </p>\n    "
    },
    "DeleteRoute": {
      "name": "DeleteRoute",
      "input": {
        "shape_name": "DeleteRouteRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the route table where the route will be deleted.\n        </p>\n    ",
            "required": true
          },
          "DestinationCidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The CIDR range for the route you want to delete. The value you specify must exactly\n\t\tmatch the CIDR for the route you want to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a route from a route table in a VPC. For more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "DeleteRouteTable": {
      "name": "DeleteRouteTable",
      "input": {
        "shape_name": "DeleteRouteTableRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\t\tThe ID of the route table to be deleted.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n\t\tDeletes a route table from a VPC. The route table must not be associated with a subnet. You can't\n\t\tdelete the main route table. For more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n        </p>\n    "
    },
    "DeleteSecurityGroup": {
      "name": "DeleteSecurityGroup",
      "input": {
        "shape_name": "DeleteSecurityGroupRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the Amazon EC2 security group to delete.\n        </p>\n    "
          },
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the Amazon EC2 security group to delete.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        Represents a request to delete an Amazon EC2 security group.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DeleteSecurityGroup operation deletes a security group.\n        </p>\n\n        <note>\n            <p>\n            If you attempt to delete a security group that contains instances, a fault is\n            returned.\n            </p>\n            <p>\n            If you attempt to delete a security group that is referenced by another\n            security group, a fault is returned. For example, if security group B has a\n            rule that allows access from security group A, security group A cannot be\n            deleted until the allow rule is removed.\n            </p>\n        </note>\n    "
    },
    "DeleteSnapshot": {
      "name": "DeleteSnapshot",
      "input": {
        "shape_name": "DeleteSnapshotRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the snapshot to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        Represents a request to delete an EBS snapshot.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes the snapshot identified by <code>snapshotId</code>.\n        </p>\n    "
    },
    "DeleteSpotDatafeedSubscription": {
      "name": "DeleteSpotDatafeedSubscription",
      "input": {
        "shape_name": "DeleteSpotDatafeedSubscriptionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        Deletes the data feed for Spot Instances.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes the data feed for Spot Instances.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
    },
    "DeleteSubnet": {
      "name": "DeleteSubnet",
      "input": {
        "shape_name": "DeleteSubnetRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SubnetId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\t\tThe ID of the subnet you want to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a subnet from a VPC. You must terminate all running instances in the subnet before deleting it,\n        otherwise Amazon VPC returns an error.\n        </p>\n    "
    },
    "DeleteTags": {
      "name": "DeleteTags",
      "input": {
        "shape_name": "DeleteTagsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Resources": {
            "shape_name": "ResourceIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ResourceId"
            },
            "documentation": "\n    <p>\n    A list of one or more resource IDs.  This could be the ID of an AMI, an instance, an EBS volume, or snapshot, etc.\n    </p>\n   ",
            "required": true,
            "flattened": true
          },
          "Tags": {
            "shape_name": "TagList",
            "type": "list",
            "members": {
              "shape_name": "Tag",
              "type": "structure",
              "members": {
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   "
                },
                "Value": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   "
                }
              },
              "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
              "xmlname": "Tag"
            },
            "documentation": "\n    <p>\n    The tags to delete from the specified resources. Each tag item consists of a key-value pair.\n    </p>\n    <p>\n    If a tag is specified without a value, the tag and all of its values are deleted.\n    </p>\n   ",
            "flattened": true
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n    <p>\n    Deletes tags from the specified Amazon EC2 resources.\n    </p>\n   "
    },
    "DeleteVolume": {
      "name": "DeleteVolume",
      "input": {
        "shape_name": "DeleteVolumeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the EBS volume to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        Represents a request to delete an <i>Elastic Block Storage</i> (EBS) volume.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a  previously created volume. Once successfully deleted,\n        a new volume can be created with the same name.\n        </p>\n    "
    },
    "DeleteVpc": {
      "name": "DeleteVpc",
      "input": {
        "shape_name": "DeleteVpcRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\t\tThe ID of the VPC you want to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a VPC. You must detach or delete all gateways or other objects that are dependent on the\n\t\tVPC first. For example, you must terminate all running instances, delete all VPC security groups\n\t\t(except the default), delete all the route tables (except the default), etc.\n        </p>\n    "
    },
    "DeleteVpnConnection": {
      "name": "DeleteVpnConnection",
      "input": {
        "shape_name": "DeleteVpnConnectionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnConnectionId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPN connection to delete\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a VPN connection. Use this if you want to delete a VPC and all its associated components.\n        Another reason to use this operation is if you believe the tunnel credentials for your VPN connection\n        have been compromised. In that situation, you can delete the VPN connection and create a new one\n        that has new keys, without needing to delete the VPC or VPN gateway. If you create a new VPN\n        connection, you must reconfigure the customer gateway using the new configuration information\n        returned with the new VPN connection ID.\n        </p>\n        <p>\n        If you're deleting the VPC and all its associated parts, we recommend you detach the VPN gateway\n        from the VPC and delete the VPC before deleting the VPN connection.\n        </p>\n    "
    },
    "DeleteVpnConnectionRoute": {
      "name": "DeleteVpnConnectionRoute",
      "input": {
        "shape_name": "DeleteVpnConnectionRouteRequest",
        "type": "structure",
        "members": {
          "VpnConnectionId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "DestinationCidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "DeleteVpnGateway": {
      "name": "DeleteVpnGateway",
      "input": {
        "shape_name": "DeleteVpnGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPN gateway to delete.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Deletes a VPN gateway. Use this when you want to delete a VPC and all its associated components\n        because you no longer need them. We recommend that before you delete a VPN gateway, you detach\n        it from the VPC and delete the VPN connection. Note that you don't need to delete the VPN gateway if\n        you just want to delete and re-create the VPN connection between your VPC and data center.\n        </p>\n    "
    },
    "DeregisterImage": {
      "name": "DeregisterImage",
      "input": {
        "shape_name": "DeregisterImageRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the AMI to deregister.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to deregister an <i>Amazon Machine Image</i> (AMI).\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DeregisterImage operation deregisters an AMI. Once deregistered, instances\n        of the AMI can no longer be launched.\n        </p>\n    "
    },
    "DescribeAccountAttributes": {
      "name": "DescribeAccountAttributes",
      "input": {
        "shape_name": "DescribeAccountAttributesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AttributeNames": {
            "shape_name": "AccountAttributeNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "AttributeName"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeAccountAttributesResult",
        "type": "structure",
        "members": {
          "AccountAttributes": {
            "shape_name": "AccountAttributeList",
            "type": "list",
            "members": {
              "shape_name": "AccountAttribute",
              "type": "structure",
              "members": {
                "AttributeName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "attributeName"
                },
                "AttributeValues": {
                  "shape_name": "AccountAttributeValueList",
                  "type": "list",
                  "members": {
                    "shape_name": "AccountAttributeValue",
                    "type": "structure",
                    "members": {
                      "AttributeValue": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "attributeValue"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "attributeValueSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "accountAttributeSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeAddresses": {
      "name": "DescribeAddresses",
      "input": {
        "shape_name": "DescribeAddressesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "PublicIps": {
            "shape_name": "PublicIpStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "PublicIp"
            },
            "documentation": "\n        <p>\n        The optional list of Elastic IP addresses to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Addresses.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          },
          "AllocationIds": {
            "shape_name": "AllocationIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "AllocationId"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe a user's available Elastic IPs.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeAddressesResult",
        "type": "structure",
        "members": {
          "Addresses": {
            "shape_name": "AddressList",
            "type": "list",
            "members": {
              "shape_name": "Address",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "PublicIp": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "publicIp"
                },
                "AllocationId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "allocationId"
                },
                "AssociationId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "associationId"
                },
                "Domain": {
                  "shape_name": "DomainType",
                  "type": "string",
                  "enum": [
                    "vpc",
                    "standard"
                  ],
                  "documentation": null,
                  "xmlname": "domain"
                },
                "NetworkInterfaceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "networkInterfaceId"
                },
                "NetworkInterfaceOwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "networkInterfaceOwnerId"
                },
                "PrivateIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "privateIpAddress"
                }
              },
              "documentation": "\n        <p>\n\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of Elastic IPs.\n        </p>\n    ",
            "xmlname": "addressesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing an account's available Elastic IPs.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeAddresses operation lists elastic IP addresses assigned to your\n        account.\n        </p>\n    "
    },
    "DescribeAvailabilityZones": {
      "name": "DescribeAvailabilityZones",
      "input": {
        "shape_name": "DescribeAvailabilityZonesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ZoneNames": {
            "shape_name": "ZoneNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ZoneName"
            },
            "documentation": "\n        <p>\n        A list of the availability zone names to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for AvailabilityZones.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the Amazon EC2 availability zones in the current\n        region.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeAvailabilityZonesResult",
        "type": "structure",
        "members": {
          "AvailabilityZones": {
            "shape_name": "AvailabilityZoneList",
            "type": "list",
            "members": {
              "shape_name": "AvailabilityZone",
              "type": "structure",
              "members": {
                "ZoneName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Name of the Availability Zone.\n        </p>\n   ",
                  "xmlname": "zoneName"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        State of the Availability Zone.\n        </p>\n   ",
                  "xmlname": "zoneState"
                },
                "RegionName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Name of the region in which this zone resides.\n        </p>\n    ",
                  "xmlname": "regionName"
                },
                "Messages": {
                  "shape_name": "AvailabilityZoneMessageList",
                  "type": "list",
                  "members": {
                    "shape_name": "AvailabilityZoneMessage",
                    "type": "structure",
                    "members": {
                      "Message": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "message"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        A list of messages about the Availability Zone.\n        </p>\n    ",
                  "xmlname": "messageSet"
                }
              },
              "documentation": "\n        <p>\n        An EC2 availability zone, separate and fault tolerant from other\n        availability zones.\n        </p>\n   ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described Amazon EC2 availability zones.\n        </p>\n    ",
            "xmlname": "availabilityZoneInfo"
          }
        },
        "documentation": "\n        <p>\n        The result of describing the Amazon EC2 availability zones in the current\n        region.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeAvailabilityZones operation describes availability zones that are\n        currently available to the account and their states.\n        </p>\n        <p>\n         Availability zones are not the same across accounts. The availability zone\n        <code>us-east-1a</code> for account A is not necessarily the same as <code>us-east-1a</code> for account\n        B. Zone assignments are mapped independently for each account.\n        </p>\n    "
    },
    "DescribeBundleTasks": {
      "name": "DescribeBundleTasks",
      "input": {
        "shape_name": "DescribeBundleTasksRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "BundleIds": {
            "shape_name": "BundleIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "BundleId"
            },
            "documentation": "\n        <p>\n        The list of bundle task IDs to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for BundleTasks.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the bundle tasks for the user's account.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeBundleTasksResult",
        "type": "structure",
        "members": {
          "BundleTasks": {
            "shape_name": "BundleTaskList",
            "type": "list",
            "members": {
              "shape_name": "BundleTask",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Instance associated with this bundle task.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "BundleId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Unique identifier for this task.\n        </p>\n    ",
                  "xmlname": "bundleId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The state of this task.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "StartTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        The time this task started.\n        </p>\n    ",
                  "xmlname": "startTime"
                },
                "UpdateTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        The time of the most recent update for the task.\n        </p>\n    ",
                  "xmlname": "updateTime"
                },
                "Storage": {
                  "shape_name": "Storage",
                  "type": "structure",
                  "members": {
                    "S3": {
                      "shape_name": "S3Storage",
                      "type": "structure",
                      "members": {
                        "Bucket": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The bucket in which to store the AMI. You can specify a bucket that you\n        already own or a new bucket that Amazon EC2 creates on your\n        behalf.\n        </p>\n        <p>\n        If you specify a bucket that belongs to someone else, Amazon EC2 returns\n        an error.\n        </p>\n    ",
                          "xmlname": "bucket"
                        },
                        "Prefix": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The prefix to use when storing the AMI in S3.\n        </p>\n    ",
                          "xmlname": "prefix"
                        },
                        "AWSAccessKeyId": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The Access Key ID of the owner of the Amazon S3 bucket.\n        </p>\n    "
                        },
                        "UploadPolicy": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        A Base64-encoded Amazon S3 upload policy that gives Amazon EC2\n        permission to upload items into Amazon S3 on the user's behalf.\n        </p>\n    ",
                          "xmlname": "uploadPolicy"
                        },
                        "UploadPolicySignature": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The signature of the Base64 encoded JSON document.\n        </p>\n    ",
                          "xmlname": "uploadPolicySignature"
                        }
                      },
                      "documentation": "\n        <p>\n        The details of S3 storage for bundling a Windows instance.\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        Amazon S3 storage locations.\n        </p>\n    ",
                  "xmlname": "storage"
                },
                "Progress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The level of task completion, in percent (e.g., 20%).\n        </p>\n    ",
                  "xmlname": "progress"
                },
                "BundleTaskError": {
                  "shape_name": "BundleTaskError",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Error code.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Error message.\n        </p>\n    ",
                      "xmlname": "message"
                    }
                  },
                  "documentation": "\n        <p>\n        If the task fails, a description of the error.\n        </p>\n    ",
                  "xmlname": "error"
                }
              },
              "documentation": "\n        <p>\n        Represents a task to bundle an EC2 Windows instance into a new image.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described bundle tasks.\n        </p>\n    ",
            "xmlname": "bundleInstanceTasksSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing the bundle tasks for the user's account.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeBundleTasks operation describes in-progress\n        and recent bundle tasks. Complete and failed tasks are\n        removed from the list a short time after completion.\n        If no bundle ids are given, all bundle tasks are returned.\n        </p>\n    "
    },
    "DescribeConversionTasks": {
      "name": "DescribeConversionTasks",
      "input": {
        "shape_name": "DescribeConversionTasksRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": null,
            "flattened": true
          },
          "ConversionTaskIds": {
            "shape_name": "ConversionIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ConversionTaskId"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeConversionTasksResult",
        "type": "structure",
        "members": {
          "ConversionTasks": {
            "shape_name": "DescribeConversionTaskList",
            "type": "list",
            "members": {
              "shape_name": "ConversionTask",
              "type": "structure",
              "members": {
                "ConversionTaskId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "required": true,
                  "xmlname": "conversionTaskId"
                },
                "ExpirationTime": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "expirationTime"
                },
                "ImportInstance": {
                  "shape_name": "ImportInstanceTaskDetails",
                  "type": "structure",
                  "members": {
                    "Volumes": {
                      "shape_name": "ImportInstanceVolumeDetailSet",
                      "type": "list",
                      "members": {
                        "shape_name": "ImportInstanceVolumeDetailItem",
                        "type": "structure",
                        "members": {
                          "BytesConverted": {
                            "shape_name": "Long",
                            "type": "long",
                            "documentation": null,
                            "required": true,
                            "xmlname": "bytesConverted"
                          },
                          "AvailabilityZone": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "required": true,
                            "xmlname": "availabilityZone"
                          },
                          "Image": {
                            "shape_name": "DiskImageDescription",
                            "type": "structure",
                            "members": {
                              "Format": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": null,
                                "required": true,
                                "xmlname": "format"
                              },
                              "Size": {
                                "shape_name": "Long",
                                "type": "long",
                                "documentation": null,
                                "required": true,
                                "xmlname": "size"
                              },
                              "ImportManifestUrl": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": null,
                                "required": true,
                                "xmlname": "importManifestUrl"
                              },
                              "Checksum": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": null,
                                "xmlname": "checksum"
                              }
                            },
                            "documentation": null,
                            "required": true,
                            "xmlname": "image"
                          },
                          "Volume": {
                            "shape_name": "DiskImageVolumeDescription",
                            "type": "structure",
                            "members": {
                              "Size": {
                                "shape_name": "Long",
                                "type": "long",
                                "documentation": null,
                                "xmlname": "size"
                              },
                              "Id": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": null,
                                "required": true,
                                "xmlname": "id"
                              }
                            },
                            "documentation": null,
                            "required": true,
                            "xmlname": "volume"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "required": true,
                            "xmlname": "status"
                          },
                          "StatusMessage": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "statusMessage"
                          },
                          "Description": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "description"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "required": true,
                      "xmlname": "volumes"
                    },
                    "InstanceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceId"
                    },
                    "Platform": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "platform"
                    },
                    "Description": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "description"
                    }
                  },
                  "documentation": null,
                  "xmlname": "importInstance"
                },
                "ImportVolume": {
                  "shape_name": "ImportVolumeTaskDetails",
                  "type": "structure",
                  "members": {
                    "BytesConverted": {
                      "shape_name": "Long",
                      "type": "long",
                      "documentation": null,
                      "required": true,
                      "xmlname": "bytesConverted"
                    },
                    "AvailabilityZone": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "required": true,
                      "xmlname": "availabilityZone"
                    },
                    "Description": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "description"
                    },
                    "Image": {
                      "shape_name": "DiskImageDescription",
                      "type": "structure",
                      "members": {
                        "Format": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "format"
                        },
                        "Size": {
                          "shape_name": "Long",
                          "type": "long",
                          "documentation": null,
                          "required": true,
                          "xmlname": "size"
                        },
                        "ImportManifestUrl": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "importManifestUrl"
                        },
                        "Checksum": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "checksum"
                        }
                      },
                      "documentation": null,
                      "required": true,
                      "xmlname": "image"
                    },
                    "Volume": {
                      "shape_name": "DiskImageVolumeDescription",
                      "type": "structure",
                      "members": {
                        "Size": {
                          "shape_name": "Long",
                          "type": "long",
                          "documentation": null,
                          "xmlname": "size"
                        },
                        "Id": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "id"
                        }
                      },
                      "documentation": null,
                      "required": true,
                      "xmlname": "volume"
                    }
                  },
                  "documentation": null,
                  "xmlname": "importVolume"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "required": true,
                  "xmlname": "state"
                },
                "StatusMessage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "statusMessage"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "conversionTasks"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeCustomerGateways": {
      "name": "DescribeCustomerGateways",
      "input": {
        "shape_name": "DescribeCustomerGatewaysRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "CustomerGatewayIds": {
            "shape_name": "CustomerGatewayIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CustomerGatewayId"
            },
            "documentation": "\n        <p>\n        A set of one or more customer gateway IDs.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Customer Gateways.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeCustomerGatewaysResult",
        "type": "structure",
        "members": {
          "CustomerGateways": {
            "shape_name": "CustomerGatewayList",
            "type": "list",
            "members": {
              "shape_name": "CustomerGateway",
              "type": "structure",
              "members": {
                "CustomerGatewayId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the customer gateway.\n        </p>\n    ",
                  "xmlname": "customerGatewayId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Describes the current state of the customer gateway.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "Type": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the type of VPN connection the\n        customer gateway supports.\n        </p>\n    ",
                  "xmlname": "type"
                },
                "IpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Contains the Internet-routable IP address of the\n        customer gateway's outside interface.\n        </p>\n    ",
                  "xmlname": "ipAddress"
                },
                "BgpAsn": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the customer gateway's Border Gateway Protocol (BGP)\n        Autonomous System Number (ASN).\n        </p>\n    ",
                  "xmlname": "bgpAsn"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the CustomerGateway.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        The CustomerGateway data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "customerGatewaySet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Gives you information about your customer gateways. You can filter the results to return information\n        only about customer gateways that match criteria you specify. For example, you could ask to get\n        information about a particular customer gateway (or all) only if the gateway's state is pending or\n        available. You can specify multiple filters (e.g., the customer gateway has a particular IP address for\n        the Internet-routable external interface, and the gateway's state is pending or available). The result\n        includes information for a particular customer gateway only if the gateway matches all your filters. If\n        there's no match, no special message is returned; the response is simply empty. The following table\n        shows the available filters.\n        </p>\n    "
    },
    "DescribeDhcpOptions": {
      "name": "DescribeDhcpOptions",
      "input": {
        "shape_name": "DescribeDhcpOptionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "DhcpOptionsIds": {
            "shape_name": "DhcpOptionsIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "DhcpOptionsId"
            },
            "documentation": null,
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for DhcpOptions.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n   ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeDhcpOptionsResult",
        "type": "structure",
        "members": {
          "DhcpOptions": {
            "shape_name": "DhcpOptionsList",
            "type": "list",
            "members": {
              "shape_name": "DhcpOptions",
              "type": "structure",
              "members": {
                "DhcpOptionsId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the set of DHCP options.\n        </p>\n    ",
                  "xmlname": "dhcpOptionsId"
                },
                "DhcpConfigurations": {
                  "shape_name": "DhcpConfigurationList",
                  "type": "list",
                  "members": {
                    "shape_name": "DhcpConfiguration",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Contains the name of a DHCP option.\n        </p>\n    ",
                        "xmlname": "key"
                      },
                      "Values": {
                        "shape_name": "ValueStringList",
                        "type": "list",
                        "members": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        Contains a set of values for a DHCP option.\n        </p>\n    ",
                        "xmlname": "valueSet"
                      }
                    },
                    "documentation": "\n        <p>\n        The DhcpConfiguration data type\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Contains information about the set of DHCP options.\n        </p>\n    ",
                  "xmlname": "dhcpConfigurationSet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the DhcpOptions.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        The DhcpOptions data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "dhcpOptionsSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Gives you information about one or more sets of DHCP options. You can specify one or more DHCP\n        options set IDs, or no IDs (to describe all your sets of DHCP options). The returned information\n        consists of:\n        </p>\n        <ul>\n            <li>\n            The DHCP options set ID\n            </li>\n            <li>\n            The options\n            </li>\n        </ul>\n    "
    },
    "DescribeExportTasks": {
      "name": "DescribeExportTasks",
      "input": {
        "shape_name": "DescribeExportTasksRequest",
        "type": "structure",
        "members": {
          "ExportTaskIds": {
            "shape_name": "ExportTaskIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ExportTaskId"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeExportTasksResult",
        "type": "structure",
        "members": {
          "ExportTasks": {
            "shape_name": "ExportTaskList",
            "type": "list",
            "members": {
              "shape_name": "ExportTask",
              "type": "structure",
              "members": {
                "ExportTaskId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "exportTaskId"
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "description"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "state"
                },
                "StatusMessage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "statusMessage"
                },
                "InstanceExportDetails": {
                  "shape_name": "InstanceExportDetails",
                  "type": "structure",
                  "members": {
                    "InstanceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceId"
                    },
                    "TargetEnvironment": {
                      "shape_name": "ExportEnvironment",
                      "type": "string",
                      "enum": [
                        "citrix",
                        "vmware"
                      ],
                      "documentation": null,
                      "xmlname": "targetEnvironment"
                    }
                  },
                  "documentation": null,
                  "xmlname": "instanceExport"
                },
                "ExportToS3Task": {
                  "shape_name": "ExportToS3Task",
                  "type": "structure",
                  "members": {
                    "DiskImageFormat": {
                      "shape_name": "DiskImageFormat",
                      "type": "string",
                      "enum": [
                        "vmdk",
                        "vhd"
                      ],
                      "documentation": null,
                      "xmlname": "diskImageFormat"
                    },
                    "ContainerFormat": {
                      "shape_name": "ContainerFormat",
                      "type": "string",
                      "enum": [
                        "ova"
                      ],
                      "documentation": null,
                      "xmlname": "containerFormat"
                    },
                    "S3Bucket": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "s3Bucket"
                    },
                    "S3Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "s3Key"
                    }
                  },
                  "documentation": null,
                  "xmlname": "exportToS3"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "exportTaskSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeImageAttribute": {
      "name": "DescribeImageAttribute",
      "input": {
        "shape_name": "DescribeImageAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the AMI whose attribute is to be described.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the attribute to describe.\n        </p>\n        <p>\n        Available attribute names: <code>productCodes</code>, <code>kernel</code>,\n        <code>ramdisk</code>, <code>launchPermisson</code>, <code>blockDeviceMapping</code>\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe an Amazon Machine Image (AMI) attribute. Only\n        one attribute may be described per request.\n        </p>\n    "
      },
      "output": {
        "shape_name": "ImageAttribute",
        "type": "structure",
        "members": {
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the associated AMI.\n        </p>\n    ",
            "xmlname": "imageId"
          },
          "LaunchPermissions": {
            "shape_name": "LaunchPermissionList",
            "type": "list",
            "members": {
              "shape_name": "LaunchPermission",
              "type": "structure",
              "members": {
                "UserId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS user ID of the user involved in this launch permission.\n        </p>\n    ",
                  "xmlname": "userId"
                },
                "Group": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS group of the user involved in this launch permission.\n        </p>\n        <p>\n        Available groups: <code>all</code>\n        </p>\n    ",
                  "xmlname": "group"
                }
              },
              "documentation": "\n        <p>\n        Describes a permission to launch an Amazon Machine Image (AMI).\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Launch permissions for the associated AMI.\n        </p>\n    ",
            "xmlname": "launchPermission"
          },
          "ProductCodes": {
            "shape_name": "ProductCodeList",
            "type": "list",
            "members": {
              "shape_name": "ProductCode",
              "type": "structure",
              "members": {
                "ProductCodeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                  "xmlname": "productCode"
                },
                "ProductCodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "type"
                }
              },
              "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Product codes for the associated AMI.\n        </p>\n    ",
            "xmlname": "productCodes"
          },
          "KernelId": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        Kernel ID of the associated AMI.\n        </p>\n    ",
            "xmlname": "kernel"
          },
          "RamdiskId": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        Ramdisk ID of the associated AMI.\n        </p>\n    ",
            "xmlname": "ramdisk"
          },
          "Description": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        User-created description of the associated AMI.\n        </p>\n    ",
            "xmlname": "description"
          },
          "BlockDeviceMappings": {
            "shape_name": "BlockDeviceMappingList",
            "type": "list",
            "members": {
              "shape_name": "BlockDeviceMapping",
              "type": "structure",
              "members": {
                "VirtualName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    ",
                  "xmlname": "virtualName"
                },
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                  "xmlname": "deviceName"
                },
                "Ebs": {
                  "shape_name": "EbsBlockDevice",
                  "type": "structure",
                  "members": {
                    "SnapshotId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    ",
                      "xmlname": "snapshotId"
                    },
                    "VolumeSize": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
                      "xmlname": "volumeSize"
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                      "xmlname": "deleteOnTermination"
                    },
                    "VolumeType": {
                      "shape_name": "VolumeType",
                      "type": "string",
                      "enum": [
                        "standard",
                        "io1"
                      ],
                      "documentation": null,
                      "xmlname": "volumeType"
                    },
                    "Iops": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null,
                      "xmlname": "iops"
                    }
                  },
                  "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    ",
                  "xmlname": "ebs"
                },
                "NoDevice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    ",
                  "xmlname": "noDevice"
                }
              },
              "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Block device mappings for the associated AMI.\n        </p>\n    ",
            "xmlname": "blockDeviceMapping"
          }
        },
        "documentation": "\n        <p>\n        The described image attribute of the associated AMI.\n        </p>\n    ",
        "xmlname": "imageAttribute"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeImageAttribute operation returns information about an attribute of\n        an AMI. Only one attribute can be specified per call.\n        </p>\n    "
    },
    "DescribeImages": {
      "name": "DescribeImages",
      "input": {
        "shape_name": "DescribeImagesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageIds": {
            "shape_name": "ImageIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ImageId"
            },
            "documentation": "\n        <p>\n        An optional list of the AMI IDs to describe. If not specified, all AMIs\n        will be described.\n        </p>\n    ",
            "flattened": true
          },
          "Owners": {
            "shape_name": "OwnerStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "Owner"
            },
            "documentation": "\n        <p>\n          An optional list of owners by which to scope the described AMIs.\n          Valid values are:\n        </p>\n\n        <ul>\n          <li>\n            <code>self</code> : AMIs owned by you\n          </li>\n          <li>\n            <i>AWS account ID</i> : AMIs owned by this account ID\n          </li>\n          <li>\n            <code>aws-marketplace</code> : AMIs owned by the AWS Marketplace\n          </li>\n          <li>\n            <code>amazon</code> : AMIs owned by Amazon\n          </li>\n          <li>\n            <code>all</code> : Do not scope the AMIs returned by owner \n          </li>\n        </ul>\n        <p>\n          The values <code>self</code>, <code>aws-marketplace</code>, <code>amazon</code>, and <code>all</code> are literals.\n        </p>\n    ",
            "flattened": true
          },
          "ExecutableUsers": {
            "shape_name": "ExecutableByStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ExecutableBy"
            },
            "documentation": "\n      <p>\n        An optional list of users whose launch permissions will be used to\n        scope the described AMIs. Valid values are:\n      </p>\n      <ul>\n        <li>\n          <code>self</code> : AMIs for which you have explicit launch permissions\n        </li>\n        <li>\n          <code>AWS account ID</code> : AMIs for which this account ID has launch permissions\n        </li>\n        <li>\n          <code>all</code> : AMIs that have public launch permissions\n        </li>\n      </ul>\n        <p>\n          The values <code>self</code> and <code>all</code> are literals.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Images.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the available <i>Amazon Machine Images</i> (AMIs).\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeImagesResult",
        "type": "structure",
        "members": {
          "Images": {
            "shape_name": "ImageList",
            "type": "list",
            "members": {
              "shape_name": "Image",
              "type": "structure",
              "members": {
                "ImageId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of the AMI.\n        </p>\n    ",
                  "xmlname": "imageId"
                },
                "ImageLocation": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The location of the AMI.\n        </p>\n    ",
                  "xmlname": "imageLocation"
                },
                "State": {
                  "shape_name": "ImageState",
                  "type": "string",
                  "enum": [
                    "available",
                    "deregistered"
                  ],
                  "documentation": "\n        <p>\n        Current state of the AMI. If the operation returns available, the image is\n        successfully registered and available for launching.\n        If the operation returns deregistered, the image is deregistered and no\n        longer available for launching.\n        </p>\n    ",
                  "xmlname": "imageState"
                },
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        AWS Access Key ID of the image owner.\n        </p>\n    ",
                  "xmlname": "imageOwnerId"
                },
                "Public": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n        <p>\n        True if this image has public launch permissions. False if it only has\n        implicit and explicit launch permissions.\n        </p>\n    ",
                  "xmlname": "isPublic"
                },
                "ProductCodes": {
                  "shape_name": "ProductCodeList",
                  "type": "list",
                  "members": {
                    "shape_name": "ProductCode",
                    "type": "structure",
                    "members": {
                      "ProductCodeId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                        "xmlname": "productCode"
                      },
                      "ProductCodeType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "type"
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Product codes of the AMI.\n        </p>\n    ",
                  "xmlname": "productCodes"
                },
                "Architecture": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The architecture of the image.\n        </p>\n   ",
                  "xmlname": "architecture"
                },
                "ImageType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The type of image (machine, kernel, or ramdisk).\n        </p>\n   ",
                  "xmlname": "imageType"
                },
                "KernelId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The kernel associated with the image, if any. Only applicable for machine\n        images.\n        </p>\n   ",
                  "xmlname": "kernelId"
                },
                "RamdiskId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The RAM disk associated with the image, if any. Only applicable for\n        machine images.\n        </p>\n   ",
                  "xmlname": "ramdiskId"
                },
                "Platform": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The operating platform of the AMI.\n        </p>\n   ",
                  "xmlname": "platform"
                },
                "StateReason": {
                  "shape_name": "StateReason",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Reason code for the state change.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Descriptive message for the state change.\n        </p>\n    ",
                      "xmlname": "message"
                    }
                  },
                  "documentation": "\n        <p>\n        The reason for the state change.\n        </p>\n   ",
                  "xmlname": "stateReason"
                },
                "ImageOwnerAlias": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS account alias (e.g., \"amazon\", \"redhat\", \"self\", etc.) or AWS\n        account ID that owns the AMI.\n        </p>\n   ",
                  "xmlname": "imageOwnerAlias"
                },
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The name of the AMI that was provided during image creation.\n        </p>\n    ",
                  "xmlname": "name"
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The description of the AMI that was provided during image creation.\n        </p>\n    ",
                  "xmlname": "description"
                },
                "RootDeviceType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The root device type used by the AMI. The AMI can use an Amazon EBS or\n        instance store root device.\n        </p>\n    ",
                  "xmlname": "rootDeviceType"
                },
                "RootDeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The root device name (e.g., <code>/dev/sda1</code>).\n        </p>\n    ",
                  "xmlname": "rootDeviceName"
                },
                "BlockDeviceMappings": {
                  "shape_name": "BlockDeviceMappingList",
                  "type": "list",
                  "members": {
                    "shape_name": "BlockDeviceMapping",
                    "type": "structure",
                    "members": {
                      "VirtualName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    ",
                        "xmlname": "virtualName"
                      },
                      "DeviceName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                        "xmlname": "deviceName"
                      },
                      "Ebs": {
                        "shape_name": "EbsBlockDevice",
                        "type": "structure",
                        "members": {
                          "SnapshotId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    ",
                            "xmlname": "snapshotId"
                          },
                          "VolumeSize": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
                            "xmlname": "volumeSize"
                          },
                          "DeleteOnTermination": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                            "xmlname": "deleteOnTermination"
                          },
                          "VolumeType": {
                            "shape_name": "VolumeType",
                            "type": "string",
                            "enum": [
                              "standard",
                              "io1"
                            ],
                            "documentation": null,
                            "xmlname": "volumeType"
                          },
                          "Iops": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "iops"
                          }
                        },
                        "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    ",
                        "xmlname": "ebs"
                      },
                      "NoDevice": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    ",
                        "xmlname": "noDevice"
                      }
                    },
                    "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Specifies how block devices are exposed to the instance.\n        </p>\n    ",
                  "xmlname": "blockDeviceMapping"
                },
                "VirtualizationType": {
                  "shape_name": "VirtualizationType",
                  "type": "string",
                  "enum": [
                    "hvm",
                    "paravirtual"
                  ],
                  "documentation": null,
                  "xmlname": "virtualizationType"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the Image.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "Hypervisor": {
                  "shape_name": "HypervisorType",
                  "type": "string",
                  "enum": [
                    "ovm",
                    "xen"
                  ],
                  "documentation": null,
                  "xmlname": "hypervisor"
                }
              },
              "documentation": "\n        <p>\n        Represents an <i>Amazon Machine Image</i> (AMI) that can be run on an Amazon EC2\n        instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of the described AMIs.\n        </p>\n    ",
            "xmlname": "imagesSet"
          }
        },
        "documentation": "\n        <p>\n          The result of describing <i>Amazon Machine Images</i> (AMIs).\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeImages operation returns information about AMIs, AKIs, and ARIs\n        available to the user. Information returned includes image type, product codes,\n        architecture, and kernel and RAM disk IDs. Images available to the user include\n        public images available for any user to launch, private images owned by the\n        user making the request, and private images owned by other users for which the\n        user has explicit launch permissions.\n        </p>\n        <p>\n        Launch permissions fall into three categories:\n        </p>\n        <ul>\n            <li>\n            <b>Public:</b>\n            The owner of the AMI granted launch permissions for the AMI\n            to the all group. All users have launch permissions for these AMIs.\n            </li>\n            <li>\n            <b>Explicit:</b>\n            The owner of the AMI granted launch permissions to a specific user.\n            </li>\n            <li>\n            <b>Implicit:</b>\n            A user has implicit launch permissions for all AMIs he or she owns.\n            </li>\n        </ul>\n        <p>\n        The list of AMIs returned can be modified by specifying AMI IDs, AMI owners, or\n        users with launch permissions. If no options are specified, Amazon EC2 returns\n        all AMIs for which the user has launch permissions.\n        </p>\n        <p>\n        If you specify one or more AMI IDs, only AMIs that have the specified IDs are\n        returned. If you specify an invalid AMI ID, a fault is returned. If you specify\n        an AMI ID for which you do not have access, it will not be included in the\n        returned results.\n        </p>\n        <p>\n        If you specify one or more AMI owners, only AMIs from the specified owners and\n        for which you have access are returned. The results can include the account IDs\n        of the specified owners, amazon for AMIs owned by Amazon or self for AMIs that\n        you own.\n        </p>\n        <p>\n        If you specify a list of executable users, only users that have launch\n        permissions for the AMIs are returned. You can specify account IDs (if you own\n        the AMI(s)), self for AMIs for which you own or have explicit permissions, or\n        all for public AMIs.\n        </p>\n        <note>\n        Deregistered images are included in the returned results for an unspecified\n        interval after deregistration.\n        </note>\n    "
    },
    "DescribeInstanceAttribute": {
      "name": "DescribeInstanceAttribute",
      "input": {
        "shape_name": "DescribeInstanceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance whose instance attribute is being described.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "InstanceAttributeName",
            "type": "string",
            "enum": [
              "instanceType",
              "kernel",
              "ramdisk",
              "userData",
              "disableApiTermination",
              "instanceInitiatedShutdownBehavior",
              "rootDeviceName",
              "blockDeviceMapping",
              "productCodes",
              "sourceDestCheck",
              "groupSet",
              "ebsOptimized"
            ],
            "documentation": "\n        <p>\n        The name of the attribute to describe.\n        </p>\n        <p>\n\t\tAvailable attribute names: <code>instanceType</code>, <code>kernel</code>, <code>ramdisk</code>,\n\t\t<code>userData</code>, <code>disableApiTermination</code>, <code>instanceInitiatedShutdownBehavior</code>,\n\t\t<code>rootDeviceName</code>, <code>blockDeviceMapping</code>\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe an attribute of one of a user's EC2 instances.\n        Only one attribute can be specified per call.\n        </p>\n    "
      },
      "output": {
        "shape_name": "InstanceAttribute",
        "type": "structure",
        "members": {
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the associated instance.\n        </p>\n    ",
            "xmlname": "instanceId"
          },
          "InstanceType": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        The instance type (e.g., <code>m1.small</code>, <code>c1.medium</code>, <code>m2.2xlarge</code>, and so on).\n        </p>\n    ",
            "xmlname": "instanceType"
          },
          "KernelId": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        The kernel ID of the associated instance.\n        </p>\n    ",
            "xmlname": "kernel"
          },
          "RamdiskId": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        The ramdisk ID of the associated instance.\n        </p>\n    ",
            "xmlname": "ramdisk"
          },
          "UserData": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        MIME, Base64-encoded user data.\n        </p>\n    ",
            "xmlname": "userData"
          },
          "DisableApiTermination": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        Whether this instance can be terminated. You must modify this attribute\n        before you can terminate any \"locked\" instances.\n        </p>\n    ",
            "xmlname": "disableApiTermination"
          },
          "InstanceInitiatedShutdownBehavior": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        Whether this instance's Amazon EBS volumes are deleted when the instance is\n        shut down.\n        </p>\n    ",
            "xmlname": "instanceInitiatedShutdownBehavior"
          },
          "RootDeviceName": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "\n        <p>\n        The root device name (e.g., <code>/dev/sda1</code>).\n        </p>\n    ",
            "xmlname": "rootDeviceName"
          },
          "BlockDeviceMappings": {
            "shape_name": "InstanceBlockDeviceMappingList",
            "type": "list",
            "members": {
              "shape_name": "InstanceBlockDeviceMapping",
              "type": "structure",
              "members": {
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The device name (e.g., <code>/dev/sdh</code>) at which the block device is exposed on\n        the instance.\n        </p>\n    ",
                  "xmlname": "deviceName"
                },
                "Ebs": {
                  "shape_name": "EbsInstanceBlockDevice",
                  "type": "structure",
                  "members": {
                    "VolumeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the EBS volume.\n        </p>\n    ",
                      "xmlname": "volumeId"
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The status of the EBS volume.\n        </p>\n    ",
                      "xmlname": "status"
                    },
                    "AttachTime": {
                      "shape_name": "DateTime",
                      "type": "timestamp",
                      "documentation": "\n        <p>\n        The time at which the EBS volume was attached to the associated instance.\n        </p>\n    ",
                      "xmlname": "attachTime"
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                      "xmlname": "deleteOnTermination"
                    }
                  },
                  "documentation": "\n        <p>\n        The optional EBS device mapped to the specified device name.\n        </p>\n    ",
                  "xmlname": "ebs"
                }
              },
              "documentation": "\n        <p>\n        Describes how block devices are mapped on an Amazon EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        How block devices are exposed to this instance. Each mapping is made up\n        of a virtualName and a deviceName.\n        </p>\n    ",
            "xmlname": "blockDeviceMapping"
          },
          "ProductCodes": {
            "shape_name": "ProductCodeList",
            "type": "list",
            "members": {
              "shape_name": "ProductCode",
              "type": "structure",
              "members": {
                "ProductCodeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                  "xmlname": "productCode"
                },
                "ProductCodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "type"
                }
              },
              "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "productCodes"
          },
          "EbsOptimized": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "Boolean value",
            "xmlname": "ebsOptimized"
          }
        },
        "documentation": "\n        <p>\n        The described instance attribute.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Returns information about an attribute of an instance.\n        Only one attribute can be specified per call.\n        </p>\n    "
    },
    "DescribeInstanceStatus": {
      "name": "DescribeInstanceStatus",
      "input": {
        "shape_name": "DescribeInstanceStatusRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n   The list of instance IDs. If not specified, all instances are described.\n   ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n   The list of filters to limit returned results.\n   ",
            "flattened": true
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n   A string specifying the next paginated set of results to return.\n   "
          },
          "MaxResults": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n   The maximum number of paginated instance items per response.\n   "
          },
          "IncludeAllInstances": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeInstanceStatusResult",
        "type": "structure",
        "members": {
          "InstanceStatuses": {
            "shape_name": "InstanceStatusList",
            "type": "list",
            "members": {
              "shape_name": "InstanceStatus",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n     The ID of the Amazon EC2 instance.\n   ",
                  "xmlname": "instanceId"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n     The Amazon EC2 instance's availability zone.\n   ",
                  "xmlname": "availabilityZone"
                },
                "Events": {
                  "shape_name": "InstanceStatusEventList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceStatusEvent",
                    "type": "structure",
                    "members": {
                      "Code": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n     The associated code of the event.\n     Valid values: instance-reboot, system-reboot, instance-retirement\n   ",
                        "xmlname": "code"
                      },
                      "Description": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n     A description of the event.\n   ",
                        "xmlname": "description"
                      },
                      "NotBefore": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": "\n     The earliest scheduled start time for the event.\n   ",
                        "xmlname": "notBefore"
                      },
                      "NotAfter": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": "\n     The latest scheduled end time for the event.\n   ",
                        "xmlname": "notAfter"
                      }
                    },
                    "documentation": "\n     Represents an event that affects the status of an Amazon EC2 instance.\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n     Events that affect the status of the associated Amazon EC2 instance.\n   ",
                  "xmlname": "eventsSet"
                },
                "InstanceState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        Represents the state of an Amazon EC2 instance.\n        </p>\n    ",
                  "xmlname": "instanceState"
                },
                "SystemStatus": {
                  "shape_name": "InstanceStatusSummary",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "status"
                    },
                    "Details": {
                      "shape_name": "InstanceStatusDetailsList",
                      "type": "list",
                      "members": {
                        "shape_name": "InstanceStatusDetails",
                        "type": "structure",
                        "members": {
                          "Name": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "name"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "status"
                          },
                          "ImpairedSince": {
                            "shape_name": "DateTime",
                            "type": "timestamp",
                            "documentation": null,
                            "xmlname": "impairedSince"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "details"
                    }
                  },
                  "documentation": null,
                  "xmlname": "systemStatus"
                },
                "InstanceStatus": {
                  "shape_name": "InstanceStatusSummary",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "status"
                    },
                    "Details": {
                      "shape_name": "InstanceStatusDetailsList",
                      "type": "list",
                      "members": {
                        "shape_name": "InstanceStatusDetails",
                        "type": "structure",
                        "members": {
                          "Name": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "name"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "status"
                          },
                          "ImpairedSince": {
                            "shape_name": "DateTime",
                            "type": "timestamp",
                            "documentation": null,
                            "xmlname": "impairedSince"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "details"
                    }
                  },
                  "documentation": null,
                  "xmlname": "instanceStatus"
                }
              },
              "documentation": "\n     Represents the status of an Amazon EC2 instance.\n   ",
              "xmlname": "item"
            },
            "documentation": "\n   Collection of instance statuses describing the state of the requested instances.\n   ",
            "xmlname": "instanceStatusSet"
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n   A string specifying the next paginated set of results to return.\n   ",
            "xmlname": "nextToken"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n   <p>\n   Describes the status of an Amazon Elastic Compute Cloud (Amazon EC2) instance. Instance status provides information about two types of scheduled events for an instance that may require your attention:\n   </p>\n   <ul>\n   \t <li>\n\t\tScheduled Reboot: When Amazon EC2 determines that an instance must be rebooted, the instance's status will return one of two event codes: <code>system-reboot</code> or <code>instance-reboot</code>. System reboot commonly occurs if certain maintenance or upgrade operations require a reboot of the underlying host that supports an instance. Instance reboot commonly occurs if the instance must be rebooted, rather than the underlying host. Rebooting events include a scheduled start and end time.\n     </li>\n     <li>\n\t\tScheduled Retirement: When Amazon EC2 determines that an instance must be shut down, the instance's status will return an event code called <code>instance-retirement</code>. Retirement commonly occurs when the underlying host is degraded and must be replaced. Retirement events include a scheduled start and end time. You're also notified by email if one of your instances is set to retiring. The email message indicates when your instance will be permanently retired.\n     </li>\n   </ul>\n   <p>\n\tIf your instance is permanently retired, it will not be restarted. You can avoid retirement by manually restarting your instance when its event code is <code>instance-retirement</code>. This ensures that your instance is started on a healthy host.\n   </p>\n   <p>\n\t<code>DescribeInstanceStatus</code> returns information only for instances in the running state.\n   </p>\n   <p>\n\tYou can filter the results to return information only about instances that match criteria you specify. For example, you could get information about instances in a specific Availability Zone. You can specify multiple values for a filter (e.g., more than one Availability Zone). An instance must match at least one of the specified values for it to be included in the results.\n   </p>\n   <p>\n\tYou can specify multiple filters. An instance must match all the filters for it to be included in the results. If there's no match, no special message is returned; the response is simply empty.\n   </p>\n   <p>\n\tYou can use wildcards with the filter values: <code>*</code> matches zero or more characters, and <code>?</code> matches exactly one character. You can escape special characters using a backslash before the character. For example, a value of <code>\\*amazon\\?\\\\</code> searches for the literal string <code>*amazon?\\</code>.\n   </p>\n   <p>\n   The following filters are available:\n   </p>\n   <ul>\n     <li>\n       <code>availability-zone</code> - Filter on an instance's availability zone.\n     </li>\n     <li>\n       <code>instance-state-name</code> - Filter on the intended state of the instance, e.g., running.\n     </li>\n     <li>\n       <code>instance-state-code</code> - Filter on the intended state code of the instance, e.g., 16.\n     </li>\n   </ul>\n   "
    },
    "DescribeInstances": {
      "name": "DescribeInstances",
      "input": {
        "shape_name": "DescribeInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        An optional list of the instances to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Instances.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/index.html?ApiReference-query-DescribeInstances.html\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the Amazon EC2 instances in a user's account.\n        </p>\n        <p>\n        If you specify one or more instance IDs, Amazon EC2 returns information\n        for those instances.\n        If you do not specify instance IDs, Amazon EC2 returns information for\n        all relevant instances.\n        If you specify an invalid instance ID, a fault is returned.\n        If you specify an instance that you do not own, it will not be included\n        in the returned results.\n        </p>\n        <p>\n        Recently terminated instances might appear in the returned results.\n\n        The interval within which this could occur is usually less than one hour\n        from the time the instance is terminated.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeInstancesResult",
        "type": "structure",
        "members": {
          "Reservations": {
            "shape_name": "ReservationList",
            "type": "list",
            "members": {
              "shape_name": "Reservation",
              "type": "structure",
              "members": {
                "ReservationId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of this reservation.\n        </p>\n    ",
                  "xmlname": "reservationId"
                },
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS Access Key ID of the user who owns the reservation.\n        </p>\n    ",
                  "xmlname": "ownerId"
                },
                "RequesterId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of the user who requested the instances in this\n        reservation.\n        </p>\n    ",
                  "xmlname": "requesterId"
                },
                "Groups": {
                  "shape_name": "GroupIdentifierList",
                  "type": "list",
                  "members": {
                    "shape_name": "GroupIdentifier",
                    "type": "structure",
                    "members": {
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "groupName"
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "groupId"
                      }
                    },
                    "documentation": "\n        <p>\n\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        The list of security groups requested for the instances in this\n        reservation.\n        </p>\n    ",
                  "xmlname": "groupSet"
                },
                "Instances": {
                  "shape_name": "InstanceList",
                  "type": "list",
                  "members": {
                    "shape_name": "Instance",
                    "type": "structure",
                    "members": {
                      "InstanceId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Unique ID of the instance launched.\n        </p>\n    ",
                        "xmlname": "instanceId"
                      },
                      "ImageId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Image ID of the AMI used to launch the instance.\n        </p>\n    ",
                        "xmlname": "imageId"
                      },
                      "State": {
                        "shape_name": "InstanceState",
                        "type": "structure",
                        "members": {
                          "Code": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                            "xmlname": "code"
                          },
                          "Name": {
                            "shape_name": "InstanceStateName",
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "shutting-down",
                              "terminated",
                              "stopping",
                              "stopped"
                            ],
                            "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                            "xmlname": "name"
                          }
                        },
                        "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                        "xmlname": "instanceState"
                      },
                      "PrivateDnsName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The private DNS name assigned to the instance. This DNS name can only be used inside the\n        Amazon EC2 network. This element remains empty until the instance enters a running state.\n        </p>\n    ",
                        "xmlname": "privateDnsName"
                      },
                      "PublicDnsName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The public DNS name assigned to the instance. This DNS name is contactable from outside\n        the Amazon EC2 network. This element remains empty until the instance enters a running state.\n        </p>\n    ",
                        "xmlname": "dnsName"
                      },
                      "StateTransitionReason": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Reason for the most recent state transition. This might be an empty string.\n        </p>\n    ",
                        "xmlname": "reason"
                      },
                      "KeyName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        If this instance was launched with an associated key pair, this displays the key pair name.\n        </p>\n    ",
                        "xmlname": "keyName"
                      },
                      "AmiLaunchIndex": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        The AMI launch index, which can be used to find this instance within the launch group.\n        </p>\n    ",
                        "xmlname": "amiLaunchIndex"
                      },
                      "ProductCodes": {
                        "shape_name": "ProductCodeList",
                        "type": "list",
                        "members": {
                          "shape_name": "ProductCode",
                          "type": "structure",
                          "members": {
                            "ProductCodeId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                              "xmlname": "productCode"
                            },
                            "ProductCodeType": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "type"
                            }
                          },
                          "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        Product codes attached to this instance.\n        </p>\n    ",
                        "xmlname": "productCodes"
                      },
                      "InstanceType": {
                        "shape_name": "InstanceType",
                        "type": "string",
                        "enum": [
                          "t1.micro",
                          "m1.small",
                          "m1.medium",
                          "m1.large",
                          "m1.xlarge",
                          "m2.xlarge",
                          "m2.2xlarge",
                          "m2.4xlarge",
                          "m3.xlarge",
                          "m3.2xlarge",
                          "c1.medium",
                          "c1.xlarge",
                          "hi1.4xlarge",
                          "hs1.8xlarge",
                          "cc1.4xlarge",
                          "cc2.8xlarge",
                          "cg1.4xlarge",
                          "cr1.8xlarge"
                        ],
                        "documentation": "\n        <p>\n        The instance type. For more information on instance types, please see\n        the\n        <a href=\"http://docs.amazonwebservices.com/AWSEC2/2009-07-15/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide</a>.\n        </p>\n    ",
                        "xmlname": "instanceType"
                      },
                      "LaunchTime": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": "\n        <p>\n        The time this instance launched.\n        </p>\n    ",
                        "xmlname": "launchTime"
                      },
                      "Placement": {
                        "shape_name": "Placement",
                        "type": "structure",
                        "members": {
                          "AvailabilityZone": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    ",
                            "xmlname": "availabilityZone"
                          },
                          "GroupName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    ",
                            "xmlname": "groupName"
                          },
                          "Tenancy": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC. A value of default means instances can be launched with any tenancy; a value of dedicated means all instances launched into the VPC will be launched as dedicated tenancy regardless of the tenancy assigned to the instance at launch.\n        </p>\n    ",
                            "xmlname": "tenancy"
                          }
                        },
                        "documentation": "\n        <p>\n        The location where this instance launched.\n        </p>\n    ",
                        "xmlname": "placement"
                      },
                      "KernelId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Kernel associated with this instance.\n        </p>\n    ",
                        "xmlname": "kernelId"
                      },
                      "RamdiskId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        RAM disk associated with this instance.\n        </p>\n   ",
                        "xmlname": "ramdiskId"
                      },
                      "Platform": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Platform of the instance (e.g., Windows).\n        </p>\n   ",
                        "xmlname": "platform"
                      },
                      "Monitoring": {
                        "shape_name": "Monitoring",
                        "type": "structure",
                        "members": {
                          "State": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The state of monitoring on an Amazon EC2 instance (ex: enabled,\n        disabled).\n        </p>\n    ",
                            "xmlname": "state"
                          }
                        },
                        "documentation": "\n        <p>\n        Monitoring status for this instance.\n        </p>\n    ",
                        "xmlname": "monitoring"
                      },
                      "SubnetId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the Amazon VPC subnet ID in which the instance is running.\n        </p>\n    ",
                        "xmlname": "subnetId"
                      },
                      "VpcId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the Amazon VPC in which the instance is running.\n        </p>\n    ",
                        "xmlname": "vpcId"
                      },
                      "PrivateIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the private IP address that is assigned to the instance (Amazon VPC).\n        </p>\n    ",
                        "xmlname": "privateIpAddress"
                      },
                      "PublicIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Specifies the IP address of the instance.\n        </p>\n    ",
                        "xmlname": "ipAddress"
                      },
                      "StateReason": {
                        "shape_name": "StateReason",
                        "type": "structure",
                        "members": {
                          "Code": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Reason code for the state change.\n        </p>\n    ",
                            "xmlname": "code"
                          },
                          "Message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Descriptive message for the state change.\n        </p>\n    ",
                            "xmlname": "message"
                          }
                        },
                        "documentation": "\n        <p>\n        The reason for the state change.\n        </p>\n    ",
                        "xmlname": "stateReason"
                      },
                      "Architecture": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The architecture of this instance.\n        </p>\n    ",
                        "xmlname": "architecture"
                      },
                      "RootDeviceType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The root device type used by the AMI. The AMI can use an Amazon EBS or\n        instance store root device.\n        </p>\n    ",
                        "xmlname": "rootDeviceType"
                      },
                      "RootDeviceName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The root device name (e.g., <code>/dev/sda1</code>).\n        </p>\n    ",
                        "xmlname": "rootDeviceName"
                      },
                      "BlockDeviceMappings": {
                        "shape_name": "InstanceBlockDeviceMappingList",
                        "type": "list",
                        "members": {
                          "shape_name": "InstanceBlockDeviceMapping",
                          "type": "structure",
                          "members": {
                            "DeviceName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The device name (e.g., <code>/dev/sdh</code>) at which the block device is exposed on\n        the instance.\n        </p>\n    ",
                              "xmlname": "deviceName"
                            },
                            "Ebs": {
                              "shape_name": "EbsInstanceBlockDevice",
                              "type": "structure",
                              "members": {
                                "VolumeId": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": "\n        <p>\n        The ID of the EBS volume.\n        </p>\n    ",
                                  "xmlname": "volumeId"
                                },
                                "Status": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": "\n        <p>\n        The status of the EBS volume.\n        </p>\n    ",
                                  "xmlname": "status"
                                },
                                "AttachTime": {
                                  "shape_name": "DateTime",
                                  "type": "timestamp",
                                  "documentation": "\n        <p>\n        The time at which the EBS volume was attached to the associated instance.\n        </p>\n    ",
                                  "xmlname": "attachTime"
                                },
                                "DeleteOnTermination": {
                                  "shape_name": "Boolean",
                                  "type": "boolean",
                                  "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                                  "xmlname": "deleteOnTermination"
                                }
                              },
                              "documentation": "\n        <p>\n        The optional EBS device mapped to the specified device name.\n        </p>\n    ",
                              "xmlname": "ebs"
                            }
                          },
                          "documentation": "\n        <p>\n        Describes how block devices are mapped on an Amazon EC2 instance.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        Block device mapping set.\n        </p>\n    ",
                        "xmlname": "blockDeviceMapping"
                      },
                      "VirtualizationType": {
                        "shape_name": "VirtualizationType",
                        "type": "string",
                        "enum": [
                          "hvm",
                          "paravirtual"
                        ],
                        "documentation": null,
                        "xmlname": "virtualizationType"
                      },
                      "InstanceLifecycle": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "instanceLifecycle"
                      },
                      "SpotInstanceRequestId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "spotInstanceRequestId"
                      },
                      "License": {
                        "shape_name": "InstanceLicense",
                        "type": "structure",
                        "members": {
                          "Pool": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The license pool from which this license was used (ex: <code>'windows'</code>).\n        </p>\n    ",
                            "xmlname": "pool"
                          }
                        },
                        "documentation": "\n        <p>\n        Represents an active license in use and attached to an Amazon EC2 instance.\n        </p>\n    ",
                        "xmlname": "license"
                      },
                      "ClientToken": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "clientToken"
                      },
                      "Tags": {
                        "shape_name": "TagList",
                        "type": "list",
                        "members": {
                          "shape_name": "Tag",
                          "type": "structure",
                          "members": {
                            "Key": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                              "xmlname": "key"
                            },
                            "Value": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                              "xmlname": "value"
                            }
                          },
                          "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                          "xmlname": "item"
                        },
                        "documentation": "\n      <p>\n      A list of tags for the Instance.\n      </p>\n    ",
                        "xmlname": "tagSet"
                      },
                      "SecurityGroups": {
                        "shape_name": "GroupIdentifierList",
                        "type": "list",
                        "members": {
                          "shape_name": "GroupIdentifier",
                          "type": "structure",
                          "members": {
                            "GroupName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n\n        </p>\n    ",
                              "xmlname": "groupName"
                            },
                            "GroupId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "groupId"
                            }
                          },
                          "documentation": "\n        <p>\n\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": null,
                        "xmlname": "groupSet"
                      },
                      "SourceDestCheck": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "sourceDestCheck"
                      },
                      "Hypervisor": {
                        "shape_name": "HypervisorType",
                        "type": "string",
                        "enum": [
                          "ovm",
                          "xen"
                        ],
                        "documentation": null,
                        "xmlname": "hypervisor"
                      },
                      "NetworkInterfaces": {
                        "shape_name": "InstanceNetworkInterfaceList",
                        "type": "list",
                        "members": {
                          "shape_name": "InstanceNetworkInterface",
                          "type": "structure",
                          "members": {
                            "NetworkInterfaceId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "networkInterfaceId"
                            },
                            "SubnetId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "subnetId"
                            },
                            "VpcId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "vpcId"
                            },
                            "Description": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "description"
                            },
                            "OwnerId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "ownerId"
                            },
                            "Status": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "status"
                            },
                            "PrivateIpAddress": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "privateIpAddress"
                            },
                            "PrivateDnsName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "privateDnsName"
                            },
                            "SourceDestCheck": {
                              "shape_name": "Boolean",
                              "type": "boolean",
                              "documentation": null,
                              "xmlname": "sourceDestCheck"
                            },
                            "Groups": {
                              "shape_name": "GroupIdentifierList",
                              "type": "list",
                              "members": {
                                "shape_name": "GroupIdentifier",
                                "type": "structure",
                                "members": {
                                  "GroupName": {
                                    "shape_name": "String",
                                    "type": "string",
                                    "documentation": "\n        <p>\n\n        </p>\n    ",
                                    "xmlname": "groupName"
                                  },
                                  "GroupId": {
                                    "shape_name": "String",
                                    "type": "string",
                                    "documentation": null,
                                    "xmlname": "groupId"
                                  }
                                },
                                "documentation": "\n        <p>\n\n        </p>\n    ",
                                "xmlname": "item"
                              },
                              "documentation": null,
                              "xmlname": "groupSet"
                            },
                            "Attachment": {
                              "shape_name": "InstanceNetworkInterfaceAttachment",
                              "type": "structure",
                              "members": {
                                "AttachmentId": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "attachmentId"
                                },
                                "DeviceIndex": {
                                  "shape_name": "Integer",
                                  "type": "integer",
                                  "documentation": null,
                                  "xmlname": "deviceIndex"
                                },
                                "Status": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "status"
                                },
                                "AttachTime": {
                                  "shape_name": "DateTime",
                                  "type": "timestamp",
                                  "documentation": null,
                                  "xmlname": "attachTime"
                                },
                                "DeleteOnTermination": {
                                  "shape_name": "Boolean",
                                  "type": "boolean",
                                  "documentation": null,
                                  "xmlname": "deleteOnTermination"
                                }
                              },
                              "documentation": null,
                              "xmlname": "attachment"
                            },
                            "Association": {
                              "shape_name": "InstanceNetworkInterfaceAssociation",
                              "type": "structure",
                              "members": {
                                "PublicIp": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "publicIp"
                                },
                                "PublicDnsName": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "publicDnsName"
                                },
                                "IpOwnerId": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "ipOwnerId"
                                }
                              },
                              "documentation": null,
                              "xmlname": "association"
                            },
                            "PrivateIpAddresses": {
                              "shape_name": "InstancePrivateIpAddressList",
                              "type": "list",
                              "members": {
                                "shape_name": "InstancePrivateIpAddress",
                                "type": "structure",
                                "members": {
                                  "PrivateIpAddress": {
                                    "shape_name": "String",
                                    "type": "string",
                                    "documentation": null,
                                    "xmlname": "privateIpAddress"
                                  },
                                  "PrivateDnsName": {
                                    "shape_name": "String",
                                    "type": "string",
                                    "documentation": null,
                                    "xmlname": "privateDnsName"
                                  },
                                  "Primary": {
                                    "shape_name": "Boolean",
                                    "type": "boolean",
                                    "documentation": null,
                                    "xmlname": "primary"
                                  },
                                  "Association": {
                                    "shape_name": "InstanceNetworkInterfaceAssociation",
                                    "type": "structure",
                                    "members": {
                                      "PublicIp": {
                                        "shape_name": "String",
                                        "type": "string",
                                        "documentation": null,
                                        "xmlname": "publicIp"
                                      },
                                      "PublicDnsName": {
                                        "shape_name": "String",
                                        "type": "string",
                                        "documentation": null,
                                        "xmlname": "publicDnsName"
                                      },
                                      "IpOwnerId": {
                                        "shape_name": "String",
                                        "type": "string",
                                        "documentation": null,
                                        "xmlname": "ipOwnerId"
                                      }
                                    },
                                    "documentation": null,
                                    "xmlname": "association"
                                  }
                                },
                                "documentation": null,
                                "xmlname": "item"
                              },
                              "documentation": null,
                              "xmlname": "privateIpAddressesSet"
                            }
                          },
                          "documentation": null,
                          "xmlname": "item"
                        },
                        "documentation": null,
                        "xmlname": "networkInterfaceSet"
                      },
                      "IamInstanceProfile": {
                        "shape_name": "IamInstanceProfile",
                        "type": "structure",
                        "members": {
                          "Arn": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "arn"
                          },
                          "Id": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "id"
                          }
                        },
                        "documentation": null,
                        "xmlname": "iamInstanceProfile"
                      },
                      "EbsOptimized": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "ebsOptimized"
                      }
                    },
                    "documentation": "\n        <p>\n        Represents an Amazon EC2 instance.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        The list of Amazon EC2 instances included in this reservation.\n        </p>\n    ",
                  "xmlname": "instancesSet"
                }
              },
              "documentation": "\n        <p>\n        An Amazon EC2 reservation of requested EC2 instances.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of reservations containing the describes instances.\n        </p>\n    ",
            "xmlname": "reservationSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing Amazon EC2 instances.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeInstances operation returns information about instances that you\n        own.\n        </p>\n        <p>\n        If you specify one or more instance IDs, Amazon EC2 returns information for\n        those instances. If you do not specify instance IDs, Amazon EC2 returns\n        information for all relevant instances. If you specify an invalid instance ID,\n        a fault is returned. If you specify an instance that you do not own, it will\n        not be included in the returned results.\n        </p>\n        <p>\n        Recently terminated instances might appear in the returned results. This\n        interval is usually less than one hour.\n        </p>\n    "
    },
    "DescribeInternetGateways": {
      "name": "DescribeInternetGateways",
      "input": {
        "shape_name": "DescribeInternetGatewaysRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InternetGatewayIds": {
            "shape_name": "ValueStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InternetGatewayId"
            },
            "documentation": "\n        <p>\n\t\tOne or more Internet gateway IDs.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Internet Gateways.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeInternetGatewaysResult",
        "type": "structure",
        "members": {
          "InternetGateways": {
            "shape_name": "InternetGatewayList",
            "type": "list",
            "members": {
              "shape_name": "InternetGateway",
              "type": "structure",
              "members": {
                "InternetGatewayId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "internetGatewayId"
                },
                "Attachments": {
                  "shape_name": "InternetGatewayAttachmentList",
                  "type": "list",
                  "members": {
                    "shape_name": "InternetGatewayAttachment",
                    "type": "structure",
                    "members": {
                      "VpcId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "vpcId"
                      },
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "attachmentSet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "internetGatewaySet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tGives you information about your Internet gateways. You can filter the results to return information only\n\t\tabout Internet gateways that match criteria you specify. For example, you could get information only about\n\t\tgateways with particular tags. The Internet gateway must match at least one of the specified values for it\n\t\tto be included in the results.\n\t\t</p>\n\t\t<p>\n\t\tYou can specify multiple filters (e.g., the Internet gateway is attached to a particular VPC and is tagged\n\t\twith a particular value). The result includes information for a particular Internet gateway only if the\n\t\tgateway matches all your filters. If there's no match, no special message is returned; the response is\n\t\tsimply empty.\n\t\t</p>\n\t\t<p>\n\t\tYou can use wildcards with the filter values: an asterisk matches zero or more characters, and <code>?</code>\n\t\tmatches exactly one character. You can escape special characters using a backslash before the character.\n\t\tFor example, a value of <code>\\*amazon\\?\\\\</code> searches for the literal string <code>*amazon?\\</code>.\n\t\t</p>\n    "
    },
    "DescribeKeyPairs": {
      "name": "DescribeKeyPairs",
      "input": {
        "shape_name": "DescribeKeyPairsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "KeyNames": {
            "shape_name": "KeyNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "KeyName"
            },
            "documentation": "\n        <p>\n        The optional list of key pair names to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for KeyPairs.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        Request to describe information about key pairs available to you.\n        </p>\n        <p>\n        If you specify key pairs, information about those key pairs is returned.\n        Otherwise, information for all your registered key pairs is\n        returned.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeKeyPairsResult",
        "type": "structure",
        "members": {
          "KeyPairs": {
            "shape_name": "KeyPairList",
            "type": "list",
            "members": {
              "shape_name": "KeyPairInfo",
              "type": "structure",
              "members": {
                "KeyName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    ",
                  "xmlname": "keyName"
                },
                "KeyFingerprint": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The SHA-1 digest of the DER encoded private key.\n        </p>\n    ",
                  "xmlname": "keyFingerprint"
                }
              },
              "documentation": "\n        <p>\n        Describes an Amazon EC2 key pair. This is a summary of the key pair data, and\n        will not contain the actual private key material.\n        </p>\n        <p>\n        The private key material is only available when initially creating the\n        key pair.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described key pairs.\n        </p>\n    ",
            "xmlname": "keySet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing a user's key pairs.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeKeyPairs operation returns information about key pairs available to\n        you. If you specify key pairs, information about those key pairs is returned.\n        Otherwise, information for all registered key pairs is returned.\n        </p>\n    "
    },
    "DescribeLicenses": {
      "name": "DescribeLicenses",
      "input": {
        "shape_name": "DescribeLicensesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "LicenseIds": {
            "shape_name": "LicenseIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "LicenseId"
            },
            "documentation": "\n        <p>\n        Specifies the license registration for which details are to be returned.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Licenses.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": {
        "shape_name": "DescribeLicensesResult",
        "type": "structure",
        "members": {
          "Licenses": {
            "shape_name": "LicenseList",
            "type": "list",
            "members": {
              "shape_name": "License",
              "type": "structure",
              "members": {
                "LicenseId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID identifying the license.\n        </p>\n    ",
                  "xmlname": "licenseId"
                },
                "Type": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The license type (ex. \"Microsoft/Windows/Standard\").\n        </p>\n    ",
                  "xmlname": "type"
                },
                "Pool": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The name of the pool in which the license is kept.\n        </p>\n    ",
                  "xmlname": "pool"
                },
                "Capacities": {
                  "shape_name": "LicenseCapacityList",
                  "type": "list",
                  "members": {
                    "shape_name": "LicenseCapacity",
                    "type": "structure",
                    "members": {
                      "Capacity": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        The number of licenses available.\n        </p>\n    ",
                        "xmlname": "capacity"
                      },
                      "InstanceCapacity": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        The number of Amazon EC2 instances that can be supported with the\n        license's capacity.\n        </p>\n    ",
                        "xmlname": "instanceCapacity"
                      },
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The state of this license capacity,\n        indicating whether the license is actively being used or not.\n        </p>\n    ",
                        "xmlname": "state"
                      },
                      "EarliestAllowedDeactivationTime": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": "\n        <p>\n        The earliest allowed time at which a license can be deactivated.\n        Some licenses have time restrictions on when they can be activated and reactivated.\n        </p>\n    ",
                        "xmlname": "earliestAllowedDeactivationTime"
                      }
                    },
                    "documentation": "\n        <p>\n        Represents the capacity that a license is able to support.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        The capacities available for this license,\n        indicating how many licenses are in use, how many are available,\n        how many Amazon EC2 instances can be supported, etc.\n        </p>\n    ",
                  "xmlname": "capacitySet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the License.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        A software license that can be associated with an Amazon EC2\n        instance when launched (ex. a Microsoft Windows license).\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Specifies active licenses in use and attached to an Amazon EC2 instance.\n        </p>\n    ",
            "xmlname": "licenseSet"
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Provides details of a user's registered licenses.\n        Zero or more IDs may be specified on the call.\n        When one or more license IDs are specified,\n        only data for the specified IDs are returned.\n        </p>\n    "
    },
    "DescribeNetworkAcls": {
      "name": "DescribeNetworkAcls",
      "input": {
        "shape_name": "DescribeNetworkAclsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkAclIds": {
            "shape_name": "ValueStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "NetworkAclId"
            },
            "documentation": "\n\t\t<p>\n\t\tOne or more network ACL IDs.\n\t\t</p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n\t\t<p>\n\t\tA list of filters used to match properties for Network ACLs.\n\t\tFor a complete reference to the available filter keys for this operation, see the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n\t\t</p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeNetworkAclsResult",
        "type": "structure",
        "members": {
          "NetworkAcls": {
            "shape_name": "NetworkAclList",
            "type": "list",
            "members": {
              "shape_name": "NetworkAcl",
              "type": "structure",
              "members": {
                "NetworkAclId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "networkAclId"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "vpcId"
                },
                "IsDefault": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "default"
                },
                "Entries": {
                  "shape_name": "NetworkAclEntryList",
                  "type": "list",
                  "members": {
                    "shape_name": "NetworkAclEntry",
                    "type": "structure",
                    "members": {
                      "RuleNumber": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "ruleNumber"
                      },
                      "Protocol": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "protocol"
                      },
                      "RuleAction": {
                        "shape_name": "RuleAction",
                        "type": "string",
                        "enum": [
                          "allow",
                          "deny"
                        ],
                        "documentation": null,
                        "xmlname": "ruleAction"
                      },
                      "Egress": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "egress"
                      },
                      "CidrBlock": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "cidrBlock"
                      },
                      "IcmpTypeCode": {
                        "shape_name": "IcmpTypeCode",
                        "type": "structure",
                        "members": {
                          "Type": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP type. A value of <code>-1</code> is a wildcard meaning all types. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    ",
                            "xmlname": "type"
                          },
                          "Code": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP code. A value of <code>-1</code> is a wildcard meaning all codes. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    ",
                            "xmlname": "code"
                          }
                        },
                        "documentation": null,
                        "xmlname": "icmpTypeCode"
                      },
                      "PortRange": {
                        "shape_name": "PortRange",
                        "type": "structure",
                        "members": {
                          "From": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n       \tThe first port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    ",
                            "xmlname": "from"
                          },
                          "To": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>\n       \tThe last port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    ",
                            "xmlname": "to"
                          }
                        },
                        "documentation": null,
                        "xmlname": "portRange"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "entrySet"
                },
                "Associations": {
                  "shape_name": "NetworkAclAssociationList",
                  "type": "list",
                  "members": {
                    "shape_name": "NetworkAclAssociation",
                    "type": "structure",
                    "members": {
                      "NetworkAclAssociationId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "networkAclAssociationId"
                      },
                      "NetworkAclId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "networkAclId"
                      },
                      "SubnetId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "subnetId"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "associationSet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "networkAclSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tGives you information about the network ACLs in your VPC. You can filter the results to return\n\t\tinformation only about ACLs that match criteria you specify. For example, you could get information\n\t\tonly the ACL associated with a particular subnet. The ACL must match at least one of the specified\n\t\tvalues for it to be included in the results.\n\t\t</p>\n\t\t<p>\n\t\tYou can specify multiple filters (e.g., the ACL is associated with a particular subnet and has an\n\t\tegress entry that denies traffic to a particular port). The result includes information for a\n\t\tparticular ACL only if it matches all your filters. If there's no match, no special message is\n\t\treturned; the response is simply empty.\n\t\t</p>\n\t\t<p>\n\t\tYou can use wildcards with the filter values: an asterisk matches zero or more characters, and\n\t\t<code>?</code> matches exactly one character. You can escape special characters using a backslash\n\t\tbefore the character. For example, a value of <code>\\*amazon\\?\\\\</code> searches for the literal\n\t\tstring <code>*amazon?\\</code>.\n\t\t</p>\n    "
    },
    "DescribeNetworkInterfaceAttribute": {
      "name": "DescribeNetworkInterfaceAttribute",
      "input": {
        "shape_name": "DescribeNetworkInterfaceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "SourceDestCheck": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "Groups": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "GroupSet"
          },
          "Attachment": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeNetworkInterfaceAttributeResult",
        "type": "structure",
        "members": {
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "networkInterfaceId"
          },
          "Description": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value",
                "xmlname": "value"
              }
            },
            "documentation": "String value",
            "xmlname": "description"
          },
          "SourceDestCheck": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "Boolean value",
            "xmlname": "sourceDestCheck"
          },
          "Groups": {
            "shape_name": "GroupIdentifierList",
            "type": "list",
            "members": {
              "shape_name": "GroupIdentifier",
              "type": "structure",
              "members": {
                "GroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "groupName"
                },
                "GroupId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "groupId"
                }
              },
              "documentation": "\n        <p>\n\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "groupSet"
          },
          "Attachment": {
            "shape_name": "NetworkInterfaceAttachment",
            "type": "structure",
            "members": {
              "AttachmentId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "attachmentId"
              },
              "InstanceId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "instanceId"
              },
              "InstanceOwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "instanceOwnerId"
              },
              "DeviceIndex": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": null,
                "xmlname": "deviceIndex"
              },
              "Status": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "status"
              },
              "AttachTime": {
                "shape_name": "DateTime",
                "type": "timestamp",
                "documentation": null,
                "xmlname": "attachTime"
              },
              "DeleteOnTermination": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "xmlname": "deleteOnTermination"
              }
            },
            "documentation": null,
            "xmlname": "attachment"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeNetworkInterfaces": {
      "name": "DescribeNetworkInterfaces",
      "input": {
        "shape_name": "DescribeNetworkInterfacesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceIds": {
            "shape_name": "NetworkInterfaceIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "NetworkInterfaceId"
            },
            "documentation": null,
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeNetworkInterfacesResult",
        "type": "structure",
        "members": {
          "NetworkInterfaces": {
            "shape_name": "NetworkInterfaceList",
            "type": "list",
            "members": {
              "shape_name": "NetworkInterface",
              "type": "structure",
              "members": {
                "NetworkInterfaceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "networkInterfaceId"
                },
                "SubnetId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "subnetId"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "vpcId"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "availabilityZone"
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "description"
                },
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "ownerId"
                },
                "RequesterId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "requesterId"
                },
                "RequesterManaged": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "requesterManaged"
                },
                "Status": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "status"
                },
                "MacAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "macAddress"
                },
                "PrivateIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "privateIpAddress"
                },
                "PrivateDnsName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "privateDnsName"
                },
                "SourceDestCheck": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "sourceDestCheck"
                },
                "Groups": {
                  "shape_name": "GroupIdentifierList",
                  "type": "list",
                  "members": {
                    "shape_name": "GroupIdentifier",
                    "type": "structure",
                    "members": {
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "groupName"
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "groupId"
                      }
                    },
                    "documentation": "\n        <p>\n\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "groupSet"
                },
                "Attachment": {
                  "shape_name": "NetworkInterfaceAttachment",
                  "type": "structure",
                  "members": {
                    "AttachmentId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "attachmentId"
                    },
                    "InstanceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceId"
                    },
                    "InstanceOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "instanceOwnerId"
                    },
                    "DeviceIndex": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null,
                      "xmlname": "deviceIndex"
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "status"
                    },
                    "AttachTime": {
                      "shape_name": "DateTime",
                      "type": "timestamp",
                      "documentation": null,
                      "xmlname": "attachTime"
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "deleteOnTermination"
                    }
                  },
                  "documentation": null,
                  "xmlname": "attachment"
                },
                "Association": {
                  "shape_name": "NetworkInterfaceAssociation",
                  "type": "structure",
                  "members": {
                    "PublicIp": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "publicIp"
                    },
                    "IpOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "ipOwnerId"
                    },
                    "AllocationId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "allocationId"
                    },
                    "AssociationId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "associationId"
                    }
                  },
                  "documentation": null,
                  "xmlname": "association"
                },
                "TagSet": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                },
                "PrivateIpAddresses": {
                  "shape_name": "NetworkInterfacePrivateIpAddressList",
                  "type": "list",
                  "members": {
                    "shape_name": "NetworkInterfacePrivateIpAddress",
                    "type": "structure",
                    "members": {
                      "PrivateIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "privateIpAddress"
                      },
                      "PrivateDnsName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "privateDnsName"
                      },
                      "Primary": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "primary"
                      },
                      "Association": {
                        "shape_name": "NetworkInterfaceAssociation",
                        "type": "structure",
                        "members": {
                          "PublicIp": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "publicIp"
                          },
                          "IpOwnerId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "ipOwnerId"
                          },
                          "AllocationId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "allocationId"
                          },
                          "AssociationId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "associationId"
                          }
                        },
                        "documentation": null,
                        "xmlname": "association"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "privateIpAddressesSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "networkInterfaceSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribePlacementGroups": {
      "name": "DescribePlacementGroups",
      "input": {
        "shape_name": "DescribePlacementGroupsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupNames": {
            "shape_name": "PlacementGroupStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "GroupName"
            },
            "documentation": "\n        <p>\n        The name of the <code>PlacementGroup</code>.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Placement Groups.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "output": {
        "shape_name": "DescribePlacementGroupsResult",
        "type": "structure",
        "members": {
          "PlacementGroups": {
            "shape_name": "PlacementGroupList",
            "type": "list",
            "members": {
              "shape_name": "PlacementGroup",
              "type": "structure",
              "members": {
                "GroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The name of this <code>PlacementGroup</code>.\n        </p>\n    ",
                  "xmlname": "groupName"
                },
                "Strategy": {
                  "shape_name": "PlacementStrategy",
                  "type": "string",
                  "enum": [
                    "cluster"
                  ],
                  "documentation": "\n        <p>\n        The strategy to use when allocating Amazon EC2 instances for the\n        <code>PlacementGroup</code>.\n        </p>\n    ",
                  "xmlname": "strategy"
                },
                "State": {
                  "shape_name": "PlacementGroupState",
                  "type": "string",
                  "enum": [
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "documentation": "\n        <p>\n        The state of this <code>PlacementGroup</code>.\n        </p>\n    ",
                  "xmlname": "state"
                }
              },
              "documentation": "\n        <p>\n        Represents a placement group into which multiple Amazon EC2\n        instances can be launched. A placement group ensures that\n        Amazon EC2 instances are physically\n        located close enough to support HPC features, such as higher IO network\n        connections between instances in the group.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Contains information about the specified <code>PlacementGroups</code>.\n        </p>\n    ",
            "xmlname": "placementGroupSet"
          }
        },
        "documentation": "\n        <p></p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Returns information about one or more <a>PlacementGroup</a> instances\n        in a user's account.\n        </p>\n    "
    },
    "DescribeRegions": {
      "name": "DescribeRegions",
      "input": {
        "shape_name": "DescribeRegionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RegionNames": {
            "shape_name": "RegionNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "RegionName"
            },
            "documentation": "\n        <p>\n        The optional list of regions to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Regions.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        Request to describe the available Amazon EC2 regions.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeRegionsResult",
        "type": "structure",
        "members": {
          "Regions": {
            "shape_name": "RegionList",
            "type": "list",
            "members": {
              "shape_name": "Region",
              "type": "structure",
              "members": {
                "RegionName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Name of the region.\n        </p>\n    ",
                  "xmlname": "regionName"
                },
                "Endpoint": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Region service endpoint.\n        </p>\n    ",
                  "xmlname": "regionEndpoint"
                }
              },
              "documentation": "\n        <p>\n        Represents an Amazon EC2 region. EC2 regions are completely isolated from each\n        other.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described Amazon EC2 regions.\n        </p>\n    ",
            "xmlname": "regionInfo"
          }
        },
        "documentation": "\n        <p>\n        The result of describing the available Amazon EC2 regions.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeRegions operation describes regions zones\n        that are currently available to the account.\n        </p>\n    "
    },
    "DescribeReservedInstances": {
      "name": "DescribeReservedInstances",
      "input": {
        "shape_name": "DescribeReservedInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ReservedInstancesIds": {
            "shape_name": "ReservedInstancesIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ReservedInstancesId"
            },
            "documentation": "\n        <p>\n        The optional list of Reserved Instance IDs to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for ReservedInstances.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          },
          "OfferingType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\tThe Reserved Instance offering type.\n   "
          }
        },
        "documentation": "\n        <p>\n        A request to describe the purchased Reserved Instances for your\n        account.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeReservedInstancesResult",
        "type": "structure",
        "members": {
          "ReservedInstances": {
            "shape_name": "ReservedInstancesList",
            "type": "list",
            "members": {
              "shape_name": "ReservedInstances",
              "type": "structure",
              "members": {
                "ReservedInstancesId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of the Reserved Instances purchase.\n        </p>\n    ",
                  "xmlname": "reservedInstancesId"
                },
                "InstanceType": {
                  "shape_name": "InstanceType",
                  "type": "string",
                  "enum": [
                    "t1.micro",
                    "m1.small",
                    "m1.medium",
                    "m1.large",
                    "m1.xlarge",
                    "m2.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m3.xlarge",
                    "m3.2xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge"
                  ],
                  "documentation": "\n        <p>\n        The instance type on which the Reserved Instances can be used.\n        </p>\n    ",
                  "xmlname": "instanceType"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The Availability Zone in which the Reserved Instances can be used.\n        </p>\n    ",
                  "xmlname": "availabilityZone"
                },
                "Start": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        The date and time the Reserved Instances started.\n        </p>\n    ",
                  "xmlname": "start"
                },
                "Duration": {
                  "shape_name": "Long",
                  "type": "long",
                  "documentation": "\n        <p>\n        The duration of the Reserved Instances, in seconds.\n        </p>\n    ",
                  "xmlname": "duration"
                },
                "UsagePrice": {
                  "shape_name": "Float",
                  "type": "float",
                  "documentation": "\n        <p>\n        The usage price of the Reserved Instances, per hour.\n        </p>\n    ",
                  "xmlname": "usagePrice"
                },
                "FixedPrice": {
                  "shape_name": "Float",
                  "type": "float",
                  "documentation": "\n        <p>\n        The purchase price of the Reserved Instances.\n        </p>\n    ",
                  "xmlname": "fixedPrice"
                },
                "InstanceCount": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        The number of Reserved Instances purchased.\n        </p>\n\n    ",
                  "xmlname": "instanceCount"
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The Reserved Instances product description (ex: Windows or Unix/Linux).\n        </p>\n    ",
                  "xmlname": "productDescription"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The state of the Reserved Instances purchase.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the ReservedInstances.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "InstanceTenancy": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The tenancy of the reserved instance (ex: default or dedicated).\n        </p>\n    ",
                  "xmlname": "instanceTenancy"
                },
                "CurrencyCode": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The currency of the reserved instance. Specified using ISO 4217 standard (e.g., USD, JPY).\n        </p>\n    ",
                  "xmlname": "currencyCode"
                },
                "OfferingType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n\tThe Reserved Instance offering type.\n   ",
                  "xmlname": "offeringType"
                },
                "RecurringCharges": {
                  "shape_name": "RecurringChargesList",
                  "type": "list",
                  "members": {
                    "shape_name": "RecurringCharge",
                    "type": "structure",
                    "members": {
                      "Frequency": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n     The frequency of the recurring charge.\n   ",
                        "xmlname": "frequency"
                      },
                      "Amount": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": "\n     The amount of the recurring charge.\n   ",
                        "xmlname": "amount"
                      }
                    },
                    "documentation": "\n     Represents a usage charge for Amazon EC2 resources that repeats on a schedule.\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n\tThe recurring charge tag assigned to the resource.\n   ",
                  "xmlname": "recurringCharges"
                }
              },
              "documentation": "\n        <p>\n        A group of Amazon EC2 Reserved Instances purchased by this account.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described Reserved Instances.\n        </p>\n    ",
            "xmlname": "reservedInstancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing the purchased Reserved Instances for your\n        account.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeReservedInstances operation describes Reserved Instances\n        that were purchased for use with your account.\n        </p>\n    "
    },
    "DescribeReservedInstancesListings": {
      "name": "DescribeReservedInstancesListings",
      "input": {
        "shape_name": "DescribeReservedInstancesListingsRequest",
        "type": "structure",
        "members": {
          "ReservedInstancesId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "ReservedInstancesListingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   "
            },
            "documentation": null,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeReservedInstancesListingsResult",
        "type": "structure",
        "members": {
          "ReservedInstancesListings": {
            "shape_name": "ReservedInstancesListingList",
            "type": "list",
            "members": {
              "shape_name": "ReservedInstancesListing",
              "type": "structure",
              "members": {
                "ReservedInstancesListingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesListingId"
                },
                "ReservedInstancesId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "reservedInstancesId"
                },
                "CreateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "createDate"
                },
                "UpdateDate": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "updateDate"
                },
                "Status": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "status"
                },
                "StatusMessage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "statusMessage"
                },
                "InstanceCounts": {
                  "shape_name": "InstanceCountList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceCount",
                    "type": "structure",
                    "members": {
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      },
                      "InstanceCount": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "instanceCount"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "instanceCounts"
                },
                "PriceSchedules": {
                  "shape_name": "PriceScheduleList",
                  "type": "list",
                  "members": {
                    "shape_name": "PriceSchedule",
                    "type": "structure",
                    "members": {
                      "Term": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "xmlname": "term"
                      },
                      "Price": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": null,
                        "xmlname": "price"
                      },
                      "CurrencyCode": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "currencyCode"
                      },
                      "Active": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "active"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "priceSchedules"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                },
                "ClientToken": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "clientToken"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "reservedInstancesListingsSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeReservedInstancesOfferings": {
      "name": "DescribeReservedInstancesOfferings",
      "input": {
        "shape_name": "DescribeReservedInstancesOfferingsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ReservedInstancesOfferingIds": {
            "shape_name": "ReservedInstancesOfferingIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ReservedInstancesOfferingId"
            },
            "documentation": "\n        <p>\n        An optional list of the unique IDs of the Reserved Instance offerings to\n        describe.\n        </p>\n    ",
            "flattened": true
          },
          "InstanceType": {
            "shape_name": "InstanceType",
            "type": "string",
            "enum": [
              "t1.micro",
              "m1.small",
              "m1.medium",
              "m1.large",
              "m1.xlarge",
              "m2.xlarge",
              "m2.2xlarge",
              "m2.4xlarge",
              "m3.xlarge",
              "m3.2xlarge",
              "c1.medium",
              "c1.xlarge",
              "hi1.4xlarge",
              "hs1.8xlarge",
              "cc1.4xlarge",
              "cc2.8xlarge",
              "cg1.4xlarge",
              "cr1.8xlarge"
            ],
            "documentation": "\n        <p>\n        The instance type on which the Reserved Instance can be used.\n        </p>\n    "
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Availability Zone in which the Reserved Instance can be used.\n        </p>\n    "
          },
          "ProductDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Reserved Instance product description.\n        </p>\n    "
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for ReservedInstancesOfferings.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          },
          "InstanceTenancy": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The tenancy of the Reserved Instance offering. A Reserved Instance with tenancy of dedicated will run on single-tenant hardware and can only be launched within a VPC.\n        </p>\n    "
          },
          "OfferingType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\tThe Reserved Instance offering type.\n   "
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "MaxResults": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null
          },
          "IncludeMarketplace": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n        Include Marketplace offerings in the response.\n        </p>\n    "
          },
          "MinDuration": {
            "shape_name": "Long",
            "type": "long",
            "documentation": "\n        <p>\n        Minimum duration (in seconds) to filter when searching for offerings.\n        </p>\n    "
          },
          "MaxDuration": {
            "shape_name": "Long",
            "type": "long",
            "documentation": "\n        <p>\n        Maximum duration (in seconds) to filter when searching for offerings.\n        </p>\n    "
          },
          "MaxInstanceCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Maximum number of instances to filter when searching for offerings.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        Request to describe the Reserved Instance offerings that are available for\n        purchase.\n        </p>\n        <p>\n        With Amazon EC2 Reserved Instances, you purchase the right to launch\n        Amazon EC2 instances for a period of time\n        (without getting insufficient capacity errors) and pay a lower usage rate for\n        the actual time used.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeReservedInstancesOfferingsResult",
        "type": "structure",
        "members": {
          "ReservedInstancesOfferings": {
            "shape_name": "ReservedInstancesOfferingList",
            "type": "list",
            "members": {
              "shape_name": "ReservedInstancesOffering",
              "type": "structure",
              "members": {
                "ReservedInstancesOfferingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of this Reserved Instances offering.\n        </p>\n    ",
                  "xmlname": "reservedInstancesOfferingId"
                },
                "InstanceType": {
                  "shape_name": "InstanceType",
                  "type": "string",
                  "enum": [
                    "t1.micro",
                    "m1.small",
                    "m1.medium",
                    "m1.large",
                    "m1.xlarge",
                    "m2.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m3.xlarge",
                    "m3.2xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge"
                  ],
                  "documentation": "\n        <p>\n        The instance type on which the Reserved Instances can be used.\n        </p>\n    ",
                  "xmlname": "instanceType"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The Availability Zone in which the Reserved Instances can be used.\n        </p>\n    ",
                  "xmlname": "availabilityZone"
                },
                "Duration": {
                  "shape_name": "Long",
                  "type": "long",
                  "documentation": "\n        <p>\n        The duration of the Reserved Instance, in seconds.\n        </p>\n    ",
                  "xmlname": "duration"
                },
                "UsagePrice": {
                  "shape_name": "Float",
                  "type": "float",
                  "documentation": "\n        <p>\n        The usage price of the Reserved Instance, per hour.\n        </p>\n    ",
                  "xmlname": "usagePrice"
                },
                "FixedPrice": {
                  "shape_name": "Float",
                  "type": "float",
                  "documentation": "\n        <p>\n        The purchase price of the Reserved Instance.\n        </p>\n    ",
                  "xmlname": "fixedPrice"
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The Reserved Instances description (ex: Windows or Unix/Linux).\n        </p>\n    ",
                  "xmlname": "productDescription"
                },
                "InstanceTenancy": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The tenancy of the reserved instance (ex: default or dedicated).\n        </p>\n    ",
                  "xmlname": "instanceTenancy"
                },
                "CurrencyCode": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The currency of the reserved instance. Specified using ISO 4217 standard (e.g., USD, JPY).\n        </p>\n    ",
                  "xmlname": "currencyCode"
                },
                "OfferingType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n\tThe Reserved Instance offering type.\n   ",
                  "xmlname": "offeringType"
                },
                "RecurringCharges": {
                  "shape_name": "RecurringChargesList",
                  "type": "list",
                  "members": {
                    "shape_name": "RecurringCharge",
                    "type": "structure",
                    "members": {
                      "Frequency": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n     The frequency of the recurring charge.\n   ",
                        "xmlname": "frequency"
                      },
                      "Amount": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": "\n     The amount of the recurring charge.\n   ",
                        "xmlname": "amount"
                      }
                    },
                    "documentation": "\n     Represents a usage charge for Amazon EC2 resources that repeats on a schedule.\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n\tThe recurring charge tag assigned to the resource.\n   ",
                  "xmlname": "recurringCharges"
                },
                "Marketplace": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "marketplace"
                },
                "PricingDetails": {
                  "shape_name": "PricingDetailsList",
                  "type": "list",
                  "members": {
                    "shape_name": "PricingDetail",
                    "type": "structure",
                    "members": {
                      "Price": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": null,
                        "xmlname": "price"
                      },
                      "Count": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "count"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "pricingDetailsSet"
                }
              },
              "documentation": "\n        <p>\n        An active offer for Amazon EC2 Reserved Instances.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described Reserved Instance offerings.\n        </p>\n    ",
            "xmlname": "reservedInstancesOfferingsSet"
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "nextToken"
          }
        },
        "documentation": "\n        <p>\n        The result of describing Reserved Instance offerings.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeReservedInstancesOfferings operation describes Reserved\n        Instance offerings that are available for purchase. With Amazon EC2\n        Reserved Instances, you purchase the right to launch Amazon EC2 instances\n        for a period of time (without getting insufficient capacity errors) and\n        pay a lower usage rate for the actual time used.\n        </p>\n    "
    },
    "DescribeRouteTables": {
      "name": "DescribeRouteTables",
      "input": {
        "shape_name": "DescribeRouteTablesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RouteTableIds": {
            "shape_name": "ValueStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "RouteTableId"
            },
            "documentation": "\n\t\t<p>\n\t\tOne or more route table IDs.\n\t\t</p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n\t\t<p>\n\t\tA list of filters used to match properties for Route Tables.\n\t\tFor a complete reference to the available filter keys for this operation, see the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n\t\t</p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeRouteTablesResult",
        "type": "structure",
        "members": {
          "RouteTables": {
            "shape_name": "RouteTableList",
            "type": "list",
            "members": {
              "shape_name": "RouteTable",
              "type": "structure",
              "members": {
                "RouteTableId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "routeTableId"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "vpcId"
                },
                "Routes": {
                  "shape_name": "RouteList",
                  "type": "list",
                  "members": {
                    "shape_name": "Route",
                    "type": "structure",
                    "members": {
                      "DestinationCidrBlock": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "destinationCidrBlock"
                      },
                      "GatewayId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "gatewayId"
                      },
                      "InstanceId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "instanceId"
                      },
                      "InstanceOwnerId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "instanceOwnerId"
                      },
                      "NetworkInterfaceId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "networkInterfaceId"
                      },
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "routeSet"
                },
                "Associations": {
                  "shape_name": "RouteTableAssociationList",
                  "type": "list",
                  "members": {
                    "shape_name": "RouteTableAssociation",
                    "type": "structure",
                    "members": {
                      "RouteTableAssociationId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "routeTableAssociationId"
                      },
                      "RouteTableId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "routeTableId"
                      },
                      "SubnetId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "subnetId"
                      },
                      "Main": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "main"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "associationSet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                },
                "PropagatingVgws": {
                  "shape_name": "PropagatingVgwList",
                  "type": "list",
                  "members": {
                    "shape_name": "PropagatingVgw",
                    "type": "structure",
                    "members": {
                      "GatewayId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "gatewayId"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "propagatingVgwSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "routeTableSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tGives you information about your route tables. You can filter the results to return information only\n\t\tabout tables that match criteria you specify. For example, you could get information only about a\n\t\ttable associated with a particular subnet. You can specify multiple values for the filter. The table\n\t\tmust match at least one of the specified values for it to be included in the results.\n\t\t</p>\n\t\t<p>\n\t\tYou can specify multiple filters (e.g., the table has a particular route, and is associated with a\n\t\tparticular subnet). The result includes information for a particular table only if it matches all\n\t\tyour filters. If there's no match, no special message is returned; the response is simply empty.\n\t\t</p>\n\t\t<p>\n\t\tYou can use wildcards with the filter values: an asterisk matches zero or more characters, and\n\t\t<code>?</code> matches exactly one character. You can escape special characters using a backslash\n\t\tbefore the character. For example, a value of <code>\\*amazon\\?\\\\</code> searches for the literal\n\t\tstring <code>*amazon?\\</code>.\n\t\t</p>\n    "
    },
    "DescribeSecurityGroups": {
      "name": "DescribeSecurityGroups",
      "input": {
        "shape_name": "DescribeSecurityGroupsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupNames": {
            "shape_name": "GroupNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "GroupName"
            },
            "documentation": "\n        <p>\n        An optional list of group names that specify the Amazon EC2 security groups to describe.\n        </p>\n    ",
            "flattened": true
          },
          "GroupIds": {
            "shape_name": "GroupIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "GroupId"
            },
            "documentation": null,
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for SecurityGroups.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the Amazon EC2 security groups for your account.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeSecurityGroupsResult",
        "type": "structure",
        "members": {
          "SecurityGroups": {
            "shape_name": "SecurityGroupList",
            "type": "list",
            "members": {
              "shape_name": "SecurityGroup",
              "type": "structure",
              "members": {
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS Access Key ID of the owner of the security group.\n        </p>\n    ",
                  "xmlname": "ownerId"
                },
                "GroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The name of this security group.\n        </p>\n    ",
                  "xmlname": "groupName"
                },
                "GroupId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "groupId"
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The description of this security group.\n        </p>\n    ",
                  "xmlname": "groupDescription"
                },
                "IpPermissions": {
                  "shape_name": "IpPermissionList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpPermission",
                    "type": "structure",
                    "members": {
                      "IpProtocol": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    ",
                        "xmlname": "ipProtocol"
                      },
                      "FromPort": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    ",
                        "xmlname": "fromPort"
                      },
                      "ToPort": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    ",
                        "xmlname": "toPort"
                      },
                      "UserIdGroupPairs": {
                        "shape_name": "UserIdGroupPairList",
                        "type": "list",
                        "members": {
                          "shape_name": "UserIdGroupPair",
                          "type": "structure",
                          "members": {
                            "UserId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    ",
                              "xmlname": "userId"
                            },
                            "GroupName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    ",
                              "xmlname": "groupName"
                            },
                            "GroupId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    ",
                              "xmlname": "groupId"
                            }
                          },
                          "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                        "xmlname": "groups"
                      },
                      "IpRanges": {
                        "shape_name": "IpRangeList",
                        "type": "list",
                        "members": {
                          "shape_name": "IpRange",
                          "type": "structure",
                          "members": {
                            "CidrIp": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    ",
                              "xmlname": "cidrIp"
                            }
                          },
                          "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                        "xmlname": "ipRanges"
                      }
                    },
                    "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        The permissions enabled for this security group.\n        </p>\n    ",
                  "xmlname": "ipPermissions"
                },
                "IpPermissionsEgress": {
                  "shape_name": "IpPermissionList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpPermission",
                    "type": "structure",
                    "members": {
                      "IpProtocol": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    ",
                        "xmlname": "ipProtocol"
                      },
                      "FromPort": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    ",
                        "xmlname": "fromPort"
                      },
                      "ToPort": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    ",
                        "xmlname": "toPort"
                      },
                      "UserIdGroupPairs": {
                        "shape_name": "UserIdGroupPairList",
                        "type": "list",
                        "members": {
                          "shape_name": "UserIdGroupPair",
                          "type": "structure",
                          "members": {
                            "UserId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    ",
                              "xmlname": "userId"
                            },
                            "GroupName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    ",
                              "xmlname": "groupName"
                            },
                            "GroupId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    ",
                              "xmlname": "groupId"
                            }
                          },
                          "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                        "xmlname": "groups"
                      },
                      "IpRanges": {
                        "shape_name": "IpRangeList",
                        "type": "list",
                        "members": {
                          "shape_name": "IpRange",
                          "type": "structure",
                          "members": {
                            "CidrIp": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    ",
                              "xmlname": "cidrIp"
                            }
                          },
                          "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                        "xmlname": "ipRanges"
                      }
                    },
                    "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "ipPermissionsEgress"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "vpcId"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        An Amazon EC2 security group, describing how EC2 instances in this group\n        can receive network traffic.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described Amazon EC2 security groups.\n        </p>\n    ",
            "xmlname": "securityGroupInfo"
          }
        },
        "documentation": "\n        <p>\n        The result of describing the Amazon EC2 security groups for your account.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DescribeSecurityGroups operation returns information about security groups\n        that you own.\n        </p>\n        <p>\n        If you specify security group names, information about those security group is\n        returned. Otherwise, information for all security group is returned. If you\n        specify a group that does not exist, a fault is returned.\n        </p>\n    "
    },
    "DescribeSnapshotAttribute": {
      "name": "DescribeSnapshotAttribute",
      "input": {
        "shape_name": "DescribeSnapshotAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the EBS snapshot whose attribute is being described.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "SnapshotAttributeName",
            "type": "string",
            "enum": [
              "productCodes",
              "createVolumePermission"
            ],
            "documentation": "\n        <p>\n        The name of the EBS attribute to describe.\n        </p>\n        <p>\n        Available attribute names: createVolumePermission\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe an attribute of an EBS snapshot. Only one\n        attribute can be specified per request.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeSnapshotAttributeResult",
        "type": "structure",
        "members": {
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the snapshot whose attribute is being described.\n        </p>\n    ",
            "xmlname": "snapshotId"
          },
          "CreateVolumePermissions": {
            "shape_name": "CreateVolumePermissionList",
            "type": "list",
            "members": {
              "shape_name": "CreateVolumePermission",
              "type": "structure",
              "members": {
                "UserId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The user ID of the user that can create volumes from the snapshot.\n        </p>\n    ",
                  "xmlname": "userId"
                },
                "Group": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The group that is allowed to create volumes from the snapshot (currently\n        supports \"all\").\n        </p>\n    ",
                  "xmlname": "group"
                }
              },
              "documentation": "\n        <p>\n        Describes a permission allowing either a user or group to create a new EBS\n        volume from a snapshot.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of permissions describing who can create a volume from the\n        associated EBS snapshot.\n        </p>\n        <p>\n        Only available if the createVolumePermission attribute is requested.\n        </p>\n    ",
            "xmlname": "createVolumePermission"
          },
          "ProductCodes": {
            "shape_name": "ProductCodeList",
            "type": "list",
            "members": {
              "shape_name": "ProductCode",
              "type": "structure",
              "members": {
                "ProductCodeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                  "xmlname": "productCode"
                },
                "ProductCodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "type"
                }
              },
              "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "productCodes"
          }
        },
        "documentation": "\n        <p>\n        The result of describing an EBS snapshot attribute.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Returns information about an attribute of a snapshot. Only one attribute can\n        be specified per call.\n        </p>\n   "
    },
    "DescribeSnapshots": {
      "name": "DescribeSnapshots",
      "input": {
        "shape_name": "DescribeSnapshotsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SnapshotIds": {
            "shape_name": "SnapshotIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SnapshotId"
            },
            "documentation": "\n        <p>\n        The optional list of EBS snapshot IDs to describe.\n        </p>\n    ",
            "flattened": true
          },
          "OwnerIds": {
            "shape_name": "OwnerStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "Owner"
            },
            "documentation": "\n        <p>\n          An optional list of owners by which to scope the described EBS\n          snapshots. Valid values are:\n        </p>\n        <ul>\n          <li>\n            <code>self</code> : Snapshots owned by you\n          </li>\n          <li>\n            <i>AWS account ID</i> : Snapshots owned by this account ID\n          </li>\n          <li>\n            <code>amazon</code> : Snapshots owned by Amazon\n          </li>\n        </ul>\n        <p>\n          The values <code>self</code> and <code>amazon</code> are literals.\n        </p>\n    ",
            "flattened": true
          },
          "RestorableByUserIds": {
            "shape_name": "RestorableByStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "RestorableBy"
            },
            "documentation": "\n      <p>\n        An optional list of users. The described snapshots are scoped to only those\n        snapshots from which these users can create volumes.\n      </p>\n   ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Snapshots.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe Amazon EBS snapshots available to your account.\n        Information returned includes volume ID, status, start time,\n        progress, owner ID, volume size, and description.\n        </p>\n        <p>\n        Snapshots available to your account include public snapshots available for any\n        user to launch, private snapshots\n        owned by the user making the request, and private snapshots owned by other\n        users for which the user granted explicit create volume\n        permissions.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeSnapshotsResult",
        "type": "structure",
        "members": {
          "Snapshots": {
            "shape_name": "SnapshotList",
            "type": "list",
            "members": {
              "shape_name": "Snapshot",
              "type": "structure",
              "members": {
                "SnapshotId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of this snapshot.\n        </p>\n    ",
                  "xmlname": "snapshotId"
                },
                "VolumeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The ID of the volume from which this snapshot was created.\n        </p>\n    ",
                  "xmlname": "volumeId"
                },
                "State": {
                  "shape_name": "SnapshotState",
                  "type": "string",
                  "enum": [
                    "pending",
                    "completed",
                    "error"
                  ],
                  "documentation": "\n        <p>\n        Snapshot state (e.g., pending, completed, or error).\n        </p>\n    ",
                  "xmlname": "status"
                },
                "StartTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        Time stamp when the snapshot was initiated.\n        </p>\n    ",
                  "xmlname": "startTime"
                },
                "Progress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The progress of the snapshot, in percentage.\n        </p>\n    ",
                  "xmlname": "progress"
                },
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        AWS Access Key ID of the user who owns the snapshot.\n        </p>\n    ",
                  "xmlname": "ownerId"
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Description of the snapshot.\n        </p>\n\n    ",
                  "xmlname": "description"
                },
                "VolumeSize": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
                  "xmlname": "volumeSize"
                },
                "OwnerAlias": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The AWS account alias (e.g., \"amazon\", \"redhat\", \"self\", etc.) or AWS\n        account ID that owns the AMI.\n        </p>\n    ",
                  "xmlname": "ownerAlias"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the Snapshot.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        Represents a snapshot of an Amazon EC2 EBS volume.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described EBS snapshots.\n        </p>\n   ",
            "xmlname": "snapshotSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing EBS snapshots.\n        </p>\n   "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Returns information about the Amazon EBS snapshots available to you.\n        Snapshots available to you include public snapshots available for any AWS account to launch, private snapshots you own,\n        and private snapshots owned by another AWS account but for which you've been given explicit create volume permissions.\n        </p>\n    "
    },
    "DescribeSpotDatafeedSubscription": {
      "name": "DescribeSpotDatafeedSubscription",
      "input": {
        "shape_name": "DescribeSpotDatafeedSubscriptionRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeSpotDatafeedSubscriptionResult",
        "type": "structure",
        "members": {
          "SpotDatafeedSubscription": {
            "shape_name": "SpotDatafeedSubscription",
            "type": "structure",
            "members": {
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the AWS account ID of the account.\n        </p>\n    ",
                "xmlname": "ownerId"
              },
              "Bucket": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the Amazon S3 bucket where the Spot Instance data feed is located.\n        </p>\n    ",
                "xmlname": "bucket"
              },
              "Prefix": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Contains the prefix that is prepended to data feed files.\n        </p>\n    ",
                "xmlname": "prefix"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the state of the Spot Instance request.\n        </p>\n    ",
                "xmlname": "state"
              },
              "Fault": {
                "shape_name": "SpotInstanceStateFault",
                "type": "structure",
                "members": {
                  "Code": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "code"
                  },
                  "Message": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "message"
                  }
                },
                "documentation": "\n        <p>\n        Specifies a fault code for the Spot Instance request, if present.\n        </p>\n    ",
                "xmlname": "fault"
              }
            },
            "documentation": "\n        <p>\n        The Spot Instance datafeed subscription.\n        </p>\n    ",
            "xmlname": "spotDatafeedSubscription"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Describes the data feed for Spot Instances.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
    },
    "DescribeSpotInstanceRequests": {
      "name": "DescribeSpotInstanceRequests",
      "input": {
        "shape_name": "DescribeSpotInstanceRequestsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SpotInstanceRequestIds": {
            "shape_name": "SpotInstanceRequestIdList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SpotInstanceRequestId"
            },
            "documentation": "\n        <p>\n        The ID of the request.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for SpotInstances.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeSpotInstanceRequestsResult",
        "type": "structure",
        "members": {
          "SpotInstanceRequests": {
            "shape_name": "SpotInstanceRequestList",
            "type": "list",
            "members": {
              "shape_name": "SpotInstanceRequest",
              "type": "structure",
              "members": {
                "SpotInstanceRequestId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotInstanceRequestId"
                },
                "SpotPrice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotPrice"
                },
                "Type": {
                  "shape_name": "SpotInstanceType",
                  "type": "string",
                  "enum": [
                    "one-time",
                    "persistent"
                  ],
                  "documentation": null,
                  "xmlname": "type"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "state"
                },
                "Fault": {
                  "shape_name": "SpotInstanceStateFault",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "code"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "message"
                    }
                  },
                  "documentation": null,
                  "xmlname": "fault"
                },
                "Status": {
                  "shape_name": "SpotInstanceStatus",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "code"
                    },
                    "UpdateTime": {
                      "shape_name": "DateTime",
                      "type": "timestamp",
                      "documentation": null,
                      "xmlname": "updateTime"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "message"
                    }
                  },
                  "documentation": null,
                  "xmlname": "status"
                },
                "ValidFrom": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "validFrom"
                },
                "ValidUntil": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "validUntil"
                },
                "LaunchGroup": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "launchGroup"
                },
                "AvailabilityZoneGroup": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "availabilityZoneGroup"
                },
                "LaunchSpecification": {
                  "shape_name": "LaunchSpecification",
                  "type": "structure",
                  "members": {
                    "ImageId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AMI ID.\n        </p>\n    ",
                      "xmlname": "imageId"
                    },
                    "KeyName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    ",
                      "xmlname": "keyName"
                    },
                    "SecurityGroups": {
                      "shape_name": "GroupIdentifierList",
                      "type": "list",
                      "members": {
                        "shape_name": "GroupIdentifier",
                        "type": "structure",
                        "members": {
                          "GroupName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n\n        </p>\n    ",
                            "xmlname": "groupName"
                          },
                          "GroupId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "groupId"
                          }
                        },
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "groupSet"
                    },
                    "UserData": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Optional data, specific to a user's application, to provide in the launch request.\n        All instances that collectively comprise the launch request have access to this data.\n        User data is never returned through API responses.\n        </p>\n    ",
                      "xmlname": "userData"
                    },
                    "AddressingType": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    ",
                      "xmlname": "addressingType"
                    },
                    "InstanceType": {
                      "shape_name": "InstanceType",
                      "type": "string",
                      "enum": [
                        "t1.micro",
                        "m1.small",
                        "m1.medium",
                        "m1.large",
                        "m1.xlarge",
                        "m2.xlarge",
                        "m2.2xlarge",
                        "m2.4xlarge",
                        "m3.xlarge",
                        "m3.2xlarge",
                        "c1.medium",
                        "c1.xlarge",
                        "hi1.4xlarge",
                        "hs1.8xlarge",
                        "cc1.4xlarge",
                        "cc2.8xlarge",
                        "cg1.4xlarge",
                        "cr1.8xlarge"
                      ],
                      "documentation": "\n        <p>\n        Specifies the instance type.\n        </p>\n    ",
                      "xmlname": "instanceType"
                    },
                    "Placement": {
                      "shape_name": "SpotPlacement",
                      "type": "structure",
                      "members": {
                        "AvailabilityZone": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    ",
                          "xmlname": "availabilityZone"
                        },
                        "GroupName": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    ",
                          "xmlname": "groupName"
                        }
                      },
                      "documentation": "\n        <p>\n        Defines a placement item.\n        </p>\n    ",
                      "xmlname": "placement"
                    },
                    "KernelId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the ID of the kernel to select.\n        </p>\n    ",
                      "xmlname": "kernelId"
                    },
                    "RamdiskId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the ID of the RAM disk to select.\n        Some kernels require additional drivers at launch.\n        Check the kernel requirements for information on whether\n        or not you need to specify a RAM disk and search for the kernel ID.\n        </p>\n    ",
                      "xmlname": "ramdiskId"
                    },
                    "BlockDeviceMappings": {
                      "shape_name": "BlockDeviceMappingList",
                      "type": "list",
                      "members": {
                        "shape_name": "BlockDeviceMapping",
                        "type": "structure",
                        "members": {
                          "VirtualName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    ",
                            "xmlname": "virtualName"
                          },
                          "DeviceName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                            "xmlname": "deviceName"
                          },
                          "Ebs": {
                            "shape_name": "EbsBlockDevice",
                            "type": "structure",
                            "members": {
                              "SnapshotId": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    ",
                                "xmlname": "snapshotId"
                              },
                              "VolumeSize": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
                                "xmlname": "volumeSize"
                              },
                              "DeleteOnTermination": {
                                "shape_name": "Boolean",
                                "type": "boolean",
                                "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                                "xmlname": "deleteOnTermination"
                              },
                              "VolumeType": {
                                "shape_name": "VolumeType",
                                "type": "string",
                                "enum": [
                                  "standard",
                                  "io1"
                                ],
                                "documentation": null,
                                "xmlname": "volumeType"
                              },
                              "Iops": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": null,
                                "xmlname": "iops"
                              }
                            },
                            "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    ",
                            "xmlname": "ebs"
                          },
                          "NoDevice": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    ",
                            "xmlname": "noDevice"
                          }
                        },
                        "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
                        "xmlname": "item"
                      },
                      "documentation": "\n        <p>\n        Specifies how block devices are exposed to the instance.\n        Each mapping is made up of a virtualName and a deviceName.\n        </p>\n    ",
                      "xmlname": "blockDeviceMapping"
                    },
                    "MonitoringEnabled": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Enables monitoring for the instance.\n        </p>\n    ",
                      "xmlname": "monitoringEnabled"
                    },
                    "SubnetId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the Amazon VPC subnet ID within which to launch the instance(s)\n        for Amazon Virtual Private Cloud.\n        </p>\n    ",
                      "xmlname": "subnetId"
                    },
                    "NetworkInterfaces": {
                      "shape_name": "InstanceNetworkInterfaceSpecificationList",
                      "type": "list",
                      "members": {
                        "shape_name": "InstanceNetworkInterfaceSpecification",
                        "type": "structure",
                        "members": {
                          "NetworkInterfaceId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "networkInterfaceId"
                          },
                          "DeviceIndex": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "deviceIndex"
                          },
                          "SubnetId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "subnetId"
                          },
                          "Description": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "description"
                          },
                          "PrivateIpAddress": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "privateIpAddress"
                          },
                          "Groups": {
                            "shape_name": "SecurityGroupIdStringList",
                            "type": "list",
                            "members": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "SecurityGroupId"
                            },
                            "documentation": null,
                            "xmlname": "SecurityGroupId"
                          },
                          "DeleteOnTermination": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": null,
                            "xmlname": "deleteOnTermination"
                          },
                          "PrivateIpAddresses": {
                            "shape_name": "PrivateIpAddressSpecificationList",
                            "type": "list",
                            "members": {
                              "shape_name": "PrivateIpAddressSpecification",
                              "type": "structure",
                              "members": {
                                "PrivateIpAddress": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "required": true,
                                  "xmlname": "privateIpAddress"
                                },
                                "Primary": {
                                  "shape_name": "Boolean",
                                  "type": "boolean",
                                  "documentation": null,
                                  "xmlname": "primary"
                                }
                              },
                              "documentation": null,
                              "xmlname": "item"
                            },
                            "documentation": null,
                            "xmlname": "privateIpAddressesSet"
                          },
                          "SecondaryPrivateIpAddressCount": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "secondaryPrivateIpAddressCount"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "networkInterfaceSet"
                    },
                    "IamInstanceProfile": {
                      "shape_name": "IamInstanceProfileSpecification",
                      "type": "structure",
                      "members": {
                        "Arn": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "arn"
                        },
                        "Name": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "name"
                        }
                      },
                      "documentation": null,
                      "xmlname": "iamInstanceProfile"
                    },
                    "EbsOptimized": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "ebsOptimized"
                    }
                  },
                  "documentation": "\n        <p>\n        The LaunchSpecificationType data type.\n        </p>\n    ",
                  "xmlname": "launchSpecification"
                },
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "instanceId"
                },
                "CreateTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "createTime"
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "productDescription"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for this spot instance request.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "LaunchedAvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       The Availability Zone in which the bid is launched.\n       </p>\n   ",
                  "xmlname": "launchedAvailabilityZone"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "spotInstanceRequestSet"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n\t\tDescribes Spot Instance requests. Spot Instances are instances that\n\t\tAmazon EC2 starts on your behalf when the maximum price that you specify\n\t\texceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price\n\t\tbased on available Spot Instance capacity and current spot instance requests.\n\t\tFor conceptual information about Spot Instances, refer to the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/2010-08-31/DeveloperGuide/\">\n\t\tAmazon Elastic Compute Cloud Developer Guide</a>\n\t\tor\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/2010-08-31/UserGuide/\">\n\t\tAmazon Elastic Compute Cloud User Guide</a>.\n\t\t</p>\n\t\t<p>\n\t\tYou can filter the results to return information only about\n\t\tSpot Instance requests that match criteria you specify. For example,\n\t\tyou could get information about requests where the Spot Price you specified\n\t\tis a certain value (you can't use greater than or less than comparison,\n\t\tbut you can use <code>*</code> and <code>?</code> wildcards).\n\t\tYou can specify multiple values for a filter.\n\t\tA Spot Instance request must match at least one of the specified values for it to\n\t\tbe included in the results.\n\t\t</p>\n\t\t<p>\n\t\tYou can specify multiple filters (e.g., the Spot Price is equal to a particular value,\n\t\tand the instance type is <code>m1.small</code>). The result includes information for a particular\n\t\trequest only if it matches all your filters. If there's no match, no special message\n\t\tis returned; the response is simply empty.\n\t\t</p>\n\t\t<p>\n\t\tYou can use wildcards with the filter values: an asterisk matches zero or more characters,\n\t\tand <code>?</code> matches exactly one character. You can escape special characters using a\n\t\tbackslash before the character. For example, a value of <code>\\*amazon\\?\\\\</code> searches for the\n\t\tliteral string <code>*amazon?\\</code>.\n\t\t</p>\n    "
    },
    "DescribeSpotPriceHistory": {
      "name": "DescribeSpotPriceHistory",
      "input": {
        "shape_name": "DescribeSpotPriceHistoryRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "StartTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        The start date and time of the Spot Instance price history data.\n        </p>\n    "
          },
          "EndTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        The end date and time of the Spot Instance price history data.\n        </p>\n    "
          },
          "InstanceTypes": {
            "shape_name": "InstanceTypeList",
            "type": "list",
            "members": {
              "shape_name": "InstanceType",
              "type": "string",
              "enum": [
                "t1.micro",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cc1.4xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge",
                "cr1.8xlarge"
              ],
              "documentation": null,
              "xmlname": "InstanceType"
            },
            "documentation": "\n        <p>\n        Specifies the instance type to return.\n        </p>\n    ",
            "flattened": true
          },
          "ProductDescriptions": {
            "shape_name": "ProductDescriptionList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ProductDescription"
            },
            "documentation": "\n        <p>\n        The description of the AMI.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for SpotPriceHistory.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n       <p>\n\t\tFilters the results by availability zone (ex: 'us-east-1a').\n       </p>\n   "
          },
          "MaxResults": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n       <p>\n\t\tSpecifies the number of rows to return.\n       </p>\n   "
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n       <p>\n       Specifies the next set of rows to return.\n       </p>\n   "
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeSpotPriceHistoryResult",
        "type": "structure",
        "members": {
          "SpotPriceHistory": {
            "shape_name": "SpotPriceHistoryList",
            "type": "list",
            "members": {
              "shape_name": "SpotPrice",
              "type": "structure",
              "members": {
                "InstanceType": {
                  "shape_name": "InstanceType",
                  "type": "string",
                  "enum": [
                    "t1.micro",
                    "m1.small",
                    "m1.medium",
                    "m1.large",
                    "m1.xlarge",
                    "m2.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m3.xlarge",
                    "m3.2xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge"
                  ],
                  "documentation": null,
                  "xmlname": "instanceType"
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "productDescription"
                },
                "SpotPrice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotPrice"
                },
                "Timestamp": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "timestamp"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "availabilityZone"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "spotPriceHistorySet"
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n       <p>\n       The string marking the next set of results returned. Displays empty if there are no more results to be returned.\n       </p>\n   ",
            "xmlname": "nextToken"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Describes the Spot Price history.\n        </p>\n        <p>\n        Spot Instances are instances that Amazon EC2\n        starts on your behalf when the maximum price\n        that you specify exceeds the current Spot Price.\n        Amazon EC2 periodically sets the Spot Price based\n        on available Spot Instance capacity and current\n        spot instance requests.\n        </p>\n        <p>\n        For conceptual information about Spot Instances,\n        refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide\n        </a>.\n        </p>\n    "
    },
    "DescribeSubnets": {
      "name": "DescribeSubnets",
      "input": {
        "shape_name": "DescribeSubnetsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SubnetIds": {
            "shape_name": "SubnetIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SubnetId"
            },
            "documentation": "\n        <p>\n        A set of one or more subnet IDs.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Subnets.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeSubnetsResult",
        "type": "structure",
        "members": {
          "Subnets": {
            "shape_name": "SubnetList",
            "type": "list",
            "members": {
              "shape_name": "Subnet",
              "type": "structure",
              "members": {
                "SubnetId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the subnet.\n        </p>\n    ",
                  "xmlname": "subnetId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Describes the current state of the subnet.\n        The state of the subnet may be either\n        <code>pending</code> or\n        <code>available</code>.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Contains the ID of the VPC the subnet is in.\n        </p>\n    ",
                  "xmlname": "vpcId"
                },
                "CidrBlock": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the CIDR block assigned to the subnet.\n        </p>\n    ",
                  "xmlname": "cidrBlock"
                },
                "AvailableIpAddressCount": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        Specifies the number of unused IP addresses in the subnet.\n        </p>\n        <note>\n            <p>\n            The IP addresses for any stopped instances are\n            considered unavailable.\n            </p>\n        </note>\n    ",
                  "xmlname": "availableIpAddressCount"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the Availability Zone the subnet is in.\n        </p>\n    ",
                  "xmlname": "availabilityZone"
                },
                "DefaultForAz": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "defaultForAz"
                },
                "MapPublicIpOnLaunch": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "mapPublicIpOnLaunch"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the Subnet.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        The Subnet data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Contains a set of one or more <a>Subnet</a>\n        instances.\n        </p>\n    ",
            "xmlname": "subnetSet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Gives you information about your subnets. You can filter the results to return information only about\n        subnets that match criteria you specify.\n\t\t</p>\n\t\t<p>\n\t\tFor example, you could ask to get information about a particular subnet (or all) only if the subnet's\n\t\tstate is available. You can specify multiple filters (e.g., the subnet is in a particular VPC, and the\n\t\tsubnet's state is available).\n\t\t</p>\n\t\t<p>\n\t\tThe result includes information for a particular subnet only if the subnet matches all your filters.\n\t\tIf there's no match, no special message is returned; the response is simply empty. The following table\n\t\tshows the available filters.\n        </p>\n    "
    },
    "DescribeTags": {
      "name": "DescribeTags",
      "input": {
        "shape_name": "DescribeTagsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n    <p>\n    A list of filters used to match properties for tags.\n    </p>\n   ",
            "flattened": true
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "output": {
        "shape_name": "DescribeTagsResult",
        "type": "structure",
        "members": {
          "Tags": {
            "shape_name": "TagDescriptionList",
            "type": "list",
            "members": {
              "shape_name": "TagDescription",
              "type": "structure",
              "members": {
                "ResourceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The resource ID for the tag.\n    </p>\n   ",
                  "xmlname": "resourceId"
                },
                "ResourceType": {
                  "shape_name": "ResourceType",
                  "type": "string",
                  "enum": [
                    "customer-gateway",
                    "dhcp-options",
                    "image",
                    "instance",
                    "snapshot",
                    "spot-instances-request",
                    "subnet",
                    "volume",
                    "vpc",
                    "vpn-connection",
                    "vpn-gateway"
                  ],
                  "documentation": "\n    <p>\n     The type of resource identified by the associated resource ID (ex: instance, AMI, EBS volume, etc).\n    </p>\n   ",
                  "xmlname": "resourceType"
                },
                "Key": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                  "xmlname": "key"
                },
                "Value": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                  "xmlname": "value"
                }
              },
              "documentation": "\n    <p>\n    Provides information about an Amazon EC2 resource <a>Tag</a>.\n    </p>\n   ",
              "xmlname": "item"
            },
            "documentation": "\n    <p>\n    A list of the tags for the specified resources.\n    </p>\n   ",
            "xmlname": "tagSet"
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "errors": [

      ],
      "documentation": "\n    <p>\n    Describes the tags for the specified resources.\n    </p>\n   "
    },
    "DescribeVolumeAttribute": {
      "name": "DescribeVolumeAttribute",
      "input": {
        "shape_name": "DescribeVolumeAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Attribute": {
            "shape_name": "VolumeAttributeName",
            "type": "string",
            "enum": [
              "autoEnableIO",
              "productCodes"
            ],
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeVolumeAttributeResult",
        "type": "structure",
        "members": {
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "volumeId"
          },
          "AutoEnableIO": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "Boolean value",
            "xmlname": "autoEnableIO"
          },
          "ProductCodes": {
            "shape_name": "ProductCodeList",
            "type": "list",
            "members": {
              "shape_name": "ProductCode",
              "type": "structure",
              "members": {
                "ProductCodeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                  "xmlname": "productCode"
                },
                "ProductCodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "type"
                }
              },
              "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "productCodes"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeVolumeStatus": {
      "name": "DescribeVolumeStatus",
      "input": {
        "shape_name": "DescribeVolumeStatusRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeIds": {
            "shape_name": "VolumeIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "VolumeId"
            },
            "documentation": null,
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": null,
            "flattened": true
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "MaxResults": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeVolumeStatusResult",
        "type": "structure",
        "members": {
          "VolumeStatuses": {
            "shape_name": "VolumeStatusList",
            "type": "list",
            "members": {
              "shape_name": "VolumeStatusItem",
              "type": "structure",
              "members": {
                "VolumeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "volumeId"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "availabilityZone"
                },
                "VolumeStatus": {
                  "shape_name": "VolumeStatusInfo",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "status"
                    },
                    "Details": {
                      "shape_name": "VolumeStatusDetailsList",
                      "type": "list",
                      "members": {
                        "shape_name": "VolumeStatusDetails",
                        "type": "structure",
                        "members": {
                          "Name": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "name"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "status"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "details"
                    }
                  },
                  "documentation": null,
                  "xmlname": "volumeStatus"
                },
                "Events": {
                  "shape_name": "VolumeStatusEventsList",
                  "type": "list",
                  "members": {
                    "shape_name": "VolumeStatusEvent",
                    "type": "structure",
                    "members": {
                      "EventType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "eventType"
                      },
                      "Description": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "description"
                      },
                      "NotBefore": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": null,
                        "xmlname": "notBefore"
                      },
                      "NotAfter": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": null,
                        "xmlname": "notAfter"
                      },
                      "EventId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "eventId"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "eventsSet"
                },
                "Actions": {
                  "shape_name": "VolumeStatusActionsList",
                  "type": "list",
                  "members": {
                    "shape_name": "VolumeStatusAction",
                    "type": "structure",
                    "members": {
                      "Code": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "code"
                      },
                      "Description": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "description"
                      },
                      "EventType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "eventType"
                      },
                      "EventId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "eventId"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "actionsSet"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": null,
            "xmlname": "volumeStatusSet"
          },
          "NextToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "nextToken"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Describes the status of a volume.\n        </p>\n    "
    },
    "DescribeVolumes": {
      "name": "DescribeVolumes",
      "input": {
        "shape_name": "DescribeVolumesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeIds": {
            "shape_name": "VolumeIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "VolumeId"
            },
            "documentation": "\n        <p>\n        The optional list of EBS volumes to describe.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for Volumes.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to describe the Amazon EBS volumes that you own.\n        If you do not specify any volume IDs, all the volumes you own will be\n        described.\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeVolumesResult",
        "type": "structure",
        "members": {
          "Volumes": {
            "shape_name": "VolumeList",
            "type": "list",
            "members": {
              "shape_name": "Volume",
              "type": "structure",
              "members": {
                "VolumeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The unique ID of this volume.\n        </p>\n    ",
                  "xmlname": "volumeId"
                },
                "Size": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        The size of this volume, in gigabytes.\n        </p>\n   ",
                  "xmlname": "size"
                },
                "SnapshotId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Optional snapshot from which this volume was created.\n        </p>\n\n    ",
                  "xmlname": "snapshotId"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Availability zone in which this volume was created.\n        </p>\n    ",
                  "xmlname": "availabilityZone"
                },
                "State": {
                  "shape_name": "VolumeState",
                  "type": "string",
                  "enum": [
                    "creating",
                    "available",
                    "in-use",
                    "deleting",
                    "error"
                  ],
                  "documentation": "\n        <p>\n        State of this volume (e.g., creating, available).\n        </p>\n    ",
                  "xmlname": "status"
                },
                "CreateTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        Timestamp when volume creation was initiated.\n        </p>\n    ",
                  "xmlname": "createTime"
                },
                "Attachments": {
                  "shape_name": "VolumeAttachmentList",
                  "type": "list",
                  "members": {
                    "shape_name": "VolumeAttachment",
                    "type": "structure",
                    "members": {
                      "VolumeId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "volumeId"
                      },
                      "InstanceId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "instanceId"
                      },
                      "Device": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        How the device is exposed to the instance (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                        "xmlname": "device"
                      },
                      "State": {
                        "shape_name": "VolumeAttachmentState",
                        "type": "string",
                        "enum": [
                          "attaching",
                          "attached",
                          "detaching",
                          "detached"
                        ],
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "status"
                      },
                      "AttachTime": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": "\n        <p>\n        Timestamp when this attachment initiated.\n        </p>\n    ",
                        "xmlname": "attachTime"
                      },
                      "DeleteOnTermination": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": "\n    `   <p>\n        Whether this volume will be deleted or not when the associated instance is\n        terminated.\n        </p>\n    ",
                        "xmlname": "deleteOnTermination"
                      }
                    },
                    "documentation": "\n        <p>\n        Specifies the details of a how an EC2 EBS volume is attached to an instance.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Information on what this volume is attached to.\n        </p>\n    ",
                  "xmlname": "attachmentSet"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the Volume.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "VolumeType": {
                  "shape_name": "VolumeType",
                  "type": "string",
                  "enum": [
                    "standard",
                    "io1"
                  ],
                  "documentation": null,
                  "xmlname": "volumeType"
                },
                "Iops": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": null,
                  "xmlname": "iops"
                }
              },
              "documentation": "\n        <p>\n        Represents an Amazon <i>Elastic Block Storage</i> (EBS) volume.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of described EBS volumes.\n        </p>\n    ",
            "xmlname": "volumeSet"
          }
        },
        "documentation": "\n        <p>\n        The result of describing your EBS volumes.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Describes the status of the indicated volume or, in lieu of any specified,\n        all volumes belonging to the caller. Volumes that have been deleted\n        are not described.\n        </p>\n    "
    },
    "DescribeVpcAttribute": {
      "name": "DescribeVpcAttribute",
      "input": {
        "shape_name": "DescribeVpcAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Attribute": {
            "shape_name": "VpcAttributeName",
            "type": "string",
            "enum": [
              "enableDnsSupport",
              "enableDnsHostnames"
            ],
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "DescribeVpcAttributeResult",
        "type": "structure",
        "members": {
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "vpcId"
          },
          "EnableDnsSupport": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "Boolean value",
            "xmlname": "enableDnsSupport"
          },
          "EnableDnsHostnames": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value",
                "xmlname": "value"
              }
            },
            "documentation": "Boolean value",
            "xmlname": "enableDnsHostnames"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DescribeVpcs": {
      "name": "DescribeVpcs",
      "input": {
        "shape_name": "DescribeVpcsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpcIds": {
            "shape_name": "VpcIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "VpcId"
            },
            "documentation": "\n\t\t<p>\n\t\tThe ID of a VPC you want information about.\n\t\t</p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n\t\t<p>\n\t\tA list of filters used to match properties for VPCs.\n\t\tFor a complete reference to the available filter keys for this operation, see the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n\t\t</p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeVpcsResult",
        "type": "structure",
        "members": {
          "Vpcs": {
            "shape_name": "VpcList",
            "type": "list",
            "members": {
              "shape_name": "Vpc",
              "type": "structure",
              "members": {
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the VPC.\n        </p>\n    ",
                  "xmlname": "vpcId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Describes the current state of the VPC.\n        The state of the subnet may be either\n        <code>pending</code> or\n        <code>available</code>.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "CidrBlock": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the CIDR block the VPC covers.\n        </p>\n    ",
                  "xmlname": "cidrBlock"
                },
                "DhcpOptionsId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the set of DHCP options\n        associated with the VPC.\n        Contains a value of <code>default</code>\n        if the default options are associated with\n        the VPC.\n        </p>\n    ",
                  "xmlname": "dhcpOptionsId"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the VPC.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "InstanceTenancy": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC.\n        </p>\n    ",
                  "xmlname": "instanceTenancy"
                },
                "IsDefault": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "isDefault"
                }
              },
              "documentation": "\n        <p>\n        The Vpc data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "vpcSet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Gives you information about your VPCs. You can filter the results to return information only about\n        VPCs that match criteria you specify.\n\t\t</p>\n\t\t<p>\n\t\tFor example, you could ask to get information about a particular VPC or VPCs (or all your VPCs)\n\t\tonly if the VPC's state is available. You can specify multiple filters (e.g., the VPC uses one of\n\t\tseveral sets of DHCP options, and the VPC's state is available). The result includes information\n\t\tfor a particular VPC only if the VPC matches all your filters.\n\t\t</p>\n\t\t<p>\n\t\tIf there's no match, no special message is returned; the response is simply empty. The following\n\t\ttable shows the available filters.\n        </p>\n    "
    },
    "DescribeVpnConnections": {
      "name": "DescribeVpnConnections",
      "input": {
        "shape_name": "DescribeVpnConnectionsRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnConnectionIds": {
            "shape_name": "VpnConnectionIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "VpnConnectionId"
            },
            "documentation": "\n        <p>\n        A VPN connection ID. More than one may be specified per request.\n        </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n\t\t<p>\n\t\tA list of filters used to match properties for VPN Connections.\n\t\tFor a complete reference to the available filter keys for this operation, see the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n\t\t</p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeVpnConnectionsResult",
        "type": "structure",
        "members": {
          "VpnConnections": {
            "shape_name": "VpnConnectionList",
            "type": "list",
            "members": {
              "shape_name": "VpnConnection",
              "type": "structure",
              "members": {
                "VpnConnectionId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the VPN gateway\n        at the VPC end of the VPN connection.\n        </p>\n    ",
                  "xmlname": "vpnConnectionId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Describes the current state of the VPN connection.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "CustomerGatewayConfiguration": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Contains configuration information in the native XML format\n        for the VPN connection's customer gateway.\n        </p>\n        <p>\n        This element is\n        always present in the CreateVpnConnection response;\n        however, it's present in the DescribeVpnConnections response\n        only if the VPN connection is in the\n        <code>pending</code>\n        or\n        <code>available</code>\n        state.\n        </p>\n    ",
                  "xmlname": "customerGatewayConfiguration"
                },
                "Type": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the type of VPN connection.\n        </p>\n    ",
                  "xmlname": "type"
                },
                "CustomerGatewayId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies ID of the customer gateway at the end\n        of the VPN connection.\n        </p>\n    ",
                  "xmlname": "customerGatewayId"
                },
                "VpnGatewayId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specfies the ID of the VPN gateway at the\n        VPC end of the VPN connection.\n        </p>\n    ",
                  "xmlname": "vpnGatewayId"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the VpnConnection.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "VgwTelemetry": {
                  "shape_name": "VgwTelemetryList",
                  "type": "list",
                  "members": {
                    "shape_name": "VgwTelemetry",
                    "type": "structure",
                    "members": {
                      "OutsideIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "outsideIpAddress"
                      },
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "status"
                      },
                      "LastStatusChange": {
                        "shape_name": "DateTime",
                        "type": "timestamp",
                        "documentation": null,
                        "xmlname": "lastStatusChange"
                      },
                      "StatusMessage": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "statusMessage"
                      },
                      "AcceptedRouteCount": {
                        "shape_name": "Integer",
                        "type": "integer",
                        "documentation": null,
                        "xmlname": "acceptedRouteCount"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "vgwTelemetry"
                },
                "Options": {
                  "shape_name": "VpnConnectionOptions",
                  "type": "structure",
                  "members": {
                    "StaticRoutesOnly": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "staticRoutesOnly"
                    }
                  },
                  "documentation": null,
                  "xmlname": "options"
                },
                "Routes": {
                  "shape_name": "VpnStaticRouteList",
                  "type": "list",
                  "members": {
                    "shape_name": "VpnStaticRoute",
                    "type": "structure",
                    "members": {
                      "DestinationCidrBlock": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "destinationCidrBlock"
                      },
                      "Source": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "source"
                      },
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "state"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "routes"
                }
              },
              "documentation": "\n        <p>\n        The VpnConnection data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "vpnConnectionSet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Gives you information about your VPN connections.\n        </p>\n        <important>\n            <p>\n            We strongly recommend you use HTTPS when calling this operation because the response\n            contains sensitive cryptographic information for configuring your customer gateway.\n            </p>\n            <p>\n            You can filter the results to return information only about VPN connections that match criteria you\n            specify. For example, you could ask to get information about a particular VPN connection (or all) only if\n            the VPN's state is pending or available. You can specify multiple filters (e.g., the VPN connection\n            is associated with a particular VPN gateway, and the gateway's state is pending or available). The\n            result includes information for a particular VPN connection only if the VPN connection matches all your\n            filters. If there's no match, no special message is returned; the response is simply empty. The following\n            table shows the available filters.\n            </p>\n        </important>\n    "
    },
    "DescribeVpnGateways": {
      "name": "DescribeVpnGateways",
      "input": {
        "shape_name": "DescribeVpnGatewaysRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnGatewayIds": {
            "shape_name": "VpnGatewayIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "VpnGatewayId"
            },
            "documentation": "\n      <p>\n      A list of filters used to match properties for VPN Gateways.\n      For a complete reference to the available filter keys for this operation, see the\n      <a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n      </p>\n    ",
            "flattened": true
          },
          "Filters": {
            "shape_name": "FilterList",
            "type": "list",
            "members": {
              "shape_name": "Filter",
              "type": "structure",
              "members": {
                "Name": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       Specifies the name of the filter.\n       </p>\n   "
                },
                "Values": {
                  "shape_name": "ValueStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "Value"
                  },
                  "documentation": "\n       <p>\n       Contains one or more values for the filter.\n       </p>\n   ",
                  "flattened": true
                }
              },
              "documentation": "\n       <p>\n       A filter used to limit results when describing tags.\n       Multiple values can be specified per filter.\n       A tag must match at least one of the specified values for it to be\n       returned from an operation.\n       </p>\n       <p>\n       Wildcards can be included in filter values;\n       <code>*</code> specifies that zero or more characters\n       must match, and <code>?</code> specifies that exactly one\n       character must match.  Use a backslash to escape special characters.\n       For example, a filter value of <code>\\*amazon\\?\\\\</code>\n       specifies the literal string <code>*amazon?\\</code>.\n       </p>\n   ",
              "xmlname": "Filter"
            },
            "documentation": "\n\t\t<p>\n\t\tA list of filters used to match properties for VPN Gateways.\n\t\tFor a complete reference to the available filter keys for this operation, see the\n\t\t<a href=\"http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/\">Amazon EC2 API reference</a>.\n\t\t</p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": {
        "shape_name": "DescribeVpnGatewaysResult",
        "type": "structure",
        "members": {
          "VpnGateways": {
            "shape_name": "VpnGatewayList",
            "type": "list",
            "members": {
              "shape_name": "VpnGateway",
              "type": "structure",
              "members": {
                "VpnGatewayId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the ID of the VPN gateway.\n        </p>\n    ",
                  "xmlname": "vpnGatewayId"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Describes the current state of the VPN gateway.\n        Valid values are\n        <code>pending</code>,\n        <code>available</code>,\n        <code>deleting</code>,\n        and <code>deleted</code>.\n        </p>\n    ",
                  "xmlname": "state"
                },
                "Type": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the type of VPN connection the VPN gateway supports.\n        </p>\n    ",
                  "xmlname": "type"
                },
                "AvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the Availability Zone where the VPN gateway was created.\n        </p>\n    ",
                  "xmlname": "availabilityZone"
                },
                "VpcAttachments": {
                  "shape_name": "VpcAttachmentList",
                  "type": "list",
                  "members": {
                    "shape_name": "VpcAttachment",
                    "type": "structure",
                    "members": {
                      "VpcId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "vpcId"
                      },
                      "State": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "state"
                      }
                    },
                    "documentation": "\n        <p>\n\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Contains information about the VPCs attached to the VPN gateway.\n        </p>\n    ",
                  "xmlname": "attachments"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the VpnGateway.\n      </p>\n    ",
                  "xmlname": "tagSet"
                }
              },
              "documentation": "\n        <p>\n        The VpnGateway data type.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "vpnGatewaySet"
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tGives you information about your VPN gateways. You can filter the results to return information only\n\t\tabout VPN gateways that match criteria you specify.\n\t\t</p>\n\t\t<p>\n\t\tFor example, you could ask to get information about a particular VPN gateway (or all) only if the\n\t\tgateway's state is pending or available. You can specify multiple filters (e.g., the VPN gateway is\n\t\tin a particular Availability Zone and the gateway's state is pending or available).\n\t\t</p>\n\t\t<p>\n\t\tThe result includes information for a particular VPN gateway only if the gateway matches all your\n\t\tfilters. If there's no match, no special message is returned; the response is simply empty. The\n\t\tfollowing table shows the available filters.\n\t\t</p>\n    "
    },
    "DetachInternetGateway": {
      "name": "DetachInternetGateway",
      "input": {
        "shape_name": "DetachInternetGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InternetGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of the Internet gateway to detach.\n\t\t</p>\n    ",
            "required": true
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of the VPC.\n\t\t</p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tDetaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC.\n\t\tThe VPC must not contain any running instances with elastic IP addresses. For more information about\n\t\tyour VPC and Internet gateway, go to Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n\t\t<p>\n\t\tFor more information about Amazon Virtual Private Cloud and Internet gateways, go to the Amazon Virtual\n\t\tPrivate Cloud User Guide.\n\t\t</p>\n    "
    },
    "DetachNetworkInterface": {
      "name": "DetachNetworkInterface",
      "input": {
        "shape_name": "DetachNetworkInterfaceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AttachmentId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Force": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "DetachVolume": {
      "name": "DetachVolume",
      "input": {
        "shape_name": "DetachVolumeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the volume to detach.\n        </p>\n    ",
            "required": true
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance from which to detach the the specified volume.\n        </p>\n    "
          },
          "Device": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The device name to which the volume is attached on the specified\n        instance.\n        </p>\n    "
          },
          "Force": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n        Forces detachment if the previous detachment attempt did not occur cleanly\n        (logging into an instance, unmounting the volume, and detaching\n        normally).\n        </p>\n        <p>\n        This option can lead to data loss or a corrupted file system.\n        Use this option only as a last resort to detach a volume from a failed\n        instance.\n        The instance will not have an opportunity to flush file system caches nor\n        file system meta data.\n        If you use this option, you must perform file system check and repair\n        procedures.\n        </p>\n   "
          }
        },
        "documentation": "\n        <p>\n        A request to detaches an Amazon EBS volume from an instance.\n        </p>\n        <p>\n        Make sure to unmount any file systems on the device within your operating\n        system before detaching the volume.\n        Failure to unmount file systems, or otherwise properly release the device\n        from use, can result in lost data and will corrupt the file\n        system.\n        </p>\n    "
      },
      "output": {
        "shape_name": "VolumeAttachment",
        "type": "structure",
        "members": {
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "volumeId"
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "instanceId"
          },
          "Device": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        How the device is exposed to the instance (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
            "xmlname": "device"
          },
          "State": {
            "shape_name": "VolumeAttachmentState",
            "type": "string",
            "enum": [
              "attaching",
              "attached",
              "detaching",
              "detached"
            ],
            "documentation": "\n        <p>\n\n        </p>\n    ",
            "xmlname": "status"
          },
          "AttachTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        Timestamp when this attachment initiated.\n        </p>\n    ",
            "xmlname": "attachTime"
          },
          "DeleteOnTermination": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n    `   <p>\n        Whether this volume will be deleted or not when the associated instance is\n        terminated.\n        </p>\n    ",
            "xmlname": "deleteOnTermination"
          }
        },
        "documentation": "\n        <p>\n        The updated EBS volume attachment information after trying to detach the\n        volume from the specified instance.\n        </p>\n   ",
        "xmlname": "attachment"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Detach a previously attached volume from a running instance.\n        </p>\n    "
    },
    "DetachVpnGateway": {
      "name": "DetachVpnGateway",
      "input": {
        "shape_name": "DetachVpnGatewayRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VpnGatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPN gateway to detach from the VPC.\n        </p>\n    ",
            "required": true
          },
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the VPC to detach the VPN gateway from.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Detaches a VPN gateway from a VPC. You do this if you're planning to turn off the VPC and not use it\n        anymore. You can confirm a VPN gateway has been completely detached from a VPC by describing\n        the VPN gateway (any attachments to the VPN gateway are also described).\n        </p>\n        <p>\n        You must wait for the attachment's state to switch to detached before you can delete the VPC or\n        attach a different VPC to the VPN gateway.\n        </p>\n    "
    },
    "DisableVgwRoutePropagation": {
      "name": "DisableVgwRoutePropagation",
      "input": {
        "shape_name": "DisableVgwRoutePropagationRequest",
        "type": "structure",
        "members": {
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "GatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "DisassociateAddress": {
      "name": "DisassociateAddress",
      "input": {
        "shape_name": "DisassociateAddressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "PublicIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The elastic IP address that you are disassociating from the instance.\n        </p>\n    "
          },
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n\t\tAssociation ID corresponding to the VPC elastic IP address you want to disassociate.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        A request to disassociate an elastic IP address from the instance to\n        which it is assigned.\n        </p>\n        <p>\n        This is an idempotent operation. If you enter it more than once, Amazon\n        EC2 will not return an error.\n        </p>\n   "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The DisassociateAddress operation disassociates the specified elastic IP\n        address from the instance to which it is assigned. This is an idempotent\n        operation. If you enter it more than once, Amazon EC2 does not return an error.\n        </p>\n    "
    },
    "DisassociateRouteTable": {
      "name": "DisassociateRouteTable",
      "input": {
        "shape_name": "DisassociateRouteTableRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe association ID representing the current association between the route table and subnet.\n\t\t</p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tDisassociates a subnet from a route table.\n\t\t</p>\n\t\t<p>\n\t\tAfter you perform this action, the subnet no longer uses the routes in the route table. Instead it uses\n\t\tthe routes in the VPC's main route table. For more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n    "
    },
    "EnableVgwRoutePropagation": {
      "name": "EnableVgwRoutePropagation",
      "input": {
        "shape_name": "EnableVgwRoutePropagationRequest",
        "type": "structure",
        "members": {
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "GatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "EnableVolumeIO": {
      "name": "EnableVolumeIO",
      "input": {
        "shape_name": "EnableVolumeIORequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Enable IO on the volume after an event has occured. \n        </p>\n    "
    },
    "GetConsoleOutput": {
      "name": "GetConsoleOutput",
      "input": {
        "shape_name": "GetConsoleOutputRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance for which you want console output.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to retrieve the console output for the specified instance.\n        </p>\n        <p>\n        Instance console output is buffered and posted shortly after\n        instance boot, reboot, and termination.\n        Amazon EC2 preserves the most recent 64 KB output which will be available\n        for at least one hour after the most recent post.\n        </p>\n    "
      },
      "output": {
        "shape_name": "GetConsoleOutputResult",
        "type": "structure",
        "members": {
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance whose console output was requested.\n        </p>\n    ",
            "xmlname": "instanceId"
          },
          "Timestamp": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        The time the output was last updated.\n        </p>\n    ",
            "xmlname": "timestamp"
          },
          "Output": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The console output, Base64 encoded.\n        </p>\n    ",
            "xmlname": "output"
          }
        },
        "documentation": "\n        <p>\n        The result of the GetConsoleOutput operation.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The GetConsoleOutput operation retrieves console output for the specified\n        instance.\n        </p>\n        <p>\n        Instance console output is buffered and posted shortly after instance boot,\n        reboot, and termination. Amazon EC2 preserves the most recent 64 KB output\n        which will be available for at least one hour after the most recent post.\n        </p>\n    "
    },
    "GetPasswordData": {
      "name": "GetPasswordData",
      "input": {
        "shape_name": "GetPasswordDataRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance for which you want the Windows administrator\n        password.\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to retrieve the encrypted administrator password for the\n        instances running Windows.\n        </p>\n        <p>\n        The Windows password is only generated the first time an AMI is launched.\n        It is not generated for rebundled AMIs or after the password is\n        changed on an instance.\n        The password is encrypted using the key pair that you provided.\n        </p>\n    "
      },
      "output": {
        "shape_name": "GetPasswordDataResult",
        "type": "structure",
        "members": {
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance whose Windows administrator password was\n        requested.\n        </p>\n    ",
            "xmlname": "instanceId"
          },
          "Timestamp": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        The time the data was last updated.\n        </p>\n    ",
            "xmlname": "timestamp"
          },
          "PasswordData": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The Windows administrator password of the specified instance.\n        </p>\n    ",
            "xmlname": "passwordData"
          }
        },
        "documentation": "\n        <p>\n        The result of the GetPasswordData operation.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Retrieves the encrypted administrator password for the instances running\n        Windows.\n        </p>\n\n        <note>\n        The Windows password is only generated the first time an AMI is\n        launched. It is not generated for rebundled AMIs or after\n        the password is changed on an instance.\n        The password is encrypted using the key pair that you provided.\n        </note>\n    "
    },
    "ImportInstance": {
      "name": "ImportInstance",
      "input": {
        "shape_name": "ImportInstanceRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "LaunchSpecification": {
            "shape_name": "ImportInstanceLaunchSpecification",
            "type": "structure",
            "members": {
              "Architecture": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "GroupNames": {
                "shape_name": "SecurityGroupStringList",
                "type": "list",
                "members": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "GroupName"
                },
                "documentation": null,
                "flattened": true
              },
              "AdditionalInfo": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "UserData": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "InstanceType": {
                "shape_name": "InstanceType",
                "type": "string",
                "enum": [
                  "t1.micro",
                  "m1.small",
                  "m1.medium",
                  "m1.large",
                  "m1.xlarge",
                  "m2.xlarge",
                  "m2.2xlarge",
                  "m2.4xlarge",
                  "m3.xlarge",
                  "m3.2xlarge",
                  "c1.medium",
                  "c1.xlarge",
                  "hi1.4xlarge",
                  "hs1.8xlarge",
                  "cc1.4xlarge",
                  "cc2.8xlarge",
                  "cg1.4xlarge",
                  "cr1.8xlarge"
                ],
                "documentation": null
              },
              "Placement": {
                "shape_name": "Placement",
                "type": "structure",
                "members": {
                  "AvailabilityZone": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    "
                  },
                  "GroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    "
                  },
                  "Tenancy": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC. A value of default means instances can be launched with any tenancy; a value of dedicated means all instances launched into the VPC will be launched as dedicated tenancy regardless of the tenancy assigned to the instance at launch.\n        </p>\n    "
                  }
                },
                "documentation": "\n        <p>\n        Describes where an Amazon EC2 instance is running within an Amazon EC2 region.\n        </p>\n    "
              },
              "Monitoring": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null
              },
              "SubnetId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "InstanceInitiatedShutdownBehavior": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "PrivateIpAddress": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              }
            },
            "documentation": null
          },
          "DiskImages": {
            "shape_name": "DiskImageList",
            "type": "list",
            "members": {
              "shape_name": "DiskImage",
              "type": "structure",
              "members": {
                "Image": {
                  "shape_name": "DiskImageDetail",
                  "type": "structure",
                  "members": {
                    "Format": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "required": true
                    },
                    "Bytes": {
                      "shape_name": "Long",
                      "type": "long",
                      "documentation": null,
                      "required": true
                    },
                    "ImportManifestUrl": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "required": true
                    }
                  },
                  "documentation": null
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                },
                "Volume": {
                  "shape_name": "VolumeDetail",
                  "type": "structure",
                  "members": {
                    "Size": {
                      "shape_name": "Long",
                      "type": "long",
                      "documentation": null,
                      "required": true
                    }
                  },
                  "documentation": null
                }
              },
              "documentation": null,
              "xmlname": "DiskImage"
            },
            "documentation": null,
            "flattened": true
          },
          "Platform": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ImportInstanceResult",
        "type": "structure",
        "members": {
          "ConversionTask": {
            "shape_name": "ConversionTask",
            "type": "structure",
            "members": {
              "ConversionTaskId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true,
                "xmlname": "conversionTaskId"
              },
              "ExpirationTime": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "expirationTime"
              },
              "ImportInstance": {
                "shape_name": "ImportInstanceTaskDetails",
                "type": "structure",
                "members": {
                  "Volumes": {
                    "shape_name": "ImportInstanceVolumeDetailSet",
                    "type": "list",
                    "members": {
                      "shape_name": "ImportInstanceVolumeDetailItem",
                      "type": "structure",
                      "members": {
                        "BytesConverted": {
                          "shape_name": "Long",
                          "type": "long",
                          "documentation": null,
                          "required": true,
                          "xmlname": "bytesConverted"
                        },
                        "AvailabilityZone": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "availabilityZone"
                        },
                        "Image": {
                          "shape_name": "DiskImageDescription",
                          "type": "structure",
                          "members": {
                            "Format": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "format"
                            },
                            "Size": {
                              "shape_name": "Long",
                              "type": "long",
                              "documentation": null,
                              "required": true,
                              "xmlname": "size"
                            },
                            "ImportManifestUrl": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "importManifestUrl"
                            },
                            "Checksum": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "checksum"
                            }
                          },
                          "documentation": null,
                          "required": true,
                          "xmlname": "image"
                        },
                        "Volume": {
                          "shape_name": "DiskImageVolumeDescription",
                          "type": "structure",
                          "members": {
                            "Size": {
                              "shape_name": "Long",
                              "type": "long",
                              "documentation": null,
                              "xmlname": "size"
                            },
                            "Id": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "id"
                            }
                          },
                          "documentation": null,
                          "required": true,
                          "xmlname": "volume"
                        },
                        "Status": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "status"
                        },
                        "StatusMessage": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "statusMessage"
                        },
                        "Description": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "description"
                        }
                      },
                      "documentation": null,
                      "xmlname": "item"
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "volumes"
                  },
                  "InstanceId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "instanceId"
                  },
                  "Platform": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "platform"
                  },
                  "Description": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "description"
                  }
                },
                "documentation": null,
                "xmlname": "importInstance"
              },
              "ImportVolume": {
                "shape_name": "ImportVolumeTaskDetails",
                "type": "structure",
                "members": {
                  "BytesConverted": {
                    "shape_name": "Long",
                    "type": "long",
                    "documentation": null,
                    "required": true,
                    "xmlname": "bytesConverted"
                  },
                  "AvailabilityZone": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "required": true,
                    "xmlname": "availabilityZone"
                  },
                  "Description": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "description"
                  },
                  "Image": {
                    "shape_name": "DiskImageDescription",
                    "type": "structure",
                    "members": {
                      "Format": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "format"
                      },
                      "Size": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "required": true,
                        "xmlname": "size"
                      },
                      "ImportManifestUrl": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "importManifestUrl"
                      },
                      "Checksum": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "checksum"
                      }
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "image"
                  },
                  "Volume": {
                    "shape_name": "DiskImageVolumeDescription",
                    "type": "structure",
                    "members": {
                      "Size": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "xmlname": "size"
                      },
                      "Id": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "id"
                      }
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "volume"
                  }
                },
                "documentation": null,
                "xmlname": "importVolume"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true,
                "xmlname": "state"
              },
              "StatusMessage": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "statusMessage"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              }
            },
            "documentation": null,
            "xmlname": "conversionTask"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ImportKeyPair": {
      "name": "ImportKeyPair",
      "input": {
        "shape_name": "ImportKeyPairRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n    <p>\n    The unique name for the key pair.\n    </p>\n   ",
            "required": true
          },
          "PublicKeyMaterial": {
            "shape_name": "String",
            "type": "blob",
            "documentation": "\n    <p>\n    The public key portion of the key pair being imported.\n    </p>\n   ",
            "required": true
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "output": {
        "shape_name": "ImportKeyPairResult",
        "type": "structure",
        "members": {
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n    <p>\n    The specified unique key pair name.\n    </p>\n   ",
            "xmlname": "keyName"
          },
          "KeyFingerprint": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n    <p>\n    The MD5 public key fingerprint as specified in section 4 of\n    <a href=\"http://tools.ietf.org/html/rfc4716\">\n    RFC4716\n    </a>.\n    </p>\n   ",
            "xmlname": "keyFingerprint"
          }
        },
        "documentation": "\n    <p></p>\n   "
      },
      "errors": [

      ],
      "documentation": "\n    <p>\n    Imports the public key from an RSA key pair created with a third-party tool.\n    This operation differs from <a>CreateKeyPair</a> as the private key is never\n    transferred between the caller and AWS servers.\n    </p>\n    <p>\n    RSA key pairs are easily created on Microsoft Windows and Linux OS systems using\n    the <code>ssh-keygen</code> command line tool provided with the standard OpenSSH\n    installation.  Standard library support for RSA key pair creation is also available\n    for Java, Ruby, Python, and many other programming languages.\n    </p>\n    <p>The following formats are supported:</p>\n    <ul>\n        <li>\n        OpenSSH public key format,\n        </li>\n        <li>\n        Base64 encoded DER format.\n        </li>\n        <li>\n        SSH public key file format as specified in\n        <a href=\"http://tools.ietf.org/html/rfc4716\">\n        RFC4716\n        </a>.\n        </li>\n    </ul>\n   "
    },
    "ImportVolume": {
      "name": "ImportVolume",
      "input": {
        "shape_name": "ImportVolumeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "Image": {
            "shape_name": "DiskImageDetail",
            "type": "structure",
            "members": {
              "Format": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true
              },
              "Bytes": {
                "shape_name": "Long",
                "type": "long",
                "documentation": null,
                "required": true
              },
              "ImportManifestUrl": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true
              }
            },
            "documentation": null
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "Volume": {
            "shape_name": "VolumeDetail",
            "type": "structure",
            "members": {
              "Size": {
                "shape_name": "Long",
                "type": "long",
                "documentation": null,
                "required": true
              }
            },
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ImportVolumeResult",
        "type": "structure",
        "members": {
          "ConversionTask": {
            "shape_name": "ConversionTask",
            "type": "structure",
            "members": {
              "ConversionTaskId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true,
                "xmlname": "conversionTaskId"
              },
              "ExpirationTime": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "expirationTime"
              },
              "ImportInstance": {
                "shape_name": "ImportInstanceTaskDetails",
                "type": "structure",
                "members": {
                  "Volumes": {
                    "shape_name": "ImportInstanceVolumeDetailSet",
                    "type": "list",
                    "members": {
                      "shape_name": "ImportInstanceVolumeDetailItem",
                      "type": "structure",
                      "members": {
                        "BytesConverted": {
                          "shape_name": "Long",
                          "type": "long",
                          "documentation": null,
                          "required": true,
                          "xmlname": "bytesConverted"
                        },
                        "AvailabilityZone": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "availabilityZone"
                        },
                        "Image": {
                          "shape_name": "DiskImageDescription",
                          "type": "structure",
                          "members": {
                            "Format": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "format"
                            },
                            "Size": {
                              "shape_name": "Long",
                              "type": "long",
                              "documentation": null,
                              "required": true,
                              "xmlname": "size"
                            },
                            "ImportManifestUrl": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "importManifestUrl"
                            },
                            "Checksum": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "checksum"
                            }
                          },
                          "documentation": null,
                          "required": true,
                          "xmlname": "image"
                        },
                        "Volume": {
                          "shape_name": "DiskImageVolumeDescription",
                          "type": "structure",
                          "members": {
                            "Size": {
                              "shape_name": "Long",
                              "type": "long",
                              "documentation": null,
                              "xmlname": "size"
                            },
                            "Id": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "required": true,
                              "xmlname": "id"
                            }
                          },
                          "documentation": null,
                          "required": true,
                          "xmlname": "volume"
                        },
                        "Status": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "required": true,
                          "xmlname": "status"
                        },
                        "StatusMessage": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "statusMessage"
                        },
                        "Description": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "description"
                        }
                      },
                      "documentation": null,
                      "xmlname": "item"
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "volumes"
                  },
                  "InstanceId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "instanceId"
                  },
                  "Platform": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "platform"
                  },
                  "Description": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "description"
                  }
                },
                "documentation": null,
                "xmlname": "importInstance"
              },
              "ImportVolume": {
                "shape_name": "ImportVolumeTaskDetails",
                "type": "structure",
                "members": {
                  "BytesConverted": {
                    "shape_name": "Long",
                    "type": "long",
                    "documentation": null,
                    "required": true,
                    "xmlname": "bytesConverted"
                  },
                  "AvailabilityZone": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "required": true,
                    "xmlname": "availabilityZone"
                  },
                  "Description": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "description"
                  },
                  "Image": {
                    "shape_name": "DiskImageDescription",
                    "type": "structure",
                    "members": {
                      "Format": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "format"
                      },
                      "Size": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "required": true,
                        "xmlname": "size"
                      },
                      "ImportManifestUrl": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "importManifestUrl"
                      },
                      "Checksum": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "checksum"
                      }
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "image"
                  },
                  "Volume": {
                    "shape_name": "DiskImageVolumeDescription",
                    "type": "structure",
                    "members": {
                      "Size": {
                        "shape_name": "Long",
                        "type": "long",
                        "documentation": null,
                        "xmlname": "size"
                      },
                      "Id": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true,
                        "xmlname": "id"
                      }
                    },
                    "documentation": null,
                    "required": true,
                    "xmlname": "volume"
                  }
                },
                "documentation": null,
                "xmlname": "importVolume"
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "required": true,
                "xmlname": "state"
              },
              "StatusMessage": {
                "shape_name": "String",
                "type": "string",
                "documentation": null,
                "xmlname": "statusMessage"
              },
              "Tags": {
                "shape_name": "TagList",
                "type": "list",
                "members": {
                  "shape_name": "Tag",
                  "type": "structure",
                  "members": {
                    "Key": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                      "xmlname": "key"
                    },
                    "Value": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                      "xmlname": "value"
                    }
                  },
                  "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                  "xmlname": "item"
                },
                "documentation": null,
                "xmlname": "tagSet"
              }
            },
            "documentation": null,
            "xmlname": "conversionTask"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ModifyImageAttribute": {
      "name": "ModifyImageAttribute",
      "input": {
        "shape_name": "ModifyImageAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the AMI whose attribute you want to modify.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the AMI attribute you want to modify.\n        </p>\n        <p>\n        Available attributes: <code>launchPermission</code>, <code>productCodes</code>\n        </p>\n    "
          },
          "OperationType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The type of operation being requested.\n        </p>\n        <p>\n        Available operation types: <code>add</code>, <code>remove</code>\n        </p>\n    "
          },
          "UserIds": {
            "shape_name": "UserIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "UserId"
            },
            "documentation": "\n        <p>\n        The AWS user ID being added to or removed from the list of users with\n        launch permissions for this AMI.\n        Only valid when the launchPermission attribute is being modified.\n        </p>\n    ",
            "flattened": true
          },
          "UserGroups": {
            "shape_name": "UserGroupStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "UserGroup"
            },
            "documentation": "\n        <p>\n        The user group being added to or removed from the list of user groups\n        with launch permissions for this AMI.\n        Only valid when the launchPermission attribute is being modified.\n        </p>\n        <p>\n        Available user groups: <code>all</code>\n        </p>\n    ",
            "flattened": true
          },
          "ProductCodes": {
            "shape_name": "ProductCodeStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ProductCode"
            },
            "documentation": "\n        <p>\n        The list of product codes being added to or removed from the specified\n        AMI.\n        Only valid when the productCodes attribute is being modified.\n        </p>\n    ",
            "flattened": true
          },
          "Value": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The value of the attribute being modified.\n        Only valid when the description attribute is being modified.\n        </p>\n    "
          },
          "LaunchPermission": {
            "shape_name": "LaunchPermissionModifications",
            "type": "structure",
            "members": {
              "Add": {
                "shape_name": "LaunchPermissionList",
                "type": "list",
                "members": {
                  "shape_name": "LaunchPermission",
                  "type": "structure",
                  "members": {
                    "UserId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AWS user ID of the user involved in this launch permission.\n        </p>\n    "
                    },
                    "Group": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AWS group of the user involved in this launch permission.\n        </p>\n        <p>\n        Available groups: <code>all</code>\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        Describes a permission to launch an Amazon Machine Image (AMI).\n        </p>\n    "
                },
                "documentation": null,
                "flattened": true
              },
              "Remove": {
                "shape_name": "LaunchPermissionList",
                "type": "list",
                "members": {
                  "shape_name": "LaunchPermission",
                  "type": "structure",
                  "members": {
                    "UserId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AWS user ID of the user involved in this launch permission.\n        </p>\n    "
                    },
                    "Group": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AWS group of the user involved in this launch permission.\n        </p>\n        <p>\n        Available groups: <code>all</code>\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        Describes a permission to launch an Amazon Machine Image (AMI).\n        </p>\n    "
                },
                "documentation": null,
                "flattened": true
              }
            },
            "documentation": null
          },
          "Description": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          }
        },
        "documentation": "\n        <p>\n        A request to modify an attribute of an Amazon Machine Image (AMI).\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The ModifyImageAttribute operation modifies an attribute of an AMI.\n        </p>\n    "
    },
    "ModifyInstanceAttribute": {
      "name": "ModifyInstanceAttribute",
      "input": {
        "shape_name": "ModifyInstanceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the instance whose attribute is being modified.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "InstanceAttributeName",
            "type": "string",
            "enum": [
              "instanceType",
              "kernel",
              "ramdisk",
              "userData",
              "disableApiTermination",
              "instanceInitiatedShutdownBehavior",
              "rootDeviceName",
              "blockDeviceMapping",
              "productCodes",
              "sourceDestCheck",
              "groupSet",
              "ebsOptimized"
            ],
            "documentation": "\n        <p>\n        The name of the attribute being modified.\n        </p>\n        <p>\n        Available attribute names: <code>instanceType</code>, <code>kernel</code>, <code>ramdisk</code>,\n        <code>userData</code>, <code>disableApiTermination</code>, <code>instanceInitiatedShutdownBehavior</code>,\n        <code>rootDevice</code>, <code>blockDeviceMapping</code>\n        </p>\n    "
          },
          "Value": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The new value of the instance attribute being modified.\n        </p>\n        <p>\n        Only valid when <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>,\n        <code>disableApiTermination</code> or <code>instanceInitiateShutdownBehavior</code> is specified\n        as the attribute being modified.\n        </p>\n    "
          },
          "BlockDeviceMappings": {
            "shape_name": "InstanceBlockDeviceMappingSpecificationList",
            "type": "list",
            "members": {
              "shape_name": "InstanceBlockDeviceMappingSpecification",
              "type": "structure",
              "members": {
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The device name (e.g., <code>/dev/sdh</code>) at which the block device is exposed on\n        the instance.\n        </p>\n    "
                },
                "Ebs": {
                  "shape_name": "EbsInstanceBlockDeviceSpecification",
                  "type": "structure",
                  "members": {
                    "VolumeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the EBS volume that should be mounted as a block device on an\n        Amazon EC2 instance.\n        </p>\n    "
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        The EBS instance block device specification describing the EBS block\n        device to map to the specified device name on a running\n        instance.\n        </p>\n    "
                },
                "VirtualName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The virtual device name.\n        </p>\n    "
                },
                "NoDevice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        When set to the empty string, specifies that the device name in this\n        object should not be mapped to any real device.\n        </p>\n    "
                }
              },
              "documentation": "\n        <p>\n        Specifies how an instance's block devices should be mapped on a running\n        instance.\n        </p>\n    ",
              "xmlname": "BlockDeviceMapping"
            },
            "documentation": "\n        <p>\n        The new block device mappings for the instance whose attributes are being\n        modified.\n        </p>\n        <p>\n        Only valid when blockDeviceMapping is specified as the attribute being\n        modified.\n        </p>\n   ",
            "flattened": true
          },
          "SourceDestCheck": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          },
          "DisableApiTermination": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          },
          "InstanceType": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "Kernel": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "Ramdisk": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "UserData": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "blob",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "InstanceInitiatedShutdownBehavior": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "Groups": {
            "shape_name": "GroupIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "GroupId"
            },
            "documentation": null,
            "flattened": true
          },
          "EbsOptimized": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          }
        },
        "documentation": "\n        <p>\n        A request to modify an attribute of an Amazon EC2 instance. Only one\n        attribute can be changed per request.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Modifies an attribute of an instance.\n        </p>\n    "
    },
    "ModifyNetworkInterfaceAttribute": {
      "name": "ModifyNetworkInterfaceAttribute",
      "input": {
        "shape_name": "ModifyNetworkInterfaceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "Description": {
            "shape_name": "AttributeValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "String",
                "type": "string",
                "documentation": "String value"
              }
            },
            "documentation": "String value"
          },
          "SourceDestCheck": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          },
          "Groups": {
            "shape_name": "SecurityGroupIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": null,
            "flattened": true
          },
          "Attachment": {
            "shape_name": "NetworkInterfaceAttachmentChanges",
            "type": "structure",
            "members": {
              "AttachmentId": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "DeleteOnTermination": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null
              }
            },
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "ModifySnapshotAttribute": {
      "name": "ModifySnapshotAttribute",
      "input": {
        "shape_name": "ModifySnapshotAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the EBS snapshot whose attributes are being modified.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "SnapshotAttributeName",
            "type": "string",
            "enum": [
              "productCodes",
              "createVolumePermission"
            ],
            "documentation": "\n        <p>\n        The name of the attribute being modified.\n        </p>\n        <p>\n        Available attribute names: <code>createVolumePermission</code>\n        </p>\n    "
          },
          "OperationType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The operation to perform on the attribute.\n        </p>\n        <p>\n        Available operation names: <code>add</code>, <code>remove</code>\n        </p>\n    "
          },
          "UserIds": {
            "shape_name": "UserIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "UserId"
            },
            "documentation": "\n        <p>\n        The AWS user IDs to add to or remove from the list of users that have\n        permission\n        to create EBS volumes from the specified snapshot. Currently supports\n        \"all\".\n        </p>\n        <note>\n        Only valid when the <code>createVolumePermission</code> attribute is being modified.\n        </note>\n    ",
            "flattened": true
          },
          "GroupNames": {
            "shape_name": "GroupNameStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "UserGroup"
            },
            "documentation": "\n        <p>\n        The AWS group names to add to or remove from the list of groups that have\n        permission\n        to create EBS volumes from the specified snapshot. Currently supports\n        \"all\".\n        </p>\n        <note>\n        Only valid when the <code>createVolumePermission</code> attribute is being modified.\n        </note>\n    ",
            "flattened": true
          },
          "CreateVolumePermission": {
            "shape_name": "CreateVolumePermissionModifications",
            "type": "structure",
            "members": {
              "Add": {
                "shape_name": "CreateVolumePermissionList",
                "type": "list",
                "members": {
                  "shape_name": "CreateVolumePermission",
                  "type": "structure",
                  "members": {
                    "UserId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The user ID of the user that can create volumes from the snapshot.\n        </p>\n    "
                    },
                    "Group": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The group that is allowed to create volumes from the snapshot (currently\n        supports \"all\").\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        Describes a permission allowing either a user or group to create a new EBS\n        volume from a snapshot.\n        </p>\n    "
                },
                "documentation": null,
                "flattened": true
              },
              "Remove": {
                "shape_name": "CreateVolumePermissionList",
                "type": "list",
                "members": {
                  "shape_name": "CreateVolumePermission",
                  "type": "structure",
                  "members": {
                    "UserId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The user ID of the user that can create volumes from the snapshot.\n        </p>\n    "
                    },
                    "Group": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The group that is allowed to create volumes from the snapshot (currently\n        supports \"all\").\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        Describes a permission allowing either a user or group to create a new EBS\n        volume from a snapshot.\n        </p>\n    "
                },
                "documentation": null,
                "flattened": true
              }
            },
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        A request to modify an EBS snapshot's attributes. Only one attribute\n        can be changed per request.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Adds or remove permission settings for the specified snapshot.\n        </p>\n    "
    },
    "ModifyVolumeAttribute": {
      "name": "ModifyVolumeAttribute",
      "input": {
        "shape_name": "ModifyVolumeAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "VolumeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "AutoEnableIO": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "ModifyVpcAttribute": {
      "name": "ModifyVpcAttribute",
      "input": {
        "shape_name": "ModifyVpcAttributeRequest",
        "type": "structure",
        "members": {
          "VpcId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "EnableDnsSupport": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          },
          "EnableDnsHostnames": {
            "shape_name": "AttributeBooleanValue",
            "type": "structure",
            "members": {
              "Value": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "Boolean value"
              }
            },
            "documentation": "Boolean value"
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "MonitorInstances": {
      "name": "MonitorInstances",
      "input": {
        "shape_name": "MonitorInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of Amazon EC2 instances on which to enable monitoring.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to enable monitoring for a running instance.\n        </p>\n    "
      },
      "output": {
        "shape_name": "MonitorInstancesResult",
        "type": "structure",
        "members": {
          "InstanceMonitorings": {
            "shape_name": "InstanceMonitoringList",
            "type": "list",
            "members": {
              "shape_name": "InstanceMonitoring",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Instance ID.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "Monitoring": {
                  "shape_name": "Monitoring",
                  "type": "structure",
                  "members": {
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The state of monitoring on an Amazon EC2 instance (ex: enabled,\n        disabled).\n        </p>\n    ",
                      "xmlname": "state"
                    }
                  },
                  "documentation": "\n        <p>\n        Monitoring state for the associated instance.\n        </p>\n    ",
                  "xmlname": "monitoring"
                }
              },
              "documentation": "\n        <p>\n        Represents the monitoring state of an EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        A list of updated monitoring information for the instances specified in\n        the request.\n        </p>\n    ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of enabling monitoring on a set of Amazon EC2 instances.\n        Contains the updated monitoring status for each instance\n        specified in the request.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Enables monitoring for a running instance.\n        </p>\n    "
    },
    "PurchaseReservedInstancesOffering": {
      "name": "PurchaseReservedInstancesOffering",
      "input": {
        "shape_name": "PurchaseReservedInstancesOfferingRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ReservedInstancesOfferingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of the Reserved Instances offering being purchased.\n        </p>\n    ",
            "required": true
          },
          "InstanceCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        The number of Reserved Instances to purchase.\n        </p>\n    ",
            "required": true
          },
          "LimitPrice": {
            "shape_name": "ReservedInstanceLimitPrice",
            "type": "structure",
            "members": {
              "Amount": {
                "shape_name": "Double",
                "type": "double",
                "documentation": null
              },
              "CurrencyCode": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              }
            },
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        Purchases a Reserved Instance for use with your account.\n        </p>\n        <p>\n        With Amazon EC2\n        Reserved Instances, you purchase\n        the right to launch Amazon EC2 instances for a period of time (without\n        getting insufficient capacity errors)\n        and pay a lower usage rate for the actual time used.\n        </p>\n    "
      },
      "output": {
        "shape_name": "PurchaseReservedInstancesOfferingResult",
        "type": "structure",
        "members": {
          "ReservedInstancesId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of the Reserved Instances purchased for your account.\n        </p>\n    ",
            "xmlname": "reservedInstancesId"
          }
        },
        "documentation": "\n        <p>\n        The result of purchasing a Reserved Instances offering.\n        Contains the new, unique ID of the Reserved Instances purchased for your\n        account.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The PurchaseReservedInstancesOffering operation purchases a\n        Reserved Instance for use with your account. With Amazon EC2\n        Reserved Instances, you purchase the right to launch Amazon EC2\n        instances for a period of time (without getting insufficient\n        capacity errors) and pay a lower usage rate for the\n        actual time used.\n        </p>\n    "
    },
    "RebootInstances": {
      "name": "RebootInstances",
      "input": {
        "shape_name": "RebootInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of instances to terminate.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to reboot one or more instances.\n        </p>\n        <p>\n        This operation is asynchronous; it only queues a request to reboot the\n        specified instances.\n        The operation will succeed if the instances are valid and belong to you.\n        Requests to reboot terminated instances are ignored.\n        </p>\n        <note>\n        If a Linux/UNIX instance does not cleanly shut down within four\n        minutes, Amazon EC2 will perform a hard reboot.\n        </note>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The RebootInstances operation requests a reboot of one or more instances. This\n        operation is asynchronous; it only queues a request to reboot the specified\n        instance(s). The operation will succeed if the instances are valid and belong\n        to the user. Requests to reboot terminated instances are ignored.\n        </p>\n    "
    },
    "RegisterImage": {
      "name": "RegisterImage",
      "input": {
        "shape_name": "RegisterImageRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageLocation": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        The full path to your AMI manifest in Amazon S3 storage.\n   "
          },
          "Name": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name to give the new Amazon Machine Image.\n        </p>\n        <p>\n        Constraints: 3-128 alphanumeric characters, parenthesis (<code>()</code>), commas (<code>,</code>), slashes\n        (<code>/</code>), dashes (<code>-</code>), or underscores(<code>_</code>)\n        </p>\n   "
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        The description describing the new AMI.\n   "
          },
          "Architecture": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        The architecture of the image.\n        <p>\n        Valid Values: <code>i386</code>, <code>x86_64</code>\n        </p>\n   "
          },
          "KernelId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        The optional ID of a specific kernel to register with the new AMI.\n    "
          },
          "RamdiskId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The optional ID of a specific ramdisk to register with the new AMI.\n        </p>\n        <p>\n        Some kernels require additional drivers at launch. Check the kernel\n        requirements for information on whether you need to specify a\n        RAM disk.\n        </p>\n    "
          },
          "RootDeviceName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The root device name (e.g., <code>/dev/sda1</code>).\n        </p>\n    "
          },
          "BlockDeviceMappings": {
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list",
            "members": {
              "shape_name": "BlockDeviceMapping",
              "type": "structure",
              "members": {
                "VirtualName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    "
                },
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    "
                },
                "Ebs": {
                  "shape_name": "EbsBlockDevice",
                  "type": "structure",
                  "members": {
                    "SnapshotId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    "
                    },
                    "VolumeSize": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    "
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    "
                    },
                    "VolumeType": {
                      "shape_name": "VolumeType",
                      "type": "string",
                      "enum": [
                        "standard",
                        "io1"
                      ],
                      "documentation": null
                    },
                    "Iops": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null
                    }
                  },
                  "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    "
                },
                "NoDevice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    "
                }
              },
              "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
              "xmlname": "BlockDeviceMapping"
            },
            "documentation": "\n        <p>\n        The block device mappings for the new AMI, which specify how different\n        block devices (ex: EBS volumes and ephemeral drives) will be\n        exposed on instances launched from the new image.\n        </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to register an AMI with Amazon EC2. Images must be registered\n        before they can be launched.\n        To launch instances, use the <a>RunInstances</a> operation.\n        </p>\n        <p>\n        Each AMI is associated with an unique ID which is provided by the Amazon\n        EC2 service through this operation.\n        If needed, you can deregister an AMI at any time.\n        </p>\n        <note>\n            <p>\n            AMIs backed by Amazon EBS are automatically registered when you\n            create the image.\n            However, you can use this to register a snapshot of an instance backed by\n            Amazon EBS.\n            Amazon EBS snapshots are not guaranteed to be bootable. For information on\n            creating AMIs backed by Amazon EBS,\n            go to the Amazon Elastic Compute Cloud Developer Guide or Amazon Elastic\n            Compute Cloud User Guide.\n            </p>\n        </note>\n        <p>\n        Any modifications to an AMI backed by Amazon S3 invalidates this\n        registration.\n        If you make changes to an image, deregister the previous image and\n        register the new image.\n        </p>\n   "
      },
      "output": {
        "shape_name": "RegisterImageResult",
        "type": "structure",
        "members": {
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the new Amazon Machine Image (AMI).\n        </p>\n    ",
            "xmlname": "imageId"
          }
        },
        "documentation": "\n        <p>\n        The result of registering a new Amazon Machine Image (AMI). Contains the\n        ID of the new image.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The RegisterImage operation registers an AMI with Amazon EC2. Images must be\n        registered before they can be launched. For more information, see RunInstances.\n        </p>\n        <p>\n        Each AMI is associated with an unique ID which is provided by the Amazon EC2\n        service through the RegisterImage operation. During registration, Amazon EC2\n        retrieves the specified image manifest from Amazon S3 and verifies that the\n        image is owned by the user registering the image.\n        </p>\n        <p>\n        The image manifest is retrieved once and stored within the Amazon EC2. Any\n        modifications to an image in Amazon S3 invalidates this registration. If you\n        make changes to an image, deregister the previous image and register the new\n        image. For more information, see DeregisterImage.\n        </p>\n    "
    },
    "ReleaseAddress": {
      "name": "ReleaseAddress",
      "input": {
        "shape_name": "ReleaseAddressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "PublicIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The elastic IP address that you are releasing from your account.\n        </p>\n    "
          },
          "AllocationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The allocation ID that AWS provided when you allocated the address for use with Amazon VPC.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        A request to release an elastic IP address associated with your\n        account.\n        </p>\n        <p>\n        If you run this operation on an elastic IP address that is already\n        released,\n        the address might be assigned to another account which will cause Amazon\n        EC2 to return an error.\n        </p>\n        <note>\n        Releasing an IP address automatically disassociates it from any\n        instance with which it is associated.\n        To disassociate an IP address without releasing it, use the\n        DisassociateAddress operation.\n        </note>\n        <important>\n        Important: After releasing an elastic IP address, it is released to the IP\n        address pool and might no longer\n        be available to your account. Make sure to update your DNS records and\n        any servers or devices that communicate with the address.\n        </important>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The ReleaseAddress operation releases an elastic IP address associated with\n        your account.\n        </p>\n        <note>\n        Releasing an IP address automatically disassociates it from any instance with\n        which it is associated. For more information, see DisassociateAddress.\n        </note>\n        <important>\n            <p>\n            After releasing an elastic IP address, it is released to the IP address pool\n            and might no longer be available to your account. Make sure to update your DNS\n            records and any servers or devices that communicate with the address.\n            </p>\n            <p>\n            If you run this operation on an elastic IP address that is already released,\n            the address might be assigned to another account which will cause Amazon EC2 to\n            return an error.\n            </p>\n        </important>\n    "
    },
    "ReplaceNetworkAclAssociation": {
      "name": "ReplaceNetworkAclAssociation",
      "input": {
        "shape_name": "ReplaceNetworkAclAssociationRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID representing the current association between the original network ACL and the subnet.\n\t\t</p>\n    ",
            "required": true
          },
          "NetworkAclId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of the new ACL to associate with the subnet.\n\t\t</p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ReplaceNetworkAclAssociationResult",
        "type": "structure",
        "members": {
          "NewAssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "newAssociationId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tChanges which network ACL a subnet is associated with. By default when you create a subnet, it's\n\t\tautomatically associated with the default network ACL. For more information about network ACLs, go to\n\t\tNetwork ACLs in the Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n    "
    },
    "ReplaceNetworkAclEntry": {
      "name": "ReplaceNetworkAclEntry",
      "input": {
        "shape_name": "ReplaceNetworkAclEntryRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkAclId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tID of the ACL where the entry will be replaced.\n\t\t</p>\n    ",
            "required": true
          },
          "RuleNumber": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n\t\t<p>\n\t\tRule number of the entry to replace.\n\t\t</p>\n    ",
            "required": true
          },
          "Protocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tIP protocol the rule applies to. Valid Values: <code>tcp</code>, <code>udp</code>,\n\t\t<code>icmp</code> or an IP protocol number.\n\t\t</p>\n    ",
            "required": true
          },
          "RuleAction": {
            "shape_name": "RuleAction",
            "type": "string",
            "enum": [
              "allow",
              "deny"
            ],
            "documentation": "\n\t\t<p>\n\t\tWhether to allow or deny traffic that matches the rule.\n\t\t</p>\n    ",
            "required": true
          },
          "Egress": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n\t\t<p>\n\t\tWhether this rule applies to egress traffic from the subnet (<code>true</code>) or\n\t\tingress traffic (<code>false</code>).\n\t\t</p>\n    ",
            "required": true
          },
          "CidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe CIDR range to allow or deny, in CIDR notation (e.g., <code>172.16.0.0/24</code>).\n\t\t</p>\n    ",
            "required": true
          },
          "IcmpTypeCode": {
            "shape_name": "IcmpTypeCode",
            "type": "structure",
            "members": {
              "Type": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP type. A value of <code>-1</code> is a wildcard meaning all types. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    "
              },
              "Code": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n        For the ICMP protocol, the ICMP code. A value of <code>-1</code> is a wildcard meaning all codes. Required if specifying <code>icmp</code> for the protocol.\n        </p>\n    "
              }
            },
            "documentation": "\n    \t<p>ICMP values.</p>\n    ",
            "xmlname": "Icmp"
          },
          "PortRange": {
            "shape_name": "PortRange",
            "type": "structure",
            "members": {
              "From": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n       \tThe first port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    "
              },
              "To": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>\n       \tThe last port in the range. Required if specifying <code>tcp</code> or <code>udp</code> for the protocol.\n        </p>\n    "
              }
            },
            "documentation": "\n\t\t<p>Port ranges.</p>\n    "
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tReplaces an entry (i.e., rule) in a network ACL. For more information about network ACLs, go to\n\t\tNetwork ACLs in the Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n    "
    },
    "ReplaceRoute": {
      "name": "ReplaceRoute",
      "input": {
        "shape_name": "ReplaceRouteRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of the route table where the route will be replaced.\n\t\t</p>\n    ",
            "required": true
          },
          "DestinationCidrBlock": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe CIDR address block used for the destination match. For example: <code>0.0.0.0/0</code>. The value you\n\t\tprovide must match the CIDR of an existing route in the table.\n\t\t</p>\n    ",
            "required": true
          },
          "GatewayId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of a VPN or Internet gateway attached to your VPC.\n\t\t</p>\n    "
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of a NAT instance in your VPC.\n\t\t</p>\n    "
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tReplaces an existing route within a route table in a VPC. For more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n    "
    },
    "ReplaceRouteTableAssociation": {
      "name": "ReplaceRouteTableAssociation",
      "input": {
        "shape_name": "ReplaceRouteTableAssociationRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "AssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID representing the current association between the original route table and the subnet.\n\t\t</p>\n    ",
            "required": true
          },
          "RouteTableId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tThe ID of the new route table to associate with the subnet.\n\t\t</p>\n    ",
            "required": true
          }
        },
        "documentation": null
      },
      "output": {
        "shape_name": "ReplaceRouteTableAssociationResult",
        "type": "structure",
        "members": {
          "NewAssociationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "xmlname": "newAssociationId"
          }
        },
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tChanges the route table associated with a given subnet in a VPC. After you execute this action, the subnet\n\t\tuses the routes in the new route table it's associated with. For more information about route tables, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\">Route Tables</a>\n\t\tin the Amazon Virtual Private Cloud User Guide.\n\t\t</p>\n\t\t<p>\n\t\tYou can also use this to change which table is the main route table in the VPC. You just specify the main\n\t\troute table's association ID and the route table that you want to be the new main route table.\n\t\t</p>\n    "
    },
    "ReportInstanceStatus": {
      "name": "ReportInstanceStatus",
      "input": {
        "shape_name": "ReportInstanceStatusRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "Instances": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": null,
            "flattened": true
          },
          "Status": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "StartTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": null
          },
          "EndTime": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": null
          },
          "ReasonCodes": {
            "shape_name": "ReasonCodesList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "ReasonCode"
            },
            "documentation": null,
            "flattened": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "RequestSpotInstances": {
      "name": "RequestSpotInstances",
      "input": {
        "shape_name": "RequestSpotInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SpotPrice": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the maximum hourly price for any Spot Instance\n        launched to fulfill the request.\n        </p>\n    ",
            "required": true
          },
          "InstanceCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Specifies the maximum number of Spot Instances to launch.\n        </p>\n    "
          },
          "Type": {
            "shape_name": "SpotInstanceType",
            "type": "string",
            "enum": [
              "one-time",
              "persistent"
            ],
            "documentation": "\n        <p>\n        Specifies the Spot Instance type.\n        </p>\n    "
          },
          "ValidFrom": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        Defines the start date of the request.\n        </p>\n        <p>\n        If this is a one-time request,\n        the request becomes active at this date and time and remains\n        active until all instances launch, the request expires, or the\n        request is canceled. If the request is persistent, the request\n        becomes active at this date and time and remains active until\n        it expires or is canceled.\n        </p>\n    "
          },
          "ValidUntil": {
            "shape_name": "DateTime",
            "type": "timestamp",
            "documentation": "\n        <p>\n        End date of the request.\n        </p>\n        <p>\n        If this is a one-time request, the request remains active\n        until all instances launch, the request is canceled, or\n        this date is reached. If the request is persistent, it\n        remains active until it is canceled or this date and time\n        is reached.\n        </p>\n    "
          },
          "LaunchGroup": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the instance launch group. Launch groups are\n        Spot Instances that launch and terminate together.\n        </p>\n    "
          },
          "AvailabilityZoneGroup": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the Availability Zone group.\n        </p>\n        <p>\n        When specifying the same Availability Zone group for all\n        Spot Instance requests, all Spot Instances are launched\n        in the same Availability Zone.\n        </p>\n    "
          },
          "LaunchSpecification": {
            "shape_name": "LaunchSpecification",
            "type": "structure",
            "members": {
              "ImageId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The AMI ID.\n        </p>\n    "
              },
              "KeyName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    "
              },
              "UserData": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Optional data, specific to a user's application, to provide in the launch request.\n        All instances that collectively comprise the launch request have access to this data.\n        User data is never returned through API responses.\n        </p>\n    "
              },
              "AddressingType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
              },
              "InstanceType": {
                "shape_name": "InstanceType",
                "type": "string",
                "enum": [
                  "t1.micro",
                  "m1.small",
                  "m1.medium",
                  "m1.large",
                  "m1.xlarge",
                  "m2.xlarge",
                  "m2.2xlarge",
                  "m2.4xlarge",
                  "m3.xlarge",
                  "m3.2xlarge",
                  "c1.medium",
                  "c1.xlarge",
                  "hi1.4xlarge",
                  "hs1.8xlarge",
                  "cc1.4xlarge",
                  "cc2.8xlarge",
                  "cg1.4xlarge",
                  "cr1.8xlarge"
                ],
                "documentation": "\n        <p>\n        Specifies the instance type.\n        </p>\n    "
              },
              "Placement": {
                "shape_name": "SpotPlacement",
                "type": "structure",
                "members": {
                  "AvailabilityZone": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    "
                  },
                  "GroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    "
                  }
                },
                "documentation": "\n        <p>\n        Defines a placement item.\n        </p>\n    "
              },
              "KernelId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the kernel to select.\n        </p>\n    "
              },
              "RamdiskId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the ID of the RAM disk to select.\n        Some kernels require additional drivers at launch.\n        Check the kernel requirements for information on whether\n        or not you need to specify a RAM disk and search for the kernel ID.\n        </p>\n    "
              },
              "BlockDeviceMappings": {
                "shape_name": "BlockDeviceMappingList",
                "type": "list",
                "members": {
                  "shape_name": "BlockDeviceMapping",
                  "type": "structure",
                  "members": {
                    "VirtualName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    "
                    },
                    "DeviceName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    "
                    },
                    "Ebs": {
                      "shape_name": "EbsBlockDevice",
                      "type": "structure",
                      "members": {
                        "SnapshotId": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    "
                        },
                        "VolumeSize": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    "
                        },
                        "DeleteOnTermination": {
                          "shape_name": "Boolean",
                          "type": "boolean",
                          "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    "
                        },
                        "VolumeType": {
                          "shape_name": "VolumeType",
                          "type": "string",
                          "enum": [
                            "standard",
                            "io1"
                          ],
                          "documentation": null
                        },
                        "Iops": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": null
                        }
                      },
                      "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    "
                    },
                    "NoDevice": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    "
                    }
                  },
                  "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
                  "xmlname": "BlockDeviceMapping"
                },
                "documentation": "\n        <p>\n        Specifies how block devices are exposed to the instance.\n        Each mapping is made up of a virtualName and a deviceName.\n        </p>\n    ",
                "flattened": true
              },
              "MonitoringEnabled": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>\n        Enables monitoring for the instance.\n        </p>\n    "
              },
              "SubnetId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        Specifies the Amazon VPC subnet ID within which to launch the instance(s)\n        for Amazon Virtual Private Cloud.\n        </p>\n    "
              },
              "NetworkInterfaces": {
                "shape_name": "InstanceNetworkInterfaceSpecificationList",
                "type": "list",
                "members": {
                  "shape_name": "InstanceNetworkInterfaceSpecification",
                  "type": "structure",
                  "members": {
                    "NetworkInterfaceId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null
                    },
                    "DeviceIndex": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null
                    },
                    "SubnetId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null
                    },
                    "Description": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null
                    },
                    "PrivateIpAddress": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null
                    },
                    "Groups": {
                      "shape_name": "SecurityGroupIdStringList",
                      "type": "list",
                      "members": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "SecurityGroupId"
                      },
                      "documentation": null,
                      "flattened": true
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null
                    },
                    "PrivateIpAddresses": {
                      "shape_name": "PrivateIpAddressSpecificationList",
                      "type": "list",
                      "members": {
                        "shape_name": "PrivateIpAddressSpecification",
                        "type": "structure",
                        "members": {
                          "PrivateIpAddress": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "required": true
                          },
                          "Primary": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": null
                          }
                        },
                        "documentation": null
                      },
                      "documentation": null,
                      "flattened": true
                    },
                    "SecondaryPrivateIpAddressCount": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null
                    }
                  },
                  "documentation": null,
                  "xmlname": "NetworkInterface"
                },
                "documentation": null,
                "flattened": true
              },
              "IamInstanceProfile": {
                "shape_name": "IamInstanceProfileSpecification",
                "type": "structure",
                "members": {
                  "Arn": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null
                  },
                  "Name": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null
                  }
                },
                "documentation": null
              },
              "EbsOptimized": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null
              },
              "SecurityGroupIds": {
                "type": "list",
                "members": {
                  "type": "string",
                  "xmlname": "SecurityGroupId"
                },
                "flattened": true
              },
              "SecurityGroups": {
                "type": "list",
                "members": {
                  "type": "string",
                  "xmlname": "SecurityGroup"
                },
                "flattened": true
              }
            },
            "documentation": "\n        <p>\n        Specifies additional launch instance information.\n        </p>\n    "
          }
        },
        "documentation": "\n        <p>\n        The RequestSpotInstances data type.\n        </p>\n    "
      },
      "output": {
        "shape_name": "RequestSpotInstancesResult",
        "type": "structure",
        "members": {
          "SpotInstanceRequests": {
            "shape_name": "SpotInstanceRequestList",
            "type": "list",
            "members": {
              "shape_name": "SpotInstanceRequest",
              "type": "structure",
              "members": {
                "SpotInstanceRequestId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotInstanceRequestId"
                },
                "SpotPrice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "spotPrice"
                },
                "Type": {
                  "shape_name": "SpotInstanceType",
                  "type": "string",
                  "enum": [
                    "one-time",
                    "persistent"
                  ],
                  "documentation": null,
                  "xmlname": "type"
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "state"
                },
                "Fault": {
                  "shape_name": "SpotInstanceStateFault",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "code"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "message"
                    }
                  },
                  "documentation": null,
                  "xmlname": "fault"
                },
                "Status": {
                  "shape_name": "SpotInstanceStatus",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "code"
                    },
                    "UpdateTime": {
                      "shape_name": "DateTime",
                      "type": "timestamp",
                      "documentation": null,
                      "xmlname": "updateTime"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "message"
                    }
                  },
                  "documentation": null,
                  "xmlname": "status"
                },
                "ValidFrom": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "validFrom"
                },
                "ValidUntil": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "validUntil"
                },
                "LaunchGroup": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "launchGroup"
                },
                "AvailabilityZoneGroup": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "availabilityZoneGroup"
                },
                "LaunchSpecification": {
                  "shape_name": "LaunchSpecification",
                  "type": "structure",
                  "members": {
                    "ImageId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The AMI ID.\n        </p>\n    ",
                      "xmlname": "imageId"
                    },
                    "KeyName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    ",
                      "xmlname": "keyName"
                    },
                    "SecurityGroups": {
                      "shape_name": "GroupIdentifierList",
                      "type": "list",
                      "members": {
                        "shape_name": "GroupIdentifier",
                        "type": "structure",
                        "members": {
                          "GroupName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n\n        </p>\n    ",
                            "xmlname": "groupName"
                          },
                          "GroupId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "groupId"
                          }
                        },
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "groupSet"
                    },
                    "UserData": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Optional data, specific to a user's application, to provide in the launch request.\n        All instances that collectively comprise the launch request have access to this data.\n        User data is never returned through API responses.\n        </p>\n    ",
                      "xmlname": "userData"
                    },
                    "AddressingType": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    ",
                      "xmlname": "addressingType"
                    },
                    "InstanceType": {
                      "shape_name": "InstanceType",
                      "type": "string",
                      "enum": [
                        "t1.micro",
                        "m1.small",
                        "m1.medium",
                        "m1.large",
                        "m1.xlarge",
                        "m2.xlarge",
                        "m2.2xlarge",
                        "m2.4xlarge",
                        "m3.xlarge",
                        "m3.2xlarge",
                        "c1.medium",
                        "c1.xlarge",
                        "hi1.4xlarge",
                        "hs1.8xlarge",
                        "cc1.4xlarge",
                        "cc2.8xlarge",
                        "cg1.4xlarge",
                        "cr1.8xlarge"
                      ],
                      "documentation": "\n        <p>\n        Specifies the instance type.\n        </p>\n    ",
                      "xmlname": "instanceType"
                    },
                    "Placement": {
                      "shape_name": "SpotPlacement",
                      "type": "structure",
                      "members": {
                        "AvailabilityZone": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    ",
                          "xmlname": "availabilityZone"
                        },
                        "GroupName": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    ",
                          "xmlname": "groupName"
                        }
                      },
                      "documentation": "\n        <p>\n        Defines a placement item.\n        </p>\n    ",
                      "xmlname": "placement"
                    },
                    "KernelId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the ID of the kernel to select.\n        </p>\n    ",
                      "xmlname": "kernelId"
                    },
                    "RamdiskId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the ID of the RAM disk to select.\n        Some kernels require additional drivers at launch.\n        Check the kernel requirements for information on whether\n        or not you need to specify a RAM disk and search for the kernel ID.\n        </p>\n    ",
                      "xmlname": "ramdiskId"
                    },
                    "BlockDeviceMappings": {
                      "shape_name": "BlockDeviceMappingList",
                      "type": "list",
                      "members": {
                        "shape_name": "BlockDeviceMapping",
                        "type": "structure",
                        "members": {
                          "VirtualName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    ",
                            "xmlname": "virtualName"
                          },
                          "DeviceName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    ",
                            "xmlname": "deviceName"
                          },
                          "Ebs": {
                            "shape_name": "EbsBlockDevice",
                            "type": "structure",
                            "members": {
                              "SnapshotId": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    ",
                                "xmlname": "snapshotId"
                              },
                              "VolumeSize": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    ",
                                "xmlname": "volumeSize"
                              },
                              "DeleteOnTermination": {
                                "shape_name": "Boolean",
                                "type": "boolean",
                                "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                                "xmlname": "deleteOnTermination"
                              },
                              "VolumeType": {
                                "shape_name": "VolumeType",
                                "type": "string",
                                "enum": [
                                  "standard",
                                  "io1"
                                ],
                                "documentation": null,
                                "xmlname": "volumeType"
                              },
                              "Iops": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": null,
                                "xmlname": "iops"
                              }
                            },
                            "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    ",
                            "xmlname": "ebs"
                          },
                          "NoDevice": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    ",
                            "xmlname": "noDevice"
                          }
                        },
                        "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
                        "xmlname": "item"
                      },
                      "documentation": "\n        <p>\n        Specifies how block devices are exposed to the instance.\n        Each mapping is made up of a virtualName and a deviceName.\n        </p>\n    ",
                      "xmlname": "blockDeviceMapping"
                    },
                    "MonitoringEnabled": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Enables monitoring for the instance.\n        </p>\n    ",
                      "xmlname": "monitoringEnabled"
                    },
                    "SubnetId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Specifies the Amazon VPC subnet ID within which to launch the instance(s)\n        for Amazon Virtual Private Cloud.\n        </p>\n    ",
                      "xmlname": "subnetId"
                    },
                    "NetworkInterfaces": {
                      "shape_name": "InstanceNetworkInterfaceSpecificationList",
                      "type": "list",
                      "members": {
                        "shape_name": "InstanceNetworkInterfaceSpecification",
                        "type": "structure",
                        "members": {
                          "NetworkInterfaceId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "networkInterfaceId"
                          },
                          "DeviceIndex": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "deviceIndex"
                          },
                          "SubnetId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "subnetId"
                          },
                          "Description": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "description"
                          },
                          "PrivateIpAddress": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "privateIpAddress"
                          },
                          "Groups": {
                            "shape_name": "SecurityGroupIdStringList",
                            "type": "list",
                            "members": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "SecurityGroupId"
                            },
                            "documentation": null,
                            "xmlname": "SecurityGroupId"
                          },
                          "DeleteOnTermination": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": null,
                            "xmlname": "deleteOnTermination"
                          },
                          "PrivateIpAddresses": {
                            "shape_name": "PrivateIpAddressSpecificationList",
                            "type": "list",
                            "members": {
                              "shape_name": "PrivateIpAddressSpecification",
                              "type": "structure",
                              "members": {
                                "PrivateIpAddress": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "required": true,
                                  "xmlname": "privateIpAddress"
                                },
                                "Primary": {
                                  "shape_name": "Boolean",
                                  "type": "boolean",
                                  "documentation": null,
                                  "xmlname": "primary"
                                }
                              },
                              "documentation": null,
                              "xmlname": "item"
                            },
                            "documentation": null,
                            "xmlname": "privateIpAddressesSet"
                          },
                          "SecondaryPrivateIpAddressCount": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "secondaryPrivateIpAddressCount"
                          }
                        },
                        "documentation": null,
                        "xmlname": "item"
                      },
                      "documentation": null,
                      "xmlname": "networkInterfaceSet"
                    },
                    "IamInstanceProfile": {
                      "shape_name": "IamInstanceProfileSpecification",
                      "type": "structure",
                      "members": {
                        "Arn": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "arn"
                        },
                        "Name": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": null,
                          "xmlname": "name"
                        }
                      },
                      "documentation": null,
                      "xmlname": "iamInstanceProfile"
                    },
                    "EbsOptimized": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": null,
                      "xmlname": "ebsOptimized"
                    }
                  },
                  "documentation": "\n        <p>\n        The LaunchSpecificationType data type.\n        </p>\n    ",
                  "xmlname": "launchSpecification"
                },
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "instanceId"
                },
                "CreateTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": null,
                  "xmlname": "createTime"
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "productDescription"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for this spot instance request.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "LaunchedAvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n       <p>\n       The Availability Zone in which the bid is launched.\n       </p>\n   ",
                  "xmlname": "launchedAvailabilityZone"
                }
              },
              "documentation": null,
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        Contains a list of Spot Instance requests.\n        </p>\n    ",
            "xmlname": "spotInstanceRequestSet"
          }
        },
        "documentation": "\n        <p>\n        The RequestSpotInstancesResult data type.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Creates a Spot Instance request.\n        </p>\n        <p>\n        Spot Instances are instances that Amazon EC2 starts on\n        your behalf when the maximum price that you specify\n        exceeds the current Spot Price. Amazon EC2 periodically\n        sets the Spot Price based on available Spot Instance capacity\n        and current spot instance requests.\n        </p>\n        <p>\n        For conceptual information\n        about Spot Instances, refer to the\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide\n        </a>\n        or\n        <a hlink=\"http://docs.amazonwebservices.com/AWSEC2/2009-11-30/UserGuide/\">\n        Amazon Elastic Compute Cloud User Guide.\n        </a>\n        </p>\n    "
    },
    "ResetImageAttribute": {
      "name": "ResetImageAttribute",
      "input": {
        "shape_name": "ResetImageAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the AMI whose attribute is being reset.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the attribute being reset.\n        </p>\n        <p>\n        Available attribute names: <code>launchPermission</code>\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to reset an attribute on an <i>Amazon Machine Image</i> (AMI) back\n        to its default value.\n        Only one attribute can be reset per request.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The ResetImageAttribute operation resets an attribute of an AMI to its default\n        value.\n        </p>\n        <note>\n        The productCodes attribute cannot be reset.\n        </note>\n    "
    },
    "ResetInstanceAttribute": {
      "name": "ResetInstanceAttribute",
      "input": {
        "shape_name": "ResetInstanceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the Amazon EC2 instance whose attribute is being reset.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "InstanceAttributeName",
            "type": "string",
            "enum": [
              "instanceType",
              "kernel",
              "ramdisk",
              "userData",
              "disableApiTermination",
              "instanceInitiatedShutdownBehavior",
              "rootDeviceName",
              "blockDeviceMapping",
              "productCodes",
              "sourceDestCheck",
              "groupSet",
              "ebsOptimized"
            ],
            "documentation": "\n        <p>\n        The name of the attribute being reset.\n        </p>\n        <p>\n        Available attribute names: <code>kernel</code>, <code>ramdisk</code>\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to reset an attribute on an Amazon EC2 instance back to its\n        default value.\n        Only one attribute can be reset per request.\n        </p>\n   "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Resets an attribute of an instance to its default value.\n        </p>\n    "
    },
    "ResetNetworkInterfaceAttribute": {
      "name": "ResetNetworkInterfaceAttribute",
      "input": {
        "shape_name": "ResetNetworkInterfaceAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "SourceDestCheck": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "ResetSnapshotAttribute": {
      "name": "ResetSnapshotAttribute",
      "input": {
        "shape_name": "ResetSnapshotAttributeRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "SnapshotId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the snapshot whose attribute is being reset.\n        </p>\n    ",
            "required": true
          },
          "Attribute": {
            "shape_name": "SnapshotAttributeName",
            "type": "string",
            "enum": [
              "productCodes",
              "createVolumePermission"
            ],
            "documentation": "\n        <p>\n        The name of the attribute being reset.\n        </p>\n        <p>\n        Available attribute names: <code>createVolumePermission</code>\n        </p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>\n        A request to reset an attribute on a snapshot back to its default\n        value.\n        Only one attribute can be reset per request.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        Resets permission settings for the specified snapshot.\n        </p>\n    "
    },
    "RevokeSecurityGroupEgress": {
      "name": "RevokeSecurityGroupEgress",
      "input": {
        "shape_name": "RevokeSecurityGroupEgressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the VPC security group to modify.\n        </p>\n    ",
            "required": true
          },
          "SourceSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "SourceSecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "IpProtocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "FromPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "ToPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "CidrIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated.\n        </p>\n    "
          },
          "IpPermissions": {
            "shape_name": "IpPermissionList",
            "type": "list",
            "members": {
              "shape_name": "IpPermission",
              "type": "structure",
              "members": {
                "IpProtocol": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    "
                },
                "FromPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    "
                },
                "ToPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    "
                },
                "UserIdGroupPairs": {
                  "shape_name": "UserIdGroupPairList",
                  "type": "list",
                  "members": {
                    "shape_name": "UserIdGroupPair",
                    "type": "structure",
                    "members": {
                      "UserId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    "
                      },
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                    "xmlname": "Groups"
                  },
                  "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                  "flattened": true
                },
                "IpRanges": {
                  "shape_name": "IpRangeList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpRange",
                    "type": "structure",
                    "members": {
                      "CidrIp": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    "
                  },
                  "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                  "flattened": true
                }
              },
              "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    "
            },
            "documentation": "\n        <p>\n        List of IP permissions to authorize on the specified security group.  Specifying\n        permissions through IP permissions is the preferred way of authorizing permissions\n        since it offers more flexibility and control.\n        </p>\n    ",
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t<p>\n\t\tThis action applies only to security groups in a VPC. It doesn't work with EC2 security groups. For\n\t\tinformation about Amazon Virtual Private Cloud and VPC security groups, go to the Amazon Virtual\n\t\tPrivate Cloud User Guide.\n\t\t</p>\n\t\t<p>\n\t\tThe action removes one or more egress rules from a VPC security group. The values that you specify in\n\t\tthe revoke request (e.g., ports, etc.) must match the existing rule's values in order for the rule to\n\t\tbe revoked.\n\t\t</p>\n\t\t<p>\n\t\tEach rule consists of the protocol, and the CIDR range or destination security group. For the TCP and\n\t\tUDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol,\n\t\tyou must also specify the ICMP type and code.\n\t\t</p>\n\t\t<p>\n\t\tRule changes are propagated to instances within the security group as quickly as possible. However, a\n\t\tsmall delay might occur.\n\t\t</p>\n    "
    },
    "RevokeSecurityGroupIngress": {
      "name": "RevokeSecurityGroupIngress",
      "input": {
        "shape_name": "RevokeSecurityGroupIngressRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "GroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Name of the standard (EC2) security group to modify. The group must belong to your account. Can be used instead of GroupID for standard (EC2) security groups.\n        </p>\n    "
          },
          "GroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        ID of the standard (EC2) or VPC security group to modify. The group must belong to your account. Required for VPC security groups; can be used instead of GroupName for standard (EC2) security groups.\n        </p>\n    "
          },
          "SourceSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "SourceSecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "IpProtocol": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "FromPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "ToPort": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "CidrIp": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Deprecated\n        </p>\n    "
          },
          "IpPermissions": {
            "shape_name": "IpPermissionList",
            "type": "list",
            "members": {
              "shape_name": "IpPermission",
              "type": "structure",
              "members": {
                "IpProtocol": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The IP protocol of this permission.\n        </p>\n        <p>\n        Valid protocol values: <code>tcp</code>, <code>udp</code>, <code>icmp</code>\n        </p>\n    "
                },
                "FromPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        Start of port range for the TCP and UDP protocols, or an ICMP type number.\n        An ICMP type number of <code>-1</code> indicates a wildcard (i.e., any ICMP\n        type number).\n        </p>\n    "
                },
                "ToPort": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        End of port range for the TCP and UDP protocols, or an ICMP code. An ICMP\n        code of <code>-1</code> indicates a wildcard (i.e., any ICMP code).\n        </p>\n    "
                },
                "UserIdGroupPairs": {
                  "shape_name": "UserIdGroupPairList",
                  "type": "list",
                  "members": {
                    "shape_name": "UserIdGroupPair",
                    "type": "structure",
                    "members": {
                      "UserId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The AWS user ID of an account.\n        </p>\n    "
                      },
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        Name of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        ID of the security group in the specified AWS account. Cannot be used when specifying a CIDR IP address range.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS user ID identifying an AWS account, and the name of a security\n        group within that account.\n        </p>\n    ",
                    "xmlname": "Groups"
                  },
                  "documentation": "\n        <p>\n        The list of AWS user IDs and groups included in this permission.\n        </p>\n    ",
                  "flattened": true
                },
                "IpRanges": {
                  "shape_name": "IpRangeList",
                  "type": "list",
                  "members": {
                    "shape_name": "IpRange",
                    "type": "structure",
                    "members": {
                      "CidrIp": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The list of CIDR IP ranges.\n        </p>\n    "
                      }
                    },
                    "documentation": "\n        <p>\n        Contains a list of CIDR IP ranges.\n        </p>\n    "
                  },
                  "documentation": "\n        <p>\n        The list of CIDR IP ranges included in this permission.\n        </p>\n    ",
                  "flattened": true
                }
              },
              "documentation": "\n        <p>\n        An IP permission describing allowed incoming IP traffic to an Amazon EC2\n        security group.\n        </p>\n    "
            },
            "documentation": "\n        <p>\n        List of IP permissions to revoke on the specified security group.  For an IP permission\n        to be removed, it must exactly match one of the IP permissions you specify\n        in this list.  Specifying permissions through IP permissions is the preferred way of\n        revoking permissions since it offers more flexibility and control.\n        </p>\n    ",
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to revoke permissions from a security group.\n        The permissions used to revoke must be specified using the same values\n        used to grant the permissions.\n        </p>\n        <p>\n        Permissions are specified by IP protocol (TCP, UDP, or ICMP), the source of the\n        request (by IP range or an Amazon EC2 user-group pair),\n        the source and destination port ranges (for TCP and UDP), and the ICMP\n        codes and types (for ICMP).\n        </p>\n        <p>\n        Permission changes are quickly propagated to instances within the security\n        group.\n        However, depending on the number of instances in the group, a small delay\n        might occur.\n        </p>\n    "
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n        <p>\n        The RevokeSecurityGroupIngress operation revokes permissions from a security\n        group. The permissions used to revoke must be specified using the same values\n        used to grant the permissions.\n        </p>\n        <p>\n        Permissions are specified by IP protocol (TCP, UDP, or ICMP), the source of the\n        request (by IP range or an Amazon EC2 user-group pair), the source and\n        destination port ranges (for TCP and UDP), and the ICMP codes and types (for\n        ICMP).\n        </p>\n        <p>\n        Permission changes are quickly propagated to instances within the security\n        group. However, depending on the number of instances in the group, a small\n        delay might occur.\n        </p>\n    "
    },
    "RunInstances": {
      "name": "RunInstances",
      "input": {
        "shape_name": "RunInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "ImageId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Unique ID of a machine image, returned by a call to DescribeImages.\n        </p>\n    ",
            "required": true
          },
          "MinCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Minimum number of instances to launch. If the value is more than Amazon EC2 can\n        launch, no instances are launched at all.\n        </p>\n    ",
            "required": true
          },
          "MaxCount": {
            "shape_name": "Integer",
            "type": "integer",
            "documentation": "\n        <p>\n        Maximum number of instances to launch. If the value is more than Amazon EC2 can\n        launch, the largest possible number above minCount will be launched instead.\n        </p>\n        <p>\n        Between 1 and the maximum number allowed for your account (default: 20).\n        </p>\n    ",
            "required": true
          },
          "KeyName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The name of the key pair.\n        </p>\n    "
          },
          "SecurityGroups": {
            "shape_name": "SecurityGroupStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroup"
            },
            "documentation": "\n        <p>\n        The names of the security groups into which the instances will be launched.\n        </p>\n    ",
            "flattened": true
          },
          "SecurityGroupIds": {
            "shape_name": "SecurityGroupIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": null,
            "flattened": true
          },
          "UserData": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies additional information to make available to the instance(s).\n        </p>\n    "
          },
          "InstanceType": {
            "shape_name": "InstanceType",
            "type": "string",
            "enum": [
              "t1.micro",
              "m1.small",
              "m1.medium",
              "m1.large",
              "m1.xlarge",
              "m2.xlarge",
              "m2.2xlarge",
              "m2.4xlarge",
              "m3.xlarge",
              "m3.2xlarge",
              "c1.medium",
              "c1.xlarge",
              "hi1.4xlarge",
              "hs1.8xlarge",
              "cc1.4xlarge",
              "cc2.8xlarge",
              "cg1.4xlarge",
              "cr1.8xlarge"
            ],
            "documentation": "\n        <p>\n        Specifies the instance type for the launched instances.\n        </p>\n    "
          },
          "Placement": {
            "shape_name": "Placement",
            "type": "structure",
            "members": {
              "AvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    "
              },
              "GroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    "
              },
              "Tenancy": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC. A value of default means instances can be launched with any tenancy; a value of dedicated means all instances launched into the VPC will be launched as dedicated tenancy regardless of the tenancy assigned to the instance at launch.\n        </p>\n    "
              }
            },
            "documentation": "\n        <p>\n        Specifies the placement constraints (Availability Zones) for launching the instances.\n        </p>\n    "
          },
          "KernelId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the kernel with which to launch the instance.\n        </p>\n    "
          },
          "RamdiskId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The ID of the RAM disk with which to launch the instance. Some kernels require\n        additional drivers at launch. Check the kernel requirements for information on\n        whether you need to specify a RAM disk. To find kernel requirements, go to the\n        Resource Center and search for the kernel ID.\n        </p>\n    "
          },
          "BlockDeviceMappings": {
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list",
            "members": {
              "shape_name": "BlockDeviceMapping",
              "type": "structure",
              "members": {
                "VirtualName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the virtual device name.\n        </p>\n    "
                },
                "DeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name (e.g., <code>/dev/sdh</code>).\n        </p>\n    "
                },
                "Ebs": {
                  "shape_name": "EbsBlockDevice",
                  "type": "structure",
                  "members": {
                    "SnapshotId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The ID of the snapshot from which the volume will be created.\n        </p>\n    "
                    },
                    "VolumeSize": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        The size of the volume, in gigabytes.\n        </p>\n    "
                    },
                    "DeleteOnTermination": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    "
                    },
                    "VolumeType": {
                      "shape_name": "VolumeType",
                      "type": "string",
                      "enum": [
                        "standard",
                        "io1"
                      ],
                      "documentation": null
                    },
                    "Iops": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": null
                    }
                  },
                  "documentation": "\n        <p>\n        Specifies parameters used to automatically setup\n        Amazon EBS volumes when the instance is launched.\n        </p>\n    "
                },
                "NoDevice": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the device name to suppress during instance launch.\n        </p>\n    "
                }
              },
              "documentation": "\n        <p>\n        The BlockDeviceMappingItemType data type.\n        </p>\n    ",
              "xmlname": "BlockDeviceMapping"
            },
            "documentation": "\n        <p>\n        Specifies how block devices are exposed to the instance.\n        Each mapping is made up of a virtualName and a deviceName.\n        </p>\n    ",
            "flattened": true
          },
          "Monitoring": {
            "shape_name": "RunInstancesMonitoringEnabled",
            "type": "structure",
            "members": {
              "Enabled": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": null,
                "required": true
              }
            },
            "documentation": "\n        <p>\n        Enables monitoring for the instance.\n        </p>\n    "
          },
          "SubnetId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies the subnet ID within which to launch the instance(s) for Amazon Virtual\n        Private Cloud.\n        </p>\n    "
          },
          "DisableApiTermination": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>\n        Specifies whether the instance can be terminated using the APIs.\n        You must modify this attribute before you can terminate any \"locked\"\n        instances from the APIs.\n        </p>\n    "
          },
          "InstanceInitiatedShutdownBehavior": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        Specifies whether the instance's Amazon EBS volumes are stopped or terminated\n        when the instance is shut down.\n        </p>\n    "
          },
          "License": {
            "shape_name": "InstanceLicenseSpecification",
            "type": "structure",
            "members": {
              "Pool": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>\n        The license pool from which to take a license when starting\n        Amazon EC2 instances in the associated <code>RunInstances</code> request.\n        </p>\n    "
              }
            },
            "documentation": "\n        <p>\n        Specifies active licenses in use and attached to an Amazon EC2 instance.\n        </p>\n    "
          },
          "PrivateIpAddress": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        If you're using Amazon Virtual Private Cloud, you can optionally use this\n        parameter to assign the instance a specific available IP address from the subnet.\n        </p>\n    "
          },
          "ClientToken": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n\t\tUnique, case-sensitive identifier you provide to ensure\n\t\tidempotency of the request. For more information,\n\t\tgo to How to Ensure Idempotency in the\n\t\tAmazon Elastic Compute Cloud User Guide.\n\t\t</p>\n\t"
          },
          "AdditionalInfo": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n\t\t<p>\n      Do not use. Reserved for internal use.\n\t\t</p>\n\t"
          },
          "NetworkInterfaces": {
            "shape_name": "InstanceNetworkInterfaceSpecificationList",
            "type": "list",
            "members": {
              "shape_name": "InstanceNetworkInterfaceSpecification",
              "type": "structure",
              "members": {
                "NetworkInterfaceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                },
                "DeviceIndex": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": null
                },
                "SubnetId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                },
                "PrivateIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null
                },
                "Groups": {
                  "shape_name": "SecurityGroupIdStringList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "SecurityGroupId"
                  },
                  "documentation": null,
                  "flattened": true
                },
                "DeleteOnTermination": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null
                },
                "PrivateIpAddresses": {
                  "shape_name": "PrivateIpAddressSpecificationList",
                  "type": "list",
                  "members": {
                    "shape_name": "PrivateIpAddressSpecification",
                    "type": "structure",
                    "members": {
                      "PrivateIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "required": true
                      },
                      "Primary": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null
                      }
                    },
                    "documentation": null,
                    "xmlname": "PrivateIpAddressesSet"
                  },
                  "documentation": null,
                  "flattened": true
                },
                "SecondaryPrivateIpAddressCount": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": null
                }
              },
              "documentation": null,
              "xmlname": "NetworkInterface"
            },
            "documentation": null,
            "flattened": true
          },
          "IamInstanceProfile": {
            "shape_name": "IamInstanceProfileSpecification",
            "type": "structure",
            "members": {
              "Arn": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              },
              "Name": {
                "shape_name": "String",
                "type": "string",
                "documentation": null
              }
            },
            "documentation": null
          },
          "EbsOptimized": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        Launches a specified number of instances of an AMI for which you have\n        permissions.\n        </p>\n        <p>\n        If Amazon EC2 cannot launch the minimum number AMIs you request, no\n        instances will be launched.\n        If there is insufficient capacity to launch the maximum number of AMIs\n        you request, Amazon EC2 launches the minimum number specified\n        for each AMI and allocate the remaining available instances\n        using round robin.\n        </p>\n        <p>\n        You can provide an optional key pair ID for each image in the launch\n        request (created using the CreateKeyPair operation).\n        All instances that are created from images that use this key pair will\n        have access to the associated public key at boot.\n        You can use this key to provide secure access to an instance of an image\n        on a per-instance basis.\n        Amazon EC2 public images use this feature to provide secure access without\n        passwords.\n        </p>\n        <p>\n        <b>Important:</b> Launching public images without a key pair ID will leave them\n        inaccessible.\n        </p>\n        <p>\n        We strongly recommend using the 2.6.18 Xen stock kernel with High-CPU\n        and High-Memory instances.\n        Although the default Amazon EC2 kernels will work, the new kernels provide\n        greater stability and performance for these instance types.\n        </p>\n    "
      },
      "output": {
        "shape_name": "Reservation",
        "type": "structure",
        "members": {
          "ReservationId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of this reservation.\n        </p>\n    ",
            "xmlname": "reservationId"
          },
          "OwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The AWS Access Key ID of the user who owns the reservation.\n        </p>\n    ",
            "xmlname": "ownerId"
          },
          "RequesterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>\n        The unique ID of the user who requested the instances in this\n        reservation.\n        </p>\n    ",
            "xmlname": "requesterId"
          },
          "Groups": {
            "shape_name": "GroupIdentifierList",
            "type": "list",
            "members": {
              "shape_name": "GroupIdentifier",
              "type": "structure",
              "members": {
                "GroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "groupName"
                },
                "GroupId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "groupId"
                }
              },
              "documentation": "\n        <p>\n\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of security groups requested for the instances in this\n        reservation.\n        </p>\n    ",
            "xmlname": "groupSet"
          },
          "Instances": {
            "shape_name": "InstanceList",
            "type": "list",
            "members": {
              "shape_name": "Instance",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Unique ID of the instance launched.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "ImageId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Image ID of the AMI used to launch the instance.\n        </p>\n    ",
                  "xmlname": "imageId"
                },
                "State": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                  "xmlname": "instanceState"
                },
                "PrivateDnsName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The private DNS name assigned to the instance. This DNS name can only be used inside the\n        Amazon EC2 network. This element remains empty until the instance enters a running state.\n        </p>\n    ",
                  "xmlname": "privateDnsName"
                },
                "PublicDnsName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The public DNS name assigned to the instance. This DNS name is contactable from outside\n        the Amazon EC2 network. This element remains empty until the instance enters a running state.\n        </p>\n    ",
                  "xmlname": "dnsName"
                },
                "StateTransitionReason": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Reason for the most recent state transition. This might be an empty string.\n        </p>\n    ",
                  "xmlname": "reason"
                },
                "KeyName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        If this instance was launched with an associated key pair, this displays the key pair name.\n        </p>\n    ",
                  "xmlname": "keyName"
                },
                "AmiLaunchIndex": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>\n        The AMI launch index, which can be used to find this instance within the launch group.\n        </p>\n    ",
                  "xmlname": "amiLaunchIndex"
                },
                "ProductCodes": {
                  "shape_name": "ProductCodeList",
                  "type": "list",
                  "members": {
                    "shape_name": "ProductCode",
                    "type": "structure",
                    "members": {
                      "ProductCodeId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The unique ID of an AWS DevPay product code.\n        </p>\n   ",
                        "xmlname": "productCode"
                      },
                      "ProductCodeType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "type"
                      }
                    },
                    "documentation": "\n        <p>\n        An AWS DevPay product code.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Product codes attached to this instance.\n        </p>\n    ",
                  "xmlname": "productCodes"
                },
                "InstanceType": {
                  "shape_name": "InstanceType",
                  "type": "string",
                  "enum": [
                    "t1.micro",
                    "m1.small",
                    "m1.medium",
                    "m1.large",
                    "m1.xlarge",
                    "m2.xlarge",
                    "m2.2xlarge",
                    "m2.4xlarge",
                    "m3.xlarge",
                    "m3.2xlarge",
                    "c1.medium",
                    "c1.xlarge",
                    "hi1.4xlarge",
                    "hs1.8xlarge",
                    "cc1.4xlarge",
                    "cc2.8xlarge",
                    "cg1.4xlarge",
                    "cr1.8xlarge"
                  ],
                  "documentation": "\n        <p>\n        The instance type. For more information on instance types, please see\n        the\n        <a href=\"http://docs.amazonwebservices.com/AWSEC2/2009-07-15/DeveloperGuide/\">\n        Amazon Elastic Compute Cloud Developer Guide</a>.\n        </p>\n    ",
                  "xmlname": "instanceType"
                },
                "LaunchTime": {
                  "shape_name": "DateTime",
                  "type": "timestamp",
                  "documentation": "\n        <p>\n        The time this instance launched.\n        </p>\n    ",
                  "xmlname": "launchTime"
                },
                "Placement": {
                  "shape_name": "Placement",
                  "type": "structure",
                  "members": {
                    "AvailabilityZone": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The availability zone in which an Amazon EC2 instance runs.\n        </p>\n    ",
                      "xmlname": "availabilityZone"
                    },
                    "GroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The name of the <a>PlacementGroup</a> in which an Amazon EC2 instance runs.  Placement\n        groups are primarily used for launching High Performance Computing instances\n        in the same group to ensure fast connection speeds.\n        </p>\n    ",
                      "xmlname": "groupName"
                    },
                    "Tenancy": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The allowed tenancy of instances launched into the VPC. A value of default means instances can be launched with any tenancy; a value of dedicated means all instances launched into the VPC will be launched as dedicated tenancy regardless of the tenancy assigned to the instance at launch.\n        </p>\n    ",
                      "xmlname": "tenancy"
                    }
                  },
                  "documentation": "\n        <p>\n        The location where this instance launched.\n        </p>\n    ",
                  "xmlname": "placement"
                },
                "KernelId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Kernel associated with this instance.\n        </p>\n    ",
                  "xmlname": "kernelId"
                },
                "RamdiskId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        RAM disk associated with this instance.\n        </p>\n   ",
                  "xmlname": "ramdiskId"
                },
                "Platform": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Platform of the instance (e.g., Windows).\n        </p>\n   ",
                  "xmlname": "platform"
                },
                "Monitoring": {
                  "shape_name": "Monitoring",
                  "type": "structure",
                  "members": {
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The state of monitoring on an Amazon EC2 instance (ex: enabled,\n        disabled).\n        </p>\n    ",
                      "xmlname": "state"
                    }
                  },
                  "documentation": "\n        <p>\n        Monitoring status for this instance.\n        </p>\n    ",
                  "xmlname": "monitoring"
                },
                "SubnetId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the Amazon VPC subnet ID in which the instance is running.\n        </p>\n    ",
                  "xmlname": "subnetId"
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the Amazon VPC in which the instance is running.\n        </p>\n    ",
                  "xmlname": "vpcId"
                },
                "PrivateIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the private IP address that is assigned to the instance (Amazon VPC).\n        </p>\n    ",
                  "xmlname": "privateIpAddress"
                },
                "PublicIpAddress": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Specifies the IP address of the instance.\n        </p>\n    ",
                  "xmlname": "ipAddress"
                },
                "StateReason": {
                  "shape_name": "StateReason",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Reason code for the state change.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Message": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        Descriptive message for the state change.\n        </p>\n    ",
                      "xmlname": "message"
                    }
                  },
                  "documentation": "\n        <p>\n        The reason for the state change.\n        </p>\n    ",
                  "xmlname": "stateReason"
                },
                "Architecture": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The architecture of this instance.\n        </p>\n    ",
                  "xmlname": "architecture"
                },
                "RootDeviceType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The root device type used by the AMI. The AMI can use an Amazon EBS or\n        instance store root device.\n        </p>\n    ",
                  "xmlname": "rootDeviceType"
                },
                "RootDeviceName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The root device name (e.g., <code>/dev/sda1</code>).\n        </p>\n    ",
                  "xmlname": "rootDeviceName"
                },
                "BlockDeviceMappings": {
                  "shape_name": "InstanceBlockDeviceMappingList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceBlockDeviceMapping",
                    "type": "structure",
                    "members": {
                      "DeviceName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n        The device name (e.g., <code>/dev/sdh</code>) at which the block device is exposed on\n        the instance.\n        </p>\n    ",
                        "xmlname": "deviceName"
                      },
                      "Ebs": {
                        "shape_name": "EbsInstanceBlockDevice",
                        "type": "structure",
                        "members": {
                          "VolumeId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The ID of the EBS volume.\n        </p>\n    ",
                            "xmlname": "volumeId"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>\n        The status of the EBS volume.\n        </p>\n    ",
                            "xmlname": "status"
                          },
                          "AttachTime": {
                            "shape_name": "DateTime",
                            "type": "timestamp",
                            "documentation": "\n        <p>\n        The time at which the EBS volume was attached to the associated instance.\n        </p>\n    ",
                            "xmlname": "attachTime"
                          },
                          "DeleteOnTermination": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": "\n        <p>\n        Specifies whether the Amazon EBS volume is deleted on instance termination.\n        </p>\n    ",
                            "xmlname": "deleteOnTermination"
                          }
                        },
                        "documentation": "\n        <p>\n        The optional EBS device mapped to the specified device name.\n        </p>\n    ",
                        "xmlname": "ebs"
                      }
                    },
                    "documentation": "\n        <p>\n        Describes how block devices are mapped on an Amazon EC2 instance.\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": "\n        <p>\n        Block device mapping set.\n        </p>\n    ",
                  "xmlname": "blockDeviceMapping"
                },
                "VirtualizationType": {
                  "shape_name": "VirtualizationType",
                  "type": "string",
                  "enum": [
                    "hvm",
                    "paravirtual"
                  ],
                  "documentation": null,
                  "xmlname": "virtualizationType"
                },
                "InstanceLifecycle": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "instanceLifecycle"
                },
                "SpotInstanceRequestId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n\n        </p>\n    ",
                  "xmlname": "spotInstanceRequestId"
                },
                "License": {
                  "shape_name": "InstanceLicense",
                  "type": "structure",
                  "members": {
                    "Pool": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The license pool from which this license was used (ex: <code>'windows'</code>).\n        </p>\n    ",
                      "xmlname": "pool"
                    }
                  },
                  "documentation": "\n        <p>\n        Represents an active license in use and attached to an Amazon EC2 instance.\n        </p>\n    ",
                  "xmlname": "license"
                },
                "ClientToken": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "clientToken"
                },
                "Tags": {
                  "shape_name": "TagList",
                  "type": "list",
                  "members": {
                    "shape_name": "Tag",
                    "type": "structure",
                    "members": {
                      "Key": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's key.\n    </p>\n   ",
                        "xmlname": "key"
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n    <p>\n    The tag's value.\n    </p>\n   ",
                        "xmlname": "value"
                      }
                    },
                    "documentation": "\n    <p>\n    Represents metadata to associate with Amazon EC2 resources.\n    Each tag consists of a user-defined key and value.\n    Use tags to categorize EC2 resources, such as by purpose,\n    owner, or environment.\n    </p>\n   ",
                    "xmlname": "item"
                  },
                  "documentation": "\n      <p>\n      A list of tags for the Instance.\n      </p>\n    ",
                  "xmlname": "tagSet"
                },
                "SecurityGroups": {
                  "shape_name": "GroupIdentifierList",
                  "type": "list",
                  "members": {
                    "shape_name": "GroupIdentifier",
                    "type": "structure",
                    "members": {
                      "GroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>\n\n        </p>\n    ",
                        "xmlname": "groupName"
                      },
                      "GroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "groupId"
                      }
                    },
                    "documentation": "\n        <p>\n\n        </p>\n    ",
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "groupSet"
                },
                "SourceDestCheck": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "sourceDestCheck"
                },
                "Hypervisor": {
                  "shape_name": "HypervisorType",
                  "type": "string",
                  "enum": [
                    "ovm",
                    "xen"
                  ],
                  "documentation": null,
                  "xmlname": "hypervisor"
                },
                "NetworkInterfaces": {
                  "shape_name": "InstanceNetworkInterfaceList",
                  "type": "list",
                  "members": {
                    "shape_name": "InstanceNetworkInterface",
                    "type": "structure",
                    "members": {
                      "NetworkInterfaceId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "networkInterfaceId"
                      },
                      "SubnetId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "subnetId"
                      },
                      "VpcId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "vpcId"
                      },
                      "Description": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "description"
                      },
                      "OwnerId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "ownerId"
                      },
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "status"
                      },
                      "PrivateIpAddress": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "privateIpAddress"
                      },
                      "PrivateDnsName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "privateDnsName"
                      },
                      "SourceDestCheck": {
                        "shape_name": "Boolean",
                        "type": "boolean",
                        "documentation": null,
                        "xmlname": "sourceDestCheck"
                      },
                      "Groups": {
                        "shape_name": "GroupIdentifierList",
                        "type": "list",
                        "members": {
                          "shape_name": "GroupIdentifier",
                          "type": "structure",
                          "members": {
                            "GroupName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>\n\n        </p>\n    ",
                              "xmlname": "groupName"
                            },
                            "GroupId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "groupId"
                            }
                          },
                          "documentation": "\n        <p>\n\n        </p>\n    ",
                          "xmlname": "item"
                        },
                        "documentation": null,
                        "xmlname": "groupSet"
                      },
                      "Attachment": {
                        "shape_name": "InstanceNetworkInterfaceAttachment",
                        "type": "structure",
                        "members": {
                          "AttachmentId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "attachmentId"
                          },
                          "DeviceIndex": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": null,
                            "xmlname": "deviceIndex"
                          },
                          "Status": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "status"
                          },
                          "AttachTime": {
                            "shape_name": "DateTime",
                            "type": "timestamp",
                            "documentation": null,
                            "xmlname": "attachTime"
                          },
                          "DeleteOnTermination": {
                            "shape_name": "Boolean",
                            "type": "boolean",
                            "documentation": null,
                            "xmlname": "deleteOnTermination"
                          }
                        },
                        "documentation": null,
                        "xmlname": "attachment"
                      },
                      "Association": {
                        "shape_name": "InstanceNetworkInterfaceAssociation",
                        "type": "structure",
                        "members": {
                          "PublicIp": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "publicIp"
                          },
                          "PublicDnsName": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "publicDnsName"
                          },
                          "IpOwnerId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": null,
                            "xmlname": "ipOwnerId"
                          }
                        },
                        "documentation": null,
                        "xmlname": "association"
                      },
                      "PrivateIpAddresses": {
                        "shape_name": "InstancePrivateIpAddressList",
                        "type": "list",
                        "members": {
                          "shape_name": "InstancePrivateIpAddress",
                          "type": "structure",
                          "members": {
                            "PrivateIpAddress": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "privateIpAddress"
                            },
                            "PrivateDnsName": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": null,
                              "xmlname": "privateDnsName"
                            },
                            "Primary": {
                              "shape_name": "Boolean",
                              "type": "boolean",
                              "documentation": null,
                              "xmlname": "primary"
                            },
                            "Association": {
                              "shape_name": "InstanceNetworkInterfaceAssociation",
                              "type": "structure",
                              "members": {
                                "PublicIp": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "publicIp"
                                },
                                "PublicDnsName": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "publicDnsName"
                                },
                                "IpOwnerId": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": null,
                                  "xmlname": "ipOwnerId"
                                }
                              },
                              "documentation": null,
                              "xmlname": "association"
                            }
                          },
                          "documentation": null,
                          "xmlname": "item"
                        },
                        "documentation": null,
                        "xmlname": "privateIpAddressesSet"
                      }
                    },
                    "documentation": null,
                    "xmlname": "item"
                  },
                  "documentation": null,
                  "xmlname": "networkInterfaceSet"
                },
                "IamInstanceProfile": {
                  "shape_name": "IamInstanceProfile",
                  "type": "structure",
                  "members": {
                    "Arn": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "arn"
                    },
                    "Id": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "id"
                    }
                  },
                  "documentation": null,
                  "xmlname": "iamInstanceProfile"
                },
                "EbsOptimized": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": null,
                  "xmlname": "ebsOptimized"
                }
              },
              "documentation": "\n        <p>\n        Represents an Amazon EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of Amazon EC2 instances included in this reservation.\n        </p>\n    ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The newly created reservation, containing the new instances.\n        </p>\n    ",
        "xmlname": "reservation"
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The RunInstances operation launches a specified number of instances.\n        </p>\n        <p>\n        If Amazon EC2 cannot launch the minimum number AMIs you request, no instances\n        launch. If there is insufficient capacity to launch the maximum number of AMIs\n        you request, Amazon EC2 launches as many as possible to satisfy the requested\n        maximum values.\n        </p>\n        <p>\n        Every instance is launched in a security group. If you do not specify a\n        security group at launch, the instances start in your default security group.\n        For more information on creating security groups, see CreateSecurityGroup.\n        </p>\n        <p>\n        An optional instance type can be specified. For information about instance\n        types, see Instance Types.\n        </p>\n        <p>\n        You can provide an optional key pair ID for each image in the launch request\n        (for more information, see CreateKeyPair). All instances that are created from\n        images that use this key pair will have access to the associated public key at\n        boot. You can use this key to provide secure access to an instance of an image\n        on a per-instance basis. Amazon EC2 public images use this feature to provide\n        secure access without passwords.\n        </p>\n        <important>\n            <p>\n            Launching public images without a key pair ID will leave them inaccessible.\n            </p>\n            <p>\n            The public key material is made available to the instance at boot time by\n            placing it in the <code>openssh_id.pub</code> file on a logical device that is exposed to\n            the instance as <code>/dev/sda2</code> (the ephemeral store). The format of this file is\n            suitable for use as an entry within <code>~/.ssh/authorized_keys</code> (the OpenSSH\n            format). This can be done at boot (e.g., as part of <code>rc.local</code>) allowing for\n            secure access without passwords.\n            </p>\n            <p>\n            Optional user data can be provided in the launch request. All instances that\n            collectively comprise the launch request have access to this data For more\n            information, see Instance Metadata.\n            </p>\n        </important>\n        <note>\n        If any of the AMIs have a product code attached for which the user has not\n        subscribed, the RunInstances call will fail.\n        </note>\n        <important>\n            <p>\n            We strongly recommend using the 2.6.18 Xen stock kernel with the <code>c1.medium</code> and\n            <code>c1.xlarge</code> instances. Although the default Amazon EC2 kernels will work, the new\n            kernels provide greater stability and performance for these instance types. For\n            more information about kernels, see Kernels, RAM Disks, and Block Device\n            Mappings.\n            </p>\n        </important>\n    "
    },
    "StartInstances": {
      "name": "StartInstances",
      "input": {
        "shape_name": "StartInstancesRequest",
        "type": "structure",
        "members": {
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of Amazon EC2 instances to start.\n        </p>\n    ",
            "required": true,
            "flattened": true
          },
          "AdditionalInfo": {
            "shape_name": "String",
            "type": "string",
            "documentation": null
          },
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          }
        },
        "documentation": "\n        <p>\n        Starts an instance that uses an Amazon EBS volume as its root device.\n        </p>\n        <p>\n        Instances that use Amazon EBS volumes as their root devices can be quickly\n        stopped and started.\n        When an instance is stopped, the compute resources are released and you\n        are not billed for hourly instance usage.\n        However, your root partition Amazon EBS volume remains, continues to persist\n        your data, and you are charged for Amazon EBS volume usage.\n        You can restart your instance at any time.\n        </p>\n        <note>\n        Before stopping an instance, make sure it is in a state from which it\n        can be restarted.\n        Stopping an instance does not preserve data stored in RAM.\n        Performing this operation on an instance that uses an instance store as its root\n        device returns an error.\n        </note>\n    "
      },
      "output": {
        "shape_name": "StartInstancesResult",
        "type": "structure",
        "members": {
          "StartingInstances": {
            "shape_name": "InstanceStateChangeList",
            "type": "list",
            "members": {
              "shape_name": "InstanceStateChange",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The ID of the instance whose state changed.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "CurrentState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The current state of the specified instance.\n        </p>\n    ",
                  "xmlname": "currentState"
                },
                "PreviousState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The previous state of the specified instance.\n        </p>\n    ",
                  "xmlname": "previousState"
                }
              },
              "documentation": "\n        <p>\n        Represents a state change for a specific EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of the starting instances and details on how their state has\n        changed.\n        </p>\n   ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of calling the StartInstances operation.\n        Contains details on how the specified instances are changing state.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Starts an instance that uses an Amazon EBS volume as its root device.\n        Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started.\n        When an instance is stopped, the compute resources are released and you are not billed for hourly instance usage.\n        However, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage.\n        You can restart your instance at any time.\n        </p>\n        <note>\n            <p>\n            Performing this operation on an instance that\n            uses an instance store as its root device returns an error.\n            </p>\n        </note>\n    "
    },
    "StopInstances": {
      "name": "StopInstances",
      "input": {
        "shape_name": "StopInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of Amazon EC2 instances to stop.\n        </p>\n    ",
            "required": true,
            "flattened": true
          },
          "Force": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        Forces the instance to stop. The instance will not have an opportunity to\n        flush file system caches nor file system meta data.\n        If you use this option, you must perform file system check and repair\n        procedures. This option is not recommended for Windows\n        instances.\n    "
          }
        },
        "documentation": "\n        <p>\n        Stops an instance that uses an Amazon EBS volume as its root device.\n        </p>\n        <p>\n        Instances that use Amazon EBS volumes as their root devices can be quickly\n        stopped and started.\n        When an instance is stopped, the compute resources are released and you\n        are not billed for hourly instance usage.\n        However, your root partition Amazon EBS volume remains, continues to persist\n        your data, and you are charged for Amazon EBS volume usage.\n        You can restart your instance at any time.\n        </p>\n        <note>\n        Before stopping an instance, make sure it is in a state from which it\n        can be restarted.\n        Stopping an instance does not preserve data stored in RAM.\n        Performing this operation on an instance that uses an instance store as its root\n        device returns an error.\n        </note>\n    "
      },
      "output": {
        "shape_name": "StopInstancesResult",
        "type": "structure",
        "members": {
          "StoppingInstances": {
            "shape_name": "InstanceStateChangeList",
            "type": "list",
            "members": {
              "shape_name": "InstanceStateChange",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The ID of the instance whose state changed.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "CurrentState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The current state of the specified instance.\n        </p>\n    ",
                  "xmlname": "currentState"
                },
                "PreviousState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The previous state of the specified instance.\n        </p>\n    ",
                  "xmlname": "previousState"
                }
              },
              "documentation": "\n        <p>\n        Represents a state change for a specific EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of the stopping instances and details on how their state has\n        changed.\n        </p>\n   ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of calling the StopInstances operation.\n        Contains details on how the specified instances are changing state.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Stops an instance that uses an Amazon EBS volume as its root device.\n        Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started.\n        When an instance is stopped, the compute resources are released and you are not billed for hourly instance usage.\n        However, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage.\n        You can restart your instance at any time.\n        </p>\n        <note>\n            <p>\n            Before stopping an instance, make sure it is in a state from\n            which it can be restarted. Stopping an instance does not\n            preserve data stored in RAM.\n            </p>\n            <p>\n            Performing this operation on an instance that uses an instance\n            store as its root device returns an error.\n            </p>\n        </note>\n    "
    },
    "TerminateInstances": {
      "name": "TerminateInstances",
      "input": {
        "shape_name": "TerminateInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of instances to terminate.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to shut down one or more instances. This operation is\n        idempotent; if you terminate an instance more than once, each\n        call will succeed.\n        Terminated instances will remain visible after termination (for approximately\n        one hour).\n        </p>\n        <note>\n        By default, Amazon EC2 deletes all Amazon EBS volumes that were\n        attached when the instance launched.\n        Amazon EBS volumes attached after instance launch continue running.\n        </note>\n    "
      },
      "output": {
        "shape_name": "TerminateInstancesResult",
        "type": "structure",
        "members": {
          "TerminatingInstances": {
            "shape_name": "InstanceStateChangeList",
            "type": "list",
            "members": {
              "shape_name": "InstanceStateChange",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        The ID of the instance whose state changed.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "CurrentState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The current state of the specified instance.\n        </p>\n    ",
                  "xmlname": "currentState"
                },
                "PreviousState": {
                  "shape_name": "InstanceState",
                  "type": "structure",
                  "members": {
                    "Code": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>\n        A 16-bit unsigned integer. The high byte is an opaque internal value\n        and should be ignored. The low byte is set based on the state\n        represented.\n        </p>\n    ",
                      "xmlname": "code"
                    },
                    "Name": {
                      "shape_name": "InstanceStateName",
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "shutting-down",
                        "terminated",
                        "stopping",
                        "stopped"
                      ],
                      "documentation": "\n        <p>\n        The current state of the instance.\n        </p>\n    ",
                      "xmlname": "name"
                    }
                  },
                  "documentation": "\n        <p>\n        The previous state of the specified instance.\n        </p>\n    ",
                  "xmlname": "previousState"
                }
              },
              "documentation": "\n        <p>\n        Represents a state change for a specific EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        The list of the terminating instances and details on how their state has\n        changed.\n        </p>\n    ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of calling the TerminateInstances operation.\n        Contains details on how the specified instances are changing state.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        The TerminateInstances operation shuts down one or more instances. This\n        operation is idempotent; if you terminate an instance more than once, each call\n        will succeed.\n        </p>\n        <p>\n        Terminated instances will remain visible after termination (approximately one\n        hour).\n        </p>\n    "
    },
    "UnassignPrivateIpAddresses": {
      "name": "UnassignPrivateIpAddresses",
      "input": {
        "shape_name": "UnassignPrivateIpAddressesRequest",
        "type": "structure",
        "members": {
          "NetworkInterfaceId": {
            "shape_name": "String",
            "type": "string",
            "documentation": null,
            "required": true
          },
          "PrivateIpAddresses": {
            "shape_name": "PrivateIpAddressStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "PrivateIpAddress"
            },
            "documentation": null,
            "required": true,
            "flattened": true
          }
        },
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": null
    },
    "UnmonitorInstances": {
      "name": "UnmonitorInstances",
      "input": {
        "shape_name": "UnmonitorInstancesRequest",
        "type": "structure",
        "members": {
          "DryRun": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": null
          },
          "InstanceIds": {
            "shape_name": "InstanceIdStringList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "InstanceId"
            },
            "documentation": "\n        <p>\n        The list of Amazon EC2 instances on which to disable monitoring.\n        </p>\n    ",
            "required": true,
            "flattened": true
          }
        },
        "documentation": "\n        <p>\n        A request to disable monitoring for an Amazon EC2 instance.\n        </p>\n    "
      },
      "output": {
        "shape_name": "UnmonitorInstancesResult",
        "type": "structure",
        "members": {
          "InstanceMonitorings": {
            "shape_name": "InstanceMonitoringList",
            "type": "list",
            "members": {
              "shape_name": "InstanceMonitoring",
              "type": "structure",
              "members": {
                "InstanceId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>\n        Instance ID.\n        </p>\n    ",
                  "xmlname": "instanceId"
                },
                "Monitoring": {
                  "shape_name": "Monitoring",
                  "type": "structure",
                  "members": {
                    "State": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>\n        The state of monitoring on an Amazon EC2 instance (ex: enabled,\n        disabled).\n        </p>\n    ",
                      "xmlname": "state"
                    }
                  },
                  "documentation": "\n        <p>\n        Monitoring state for the associated instance.\n        </p>\n    ",
                  "xmlname": "monitoring"
                }
              },
              "documentation": "\n        <p>\n        Represents the monitoring state of an EC2 instance.\n        </p>\n    ",
              "xmlname": "item"
            },
            "documentation": "\n        <p>\n        A list of updated monitoring information for the instances specified in\n        the request.\n        </p>\n    ",
            "xmlname": "instancesSet"
          }
        },
        "documentation": "\n        <p>\n        The result of calling the UnmonitorInstances operation.\n        Contains the updated monitoring status for each instance specified in the\n        request.\n        </p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>\n        Disables monitoring for a running instance.\n        </p>\n    "
    }
  }
}